<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\WESU_DEMO\WESU_DEMO.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\WESU_DEMO\WESU_DEMO.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Wed Oct 24 22:44:12 2018
<BR><P>
<H3>Maximum Stack Usage =       2780 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
iNemoEngine_API_Update &rArr; iNemoEngine_9p6_Update &rArr; SpacePointAlgorithm &rArr; m_kalman_3gyro &rArr; m_mldivide &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[c8]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c8]">ADC1_IRQHandler</a><BR>
 <LI><a href="#[b0]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b0]">BusFault_Handler</a><BR>
 <LI><a href="#[40a]">Term_Update</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d5]">PRINTF</a><BR>
 <LI><a href="#[1d7]">Stderr_Update</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d5]">PRINTF</a><BR>
 <LI><a href="#[af]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[af]">MemManage_Handler</a><BR>
 <LI><a href="#[b1]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b1]">UsageFault_Handler</a><BR>
 <LI><a href="#[271]">Error_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[271]">Error_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[c8]">ADC1_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[10c]">AccEventConfChanged</a> from wesu_config.o(i.AccEventConfChanged) referenced 2 times from wesu_config.o(.constdata)
 <LI><a href="#[106]">AccFsChanged</a> from wesu_config.o(i.AccFsChanged) referenced from wesu_config.o(.constdata)
 <LI><a href="#[107]">AccOdrChanged</a> from wesu_config.o(i.AccOdrChanged) referenced from wesu_config.o(.constdata)
 <LI><a href="#[103]">BleConIntvChanged</a> from wesu_config.o(i.BleConIntvChanged) referenced 2 times from wesu_config.o(.constdata)
 <LI><a href="#[b0]">BusFault_Handler</a> from stm32l1xx_it.o(i.BusFault_Handler) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[eb]">COMP_ACQ_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[cc]">COMP_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[fb]">CopyToSession</a> from wesu_config.o(i.CopyToSession) referenced 2 times from wesu_config.o(.constdata)
 <LI><a href="#[cb]">DAC_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[c1]">DMA1_Channel1_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[c2]">DMA1_Channel2_IRQHandler</a> from stm32l1xx_it.o(i.DMA1_Channel2_IRQHandler) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[c3]">DMA1_Channel3_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[c4]">DMA1_Channel4_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[c5]">DMA1_Channel5_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[c6]">DMA1_Channel6_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[c7]">DMA1_Channel7_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[e6]">DMA2_Channel1_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[e7]">DMA2_Channel2_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[e8]">DMA2_Channel3_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[e9]">DMA2_Channel4_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[ea]">DMA2_Channel5_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[b3]">DebugMon_Handler</a> from stm32l1xx_it.o(i.DebugMon_Handler) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[10f]">DummyRegChange</a> from wesu_config.o(i.DummyRegChange) referenced from wesu_config.o(.constdata)
 <LI><a href="#[bc]">EXTI0_IRQHandler</a> from stm32l1xx_it.o(i.EXTI0_IRQHandler) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[dd]">EXTI15_10_IRQHandler</a> from stm32l1xx_it.o(i.EXTI15_10_IRQHandler) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[bd]">EXTI1_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[be]">EXTI2_IRQHandler</a> from stm32l1xx_it.o(i.EXTI2_IRQHandler) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[bf]">EXTI3_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[c0]">EXTI4_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[cd]">EXTI9_5_IRQHandler</a> from stm32l1xx_it.o(i.EXTI9_5_IRQHandler) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[ba]">FLASH_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[105]">FXMagCalibChanged</a> from wesu_config.o(i.FXMagCalibChanged) referenced 2 times from wesu_config.o(.constdata)
 <LI><a href="#[102]">FwConfigChanged</a> from wesu_config.o(i.FwConfigChanged) referenced 2 times from wesu_config.o(.constdata)
 <LI><a href="#[108]">GyroFsChanged</a> from wesu_config.o(i.GyroFsChanged) referenced from wesu_config.o(.constdata)
 <LI><a href="#[109]">GyroOdrChanged</a> from wesu_config.o(i.GyroOdrChanged) referenced from wesu_config.o(.constdata)
 <LI><a href="#[ae]">HardFault_Handler</a> from stm32l1xx_it.o(i.HardFault_Handler) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[101]">HwConfigChanged</a> from wesu_config.o(i.HwConfigChanged) referenced 2 times from wesu_config.o(.constdata)
 <LI><a href="#[d5]">I2C1_ER_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[d4]">I2C1_EV_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[d7]">I2C2_ER_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[d6]">I2C2_EV_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[8e]">LIS3MDL_Check_WhoAmI</a> from lis3mdl_mag_driver_hl.o(i.LIS3MDL_Check_WhoAmI) referenced 2 times from lis3mdl_mag_driver_hl.o(.data)
 <LI><a href="#[8a]">LIS3MDL_DeInit</a> from lis3mdl_mag_driver_hl.o(i.LIS3MDL_DeInit) referenced 2 times from lis3mdl_mag_driver_hl.o(.data)
 <LI><a href="#[8f]">LIS3MDL_Get_Axes</a> from lis3mdl_mag_driver_hl.o(i.LIS3MDL_Get_Axes) referenced 2 times from lis3mdl_mag_driver_hl.o(.data)
 <LI><a href="#[90]">LIS3MDL_Get_AxesRaw</a> from lis3mdl_mag_driver_hl.o(i.LIS3MDL_Get_AxesRaw) referenced 2 times from lis3mdl_mag_driver_hl.o(.data)
 <LI><a href="#[95]">LIS3MDL_Get_FS</a> from lis3mdl_mag_driver_hl.o(i.LIS3MDL_Get_FS) referenced 2 times from lis3mdl_mag_driver_hl.o(.data)
 <LI><a href="#[92]">LIS3MDL_Get_ODR</a> from lis3mdl_mag_driver_hl.o(i.LIS3MDL_Get_ODR) referenced 2 times from lis3mdl_mag_driver_hl.o(.data)
 <LI><a href="#[91]">LIS3MDL_Get_Sensitivity</a> from lis3mdl_mag_driver_hl.o(i.LIS3MDL_Get_Sensitivity) referenced 2 times from lis3mdl_mag_driver_hl.o(.data)
 <LI><a href="#[8d]">LIS3MDL_Get_WhoAmI</a> from lis3mdl_mag_driver_hl.o(i.LIS3MDL_Get_WhoAmI) referenced 2 times from lis3mdl_mag_driver_hl.o(.data)
 <LI><a href="#[89]">LIS3MDL_Init</a> from lis3mdl_mag_driver_hl.o(i.LIS3MDL_Init) referenced 2 times from lis3mdl_mag_driver_hl.o(.data)
 <LI><a href="#[8c]">LIS3MDL_Sensor_Disable</a> from lis3mdl_mag_driver_hl.o(i.LIS3MDL_Sensor_Disable) referenced 2 times from lis3mdl_mag_driver_hl.o(.data)
 <LI><a href="#[8b]">LIS3MDL_Sensor_Enable</a> from lis3mdl_mag_driver_hl.o(i.LIS3MDL_Sensor_Enable) referenced 2 times from lis3mdl_mag_driver_hl.o(.data)
 <LI><a href="#[96]">LIS3MDL_Set_FS</a> from lis3mdl_mag_driver_hl.o(i.LIS3MDL_Set_FS) referenced 2 times from lis3mdl_mag_driver_hl.o(.data)
 <LI><a href="#[97]">LIS3MDL_Set_FS_Value</a> from lis3mdl_mag_driver_hl.o(i.LIS3MDL_Set_FS_Value) referenced 2 times from lis3mdl_mag_driver_hl.o(.data)
 <LI><a href="#[93]">LIS3MDL_Set_ODR</a> from lis3mdl_mag_driver_hl.o(i.LIS3MDL_Set_ODR) referenced 2 times from lis3mdl_mag_driver_hl.o(.data)
 <LI><a href="#[94]">LIS3MDL_Set_ODR_Value</a> from lis3mdl_mag_driver_hl.o(i.LIS3MDL_Set_ODR_Value) referenced 2 times from lis3mdl_mag_driver_hl.o(.data)
 <LI><a href="#[9d]">LPS25HB_P_Check_WhoAmI</a> from lps25hb_driver_hl.o(i.LPS25HB_P_Check_WhoAmI) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[99]">LPS25HB_P_DeInit</a> from lps25hb_driver_hl.o(i.LPS25HB_P_DeInit) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[9f]">LPS25HB_P_Get_ODR</a> from lps25hb_driver_hl.o(i.LPS25HB_P_Get_ODR) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[9e]">LPS25HB_P_Get_Press</a> from lps25hb_driver_hl.o(i.LPS25HB_P_Get_Press) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[9c]">LPS25HB_P_Get_WhoAmI</a> from lps25hb_driver_hl.o(i.LPS25HB_P_Get_WhoAmI) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[98]">LPS25HB_P_Init</a> from lps25hb_driver_hl.o(i.LPS25HB_P_Init) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[9b]">LPS25HB_P_Sensor_Disable</a> from lps25hb_driver_hl.o(i.LPS25HB_P_Sensor_Disable) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[9a]">LPS25HB_P_Sensor_Enable</a> from lps25hb_driver_hl.o(i.LPS25HB_P_Sensor_Enable) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[a0]">LPS25HB_P_Set_ODR</a> from lps25hb_driver_hl.o(i.LPS25HB_P_Set_ODR) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[a1]">LPS25HB_P_Set_ODR_Value</a> from lps25hb_driver_hl.o(i.LPS25HB_P_Set_ODR_Value) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[a7]">LPS25HB_T_Check_WhoAmI</a> from lps25hb_driver_hl.o(i.LPS25HB_T_Check_WhoAmI) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[a3]">LPS25HB_T_DeInit</a> from lps25hb_driver_hl.o(i.LPS25HB_T_DeInit) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[a9]">LPS25HB_T_Get_ODR</a> from lps25hb_driver_hl.o(i.LPS25HB_T_Get_ODR) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[a8]">LPS25HB_T_Get_Temp</a> from lps25hb_driver_hl.o(i.LPS25HB_T_Get_Temp) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[a6]">LPS25HB_T_Get_WhoAmI</a> from lps25hb_driver_hl.o(i.LPS25HB_T_Get_WhoAmI) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[a2]">LPS25HB_T_Init</a> from lps25hb_driver_hl.o(i.LPS25HB_T_Init) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[a5]">LPS25HB_T_Sensor_Disable</a> from lps25hb_driver_hl.o(i.LPS25HB_T_Sensor_Disable) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[a4]">LPS25HB_T_Sensor_Enable</a> from lps25hb_driver_hl.o(i.LPS25HB_T_Sensor_Enable) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[aa]">LPS25HB_T_Set_ODR</a> from lps25hb_driver_hl.o(i.LPS25HB_T_Set_ODR) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[ab]">LPS25HB_T_Set_ODR_Value</a> from lps25hb_driver_hl.o(i.LPS25HB_T_Set_ODR_Value) referenced 2 times from lps25hb_driver_hl.o(.data)
 <LI><a href="#[7d]">LSM6DS3_G_Check_WhoAmI</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Check_WhoAmI) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[79]">LSM6DS3_G_DeInit</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_DeInit) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[7e]">LSM6DS3_G_Get_Axes</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_Axes) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[7f]">LSM6DS3_G_Get_AxesRaw</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_AxesRaw) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[87]">LSM6DS3_G_Get_Axes_Status</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_Axes_Status) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[84]">LSM6DS3_G_Get_FS</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_FS) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[81]">LSM6DS3_G_Get_ODR</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_ODR) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[80]">LSM6DS3_G_Get_Sensitivity</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_Sensitivity) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[7c]">LSM6DS3_G_Get_WhoAmI</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_WhoAmI) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[78]">LSM6DS3_G_Init</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Init) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[7b]">LSM6DS3_G_Sensor_Disable</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Sensor_Disable) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[7a]">LSM6DS3_G_Sensor_Enable</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Sensor_Enable) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[88]">LSM6DS3_G_Set_Axes_Status</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_Axes_Status) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[85]">LSM6DS3_G_Set_FS</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_FS) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[86]">LSM6DS3_G_Set_FS_Value</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_FS_Value) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[82]">LSM6DS3_G_Set_ODR</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_ODR) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[83]">LSM6DS3_G_Set_ODR_Value</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_ODR_Value) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[6c]">LSM6DS3_X_Check_WhoAmI</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Check_WhoAmI) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[68]">LSM6DS3_X_DeInit</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_DeInit) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[5f]">LSM6DS3_X_Disable_6D_Orientation</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_6D_Orientation) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[58]">LSM6DS3_X_Disable_Double_Tap_Detection</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Double_Tap_Detection) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[43]">LSM6DS3_X_Disable_Free_Fall_Detection</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Free_Fall_Detection) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[47]">LSM6DS3_X_Disable_Pedometer</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Pedometer) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[55]">LSM6DS3_X_Disable_Single_Tap_Detection</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Single_Tap_Detection) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[4b]">LSM6DS3_X_Disable_Step_Counter_Reset</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Step_Counter_Reset) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[4e]">LSM6DS3_X_Disable_Tilt_Detection</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Tilt_Detection) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[51]">LSM6DS3_X_Disable_Wake_Up_Detection</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Wake_Up_Detection) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[5e]">LSM6DS3_X_Enable_6D_Orientation</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_6D_Orientation) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[57]">LSM6DS3_X_Enable_Double_Tap_Detection</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Double_Tap_Detection) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[42]">LSM6DS3_X_Enable_Free_Fall_Detection</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Free_Fall_Detection) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[46]">LSM6DS3_X_Enable_Pedometer</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Pedometer) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[54]">LSM6DS3_X_Enable_Single_Tap_Detection</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Single_Tap_Detection) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[4a]">LSM6DS3_X_Enable_Step_Counter_Reset</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Step_Counter_Reset) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[4d]">LSM6DS3_X_Enable_Tilt_Detection</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Tilt_Detection) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[50]">LSM6DS3_X_Enable_Wake_Up_Detection</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Wake_Up_Detection) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[60]">LSM6DS3_X_Get_6D_Orientation_Status</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_Status) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[62]">LSM6DS3_X_Get_6D_Orientation_XH</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_XH) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[61]">LSM6DS3_X_Get_6D_Orientation_XL</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_XL) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[64]">LSM6DS3_X_Get_6D_Orientation_YH</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_YH) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[63]">LSM6DS3_X_Get_6D_Orientation_YL</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_YL) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[66]">LSM6DS3_X_Get_6D_Orientation_ZH</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_ZH) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[65]">LSM6DS3_X_Get_6D_Orientation_ZL</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_ZL) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[6d]">LSM6DS3_X_Get_Axes</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Axes) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[6e]">LSM6DS3_X_Get_AxesRaw</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_AxesRaw) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[76]">LSM6DS3_X_Get_Axes_Status</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Axes_Status) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[59]">LSM6DS3_X_Get_Double_Tap_Detection_Status</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Double_Tap_Detection_Status) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[73]">LSM6DS3_X_Get_FS</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_FS) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[44]">LSM6DS3_X_Get_Free_Fall_Detection_Status</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Free_Fall_Detection_Status) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[70]">LSM6DS3_X_Get_ODR</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_ODR) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[48]">LSM6DS3_X_Get_Pedometer_Status</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Pedometer_Status) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[6f]">LSM6DS3_X_Get_Sensitivity</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Sensitivity) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[56]">LSM6DS3_X_Get_Single_Tap_Detection_Status</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Single_Tap_Detection_Status) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[49]">LSM6DS3_X_Get_Step_Count</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Step_Count) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[4f]">LSM6DS3_X_Get_Tilt_Detection_Status</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Tilt_Detection_Status) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[52]">LSM6DS3_X_Get_Wake_Up_Detection_Status</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Wake_Up_Detection_Status) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[6b]">LSM6DS3_X_Get_WhoAmI</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_WhoAmI) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[67]">LSM6DS3_X_Init</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Init) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[6a]">LSM6DS3_X_Sensor_Disable</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Sensor_Disable) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[69]">LSM6DS3_X_Sensor_Enable</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Sensor_Enable) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[77]">LSM6DS3_X_Set_Axes_Status</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Axes_Status) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[74]">LSM6DS3_X_Set_FS</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_FS) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[75]">LSM6DS3_X_Set_FS_Value</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_FS_Value) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[45]">LSM6DS3_X_Set_Free_Fall_Threshold</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Free_Fall_Threshold) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[71]">LSM6DS3_X_Set_ODR</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_ODR) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[72]">LSM6DS3_X_Set_ODR_Value</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_ODR_Value) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[4c]">LSM6DS3_X_Set_Pedometer_Threshold</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Pedometer_Threshold) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[5d]">LSM6DS3_X_Set_Tap_Duration_Time</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Tap_Duration_Time) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[5c]">LSM6DS3_X_Set_Tap_Quiet_Time</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Tap_Quiet_Time) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[5b]">LSM6DS3_X_Set_Tap_Shock_Time</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Tap_Shock_Time) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[5a]">LSM6DS3_X_Set_Tap_Threshold</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Tap_Threshold) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[53]">LSM6DS3_X_Set_Wake_Up_Threshold</a> from lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Wake_Up_Threshold) referenced 2 times from lsm6ds3_acc_gyro_driver_hl.o(.data)
 <LI><a href="#[fa]">LedControlMaskChanged</a> from wesu_config.o(i.LedControlMaskChanged) referenced 2 times from wesu_config.o(.constdata)
 <LI><a href="#[10a]">MagFsChanged</a> from wesu_config.o(i.MagFsChanged) referenced from wesu_config.o(.constdata)
 <LI><a href="#[10b]">MagOdrChanged</a> from wesu_config.o(i.MagOdrChanged) referenced from wesu_config.o(.constdata)
 <LI><a href="#[af]">MemManage_Handler</a> from stm32l1xx_it.o(i.MemManage_Handler) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[100]">MotionFxCtrlChanged</a> from wesu_config.o(i.MotionFxCtrlChanged) referenced 2 times from wesu_config.o(.constdata)
 <LI><a href="#[ad]">NMI_Handler</a> from stm32l1xx_it.o(i.NMI_Handler) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[b7]">PVD_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[ff]">PedometerCtrlChanged</a> from wesu_config.o(i.PedometerCtrlChanged) referenced 2 times from wesu_config.o(.constdata)
 <LI><a href="#[b4]">PendSV_Handler</a> from stm32l1xx_it.o(i.PendSV_Handler) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[10d]">PressOdrChanged</a> from wesu_config.o(i.PressOdrChanged) referenced from wesu_config.o(.constdata)
 <LI><a href="#[26]">ProcDbgDoNotReplyHidden</a> from console.o(i.ProcDbgDoNotReplyHidden) referenced 6 times from console.o(.data)
 <LI><a href="#[20]">ProcDbgDumpAccGyroHidden</a> from console.o(i.ProcDbgDumpAccGyroHidden) referenced 2 times from console.o(.data)
 <LI><a href="#[21]">ProcDbgDumpMagHidden</a> from console.o(i.ProcDbgDumpMagHidden) referenced 2 times from console.o(.data)
 <LI><a href="#[22]">ProcDbgDumpPressTempHidden</a> from console.o(i.ProcDbgDumpPressTempHidden) referenced 2 times from console.o(.data)
 <LI><a href="#[27]">ProcDbgEchoNameHidden</a> from console.o(i.ProcDbgEchoNameHidden) referenced 2 times from console.o(.data)
 <LI><a href="#[3]">ProcDbgEmptyCmd</a> from console.o(i.ProcDbgEmptyCmd) referenced 2 times from console.o(.data)
 <LI><a href="#[e]">ProcDbgEnterConnOnly</a> from console.o(i.ProcDbgEnterConnOnly) referenced 2 times from console.o(.data)
 <LI><a href="#[d]">ProcDbgEnterStop</a> from console.o(i.ProcDbgEnterStop) referenced 2 times from console.o(.data)
 <LI><a href="#[c]">ProcDbgEnterStopWBle</a> from console.o(i.ProcDbgEnterStopWBle) referenced 2 times from console.o(.data)
 <LI><a href="#[18]">ProcDbgEraseLicenses</a> from console.o(i.ProcDbgEraseLicenses) referenced 2 times from console.o(.data)
 <LI><a href="#[17]">ProcDbgGetAlgoStatus</a> from console.o(i.ProcDbgGetAlgoStatus) referenced 2 times from console.o(.data)
 <LI><a href="#[16]">ProcDbgGetBackupData</a> from console.o(i.ProcDbgGetBackupData) referenced 2 times from console.o(.data)
 <LI><a href="#[13]">ProcDbgGetBluenrgInfo</a> from console.o(i.ProcDbgGetBluenrgInfo) referenced 2 times from console.o(.data)
 <LI><a href="#[0]">ProcDbgGetFwVersion</a> from console.o(i.ProcDbgGetFwVersion) referenced 2 times from console.o(.data)
 <LI><a href="#[19]">ProcDbgGetLic1</a> from console.o(i.ProcDbgGetLic1) referenced 2 times from console.o(.data)
 <LI><a href="#[1b]">ProcDbgGetLic2</a> from console.o(i.ProcDbgGetLic2) referenced 2 times from console.o(.data)
 <LI><a href="#[1d]">ProcDbgGetLic3</a> from console.o(i.ProcDbgGetLic3) referenced 2 times from console.o(.data)
 <LI><a href="#[1]">ProcDbgGetMcuId</a> from console.o(i.ProcDbgGetMcuId) referenced 2 times from console.o(.data)
 <LI><a href="#[6]">ProcDbgGetPersRegVal</a> from console.o(i.ProcDbgGetPersRegVal) referenced 4 times from console.o(.data)
 <LI><a href="#[f]">ProcDbgGetPowerInfo</a> from console.o(i.ProcDbgGetPowerInfo) referenced 2 times from console.o(.data)
 <LI><a href="#[4]">ProcDbgGetSessionRegVal</a> from console.o(i.ProcDbgGetSessionRegVal) referenced 4 times from console.o(.data)
 <LI><a href="#[2]">ProcDbgGetSysInfo</a> from console.o(i.ProcDbgGetSysInfo) referenced 2 times from console.o(.data)
 <LI><a href="#[2c]">ProcDbgHelp</a> from console.o(i.ProcDbgHelp) referenced 2 times from console.o(.data)
 <LI><a href="#[1f]">ProcDbgHelpHidden</a> from console.o(i.ProcDbgHelpHidden) referenced 2 times from console.o(.data)
 <LI><a href="#[12]">ProcDbgLedBlinkme</a> from console.o(i.ProcDbgLedBlinkme) referenced 2 times from console.o(.data)
 <LI><a href="#[10]">ProcDbgMinPower</a> from console.o(i.ProcDbgMinPower) referenced 2 times from console.o(.data)
 <LI><a href="#[11]">ProcDbgNormPower</a> from console.o(i.ProcDbgNormPower) referenced 2 times from console.o(.data)
 <LI><a href="#[23]">ProcDbgRebootAccGyroHidden</a> from console.o(i.ProcDbgRebootAccGyroHidden) referenced 2 times from console.o(.data)
 <LI><a href="#[24]">ProcDbgRebootMagHidden</a> from console.o(i.ProcDbgRebootMagHidden) referenced 2 times from console.o(.data)
 <LI><a href="#[25]">ProcDbgRebootPressTempHidden</a> from console.o(i.ProcDbgRebootPressTempHidden) referenced 2 times from console.o(.data)
 <LI><a href="#[2a]">ProcDbgResetPower</a> from console.o(i.ProcDbgResetPower) referenced 2 times from console.o(.data)
 <LI><a href="#[29]">ProcDbgSTC3115CurrentHidden</a> from console.o(i.ProcDbgSTC3115CurrentHidden) referenced 2 times from console.o(.data)
 <LI><a href="#[28]">ProcDbgSTC3115VoltHidden</a> from console.o(i.ProcDbgSTC3115VoltHidden) referenced 2 times from console.o(.data)
 <LI><a href="#[14]">ProcDbgSetBleConIntvMode</a> from console.o(i.ProcDbgSetBleConIntvMode) referenced 2 times from console.o(.data)
 <LI><a href="#[1a]">ProcDbgSetLic1</a> from console.o(i.ProcDbgSetLic1) referenced 2 times from console.o(.data)
 <LI><a href="#[1c]">ProcDbgSetLic2</a> from console.o(i.ProcDbgSetLic2) referenced 2 times from console.o(.data)
 <LI><a href="#[1e]">ProcDbgSetLic3</a> from console.o(i.ProcDbgSetLic3) referenced 2 times from console.o(.data)
 <LI><a href="#[7]">ProcDbgSetPersRegVal</a> from console.o(i.ProcDbgSetPersRegVal) referenced 4 times from console.o(.data)
 <LI><a href="#[5]">ProcDbgSetSessionRegVal</a> from console.o(i.ProcDbgSetSessionRegVal) referenced 4 times from console.o(.data)
 <LI><a href="#[15]">ProcDbgSetUsbBleBridge</a> from console.o(i.ProcDbgSetUsbBleBridge) referenced 2 times from console.o(.data)
 <LI><a href="#[b]">ProcDbgSetdate</a> from console.o(i.ProcDbgSetdate) referenced 2 times from console.o(.data)
 <LI><a href="#[9]">ProcDbgSettime</a> from console.o(i.ProcDbgSettime) referenced 2 times from console.o(.data)
 <LI><a href="#[2b]">ProcDbgTestIwdg</a> from console.o(i.ProcDbgTestIwdg) referenced 2 times from console.o(.data)
 <LI><a href="#[a]">ProcDbgViewdate</a> from console.o(i.ProcDbgViewdate) referenced 2 times from console.o(.data)
 <LI><a href="#[8]">ProcDbgViewtime</a> from console.o(i.ProcDbgViewtime) referenced 2 times from console.o(.data)
 <LI><a href="#[110]">PwrModeAltRegChange</a> from wesu_config.o(i.PwrModeAltRegChange) referenced from wesu_config.o(.constdata)
 <LI><a href="#[fe]">PwrModeControlChanged</a> from wesu_config.o(i.PwrModeControlChanged) referenced 2 times from wesu_config.o(.constdata)
 <LI><a href="#[bb]">RCC_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[de]">RTC_Alarm_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[f5]">RTC_TimeStampConfigDefault</a> from main.o(i.RTC_TimeStampConfigDefault) referenced from main.o(i.User_Init)
 <LI><a href="#[b9]">RTC_WKUP_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[f9]">ReadOnly</a> from wesu_config.o(i.ReadOnly) referenced 7 times from wesu_config.o(.constdata)
 <LI><a href="#[104]">RedLedControlMaskChanged</a> from wesu_config.o(i.RedLedControlMaskChanged) referenced 2 times from wesu_config.o(.constdata)
 <LI><a href="#[ac]">Reset_Handler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[10e]">RtcConfChanged</a> from wesu_config.o(i.RtcConfChanged) referenced 2 times from wesu_config.o(.constdata)
 <LI><a href="#[d8]">SPI1_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[d9]">SPI2_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[e3]">SPI3_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[3c]">STC3115_AlarmSetSOCTh</a> from stc3115.o(i.STC3115_AlarmSetSOCTh) referenced 2 times from stc3115.o(.data)
 <LI><a href="#[3b]">STC3115_AlarmSetVoTh</a> from stc3115.o(i.STC3115_AlarmSetVoTh) referenced 2 times from stc3115.o(.data)
 <LI><a href="#[40]">STC3115_ClearIT</a> from stc3115.o(i.STC3115_ClearIT) referenced 2 times from stc3115.o(.data)
 <LI><a href="#[39]">STC3115_GetAlarmStatus</a> from stc3115.o(i.STC3115_GetAlarmStatus) referenced 2 times from stc3115.o(.data)
 <LI><a href="#[37]">STC3115_GetChargeValue</a> from stc3115.o(i.STC3115_GetChargeValue) referenced 2 times from stc3115.o(.data)
 <LI><a href="#[34]">STC3115_GetCurrent</a> from stc3115.o(i.STC3115_GetCurrent) referenced 2 times from stc3115.o(.data)
 <LI><a href="#[3d]">STC3115_GetIT</a> from stc3115.o(i.STC3115_GetIT) referenced 2 times from stc3115.o(.data)
 <LI><a href="#[3a]">STC3115_GetITState</a> from stc3115.o(i.STC3115_GetITState) referenced 2 times from stc3115.o(.data)
 <LI><a href="#[33]">STC3115_GetOCV</a> from stc3115.o(i.STC3115_GetOCV) referenced 2 times from stc3115.o(.data)
 <LI><a href="#[38]">STC3115_GetPresence</a> from stc3115.o(i.STC3115_GetPresence) referenced 2 times from stc3115.o(.data)
 <LI><a href="#[32]">STC3115_GetSOC</a> from stc3115.o(i.STC3115_GetSOC) referenced 2 times from stc3115.o(.data)
 <LI><a href="#[35]">STC3115_GetTemperature</a> from stc3115.o(i.STC3115_GetTemperature) referenced 2 times from stc3115.o(.data)
 <LI><a href="#[36]">STC3115_GetVoltage</a> from stc3115.o(i.STC3115_GetVoltage) referenced 2 times from stc3115.o(.data)
 <LI><a href="#[2e]">STC3115_Init</a> from stc3115.o(i.STC3115_Init) referenced 2 times from stc3115.o(.data)
 <LI><a href="#[41]">STC3115_PowerSavingMode</a> from stc3115.o(i.STC3115_PowerSavingMode) referenced 2 times from stc3115.o(.data)
 <LI><a href="#[30]">STC3115_Reset</a> from stc3115.o(i.STC3115_Reset) referenced 2 times from stc3115.o(.data)
 <LI><a href="#[3e]">STC3115_SetIT</a> from stc3115.o(i.STC3115_SetIT) referenced 2 times from stc3115.o(.data)
 <LI><a href="#[31]">STC3115_Stop</a> from stc3115.o(i.STC3115_Stop) referenced 2 times from stc3115.o(.data)
 <LI><a href="#[3f]">STC3115_StopIT</a> from stc3115.o(i.STC3115_StopIT) referenced 2 times from stc3115.o(.data)
 <LI><a href="#[2f]">STC3115_Task</a> from stc3115.o(i.STC3115_Task) referenced 2 times from stc3115.o(.data)
 <LI><a href="#[b2]">SVC_Handler</a> from stm32l1xx_it.o(i.SVC_Handler) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[b5]">SysTick_Handler</a> from stm32l1xx_it.o(i.SysTick_Handler) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[f4]">SystemClock_Config_HSE_24MHz</a> from main.o(i.SystemClock_Config_HSE_24MHz) referenced from wesu_config.o(i.SystemGotoLowPowerRunMode)
 <LI><a href="#[f3]">SystemClock_Config_MSI_4MHz</a> from main.o(i.SystemClock_Config_MSI_4MHz) referenced from wesu_config.o(i.SystemGotoLowPowerMode)
 <LI><a href="#[f3]">SystemClock_Config_MSI_4MHz</a> from main.o(i.SystemClock_Config_MSI_4MHz) referenced from wesu_config.o(i.SystemGotoLowPowerRunModeJustAcc)
 <LI><a href="#[f3]">SystemClock_Config_MSI_4MHz</a> from main.o(i.SystemClock_Config_MSI_4MHz) referenced from wesu_config.o(i.SystemGotoLowPowerRunWithAlgos)
 <LI><a href="#[f3]">SystemClock_Config_MSI_4MHz</a> from main.o(i.SystemClock_Config_MSI_4MHz) referenced from wesu_config.o(i.SystemGotoRunLowPowerSleepMode)
 <LI><a href="#[f3]">SystemClock_Config_MSI_4MHz</a> from main.o(i.SystemClock_Config_MSI_4MHz) referenced from wesu_config.o(i.SystemGotoRunSleepMode)
 <LI><a href="#[2d]">SystemClock_Config_RTC_HSE32MHz</a> from main.o(i.SystemClock_Config_RTC_HSE32MHz) referenced 4 times from main.o(.data)
 <LI><a href="#[2d]">SystemClock_Config_RTC_HSE32MHz</a> from main.o(i.SystemClock_Config_RTC_HSE32MHz) referenced from wesu_config.o(i.SystemGotoFullRunMode)
 <LI><a href="#[2d]">SystemClock_Config_RTC_HSE32MHz</a> from main.o(i.SystemClock_Config_RTC_HSE32MHz) referenced from wesu_config.o(i.SystemGotoFullRunWfiMode)
 <LI><a href="#[2d]">SystemClock_Config_RTC_HSE32MHz</a> from main.o(i.SystemClock_Config_RTC_HSE32MHz) referenced from main.o(i.main)
 <LI><a href="#[ed]">SystemInit</a> from system_stm32l1xx.o(i.SystemInit) referenced from startup_stm32l151xe.o(.text)
 <LI><a href="#[b8]">TAMPER_STAMP_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[cf]">TIM10_IRQHandler</a> from stm32l1xx_it.o(i.TIM10_IRQHandler) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[d0]">TIM11_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[d1]">TIM2_IRQHandler</a> from stm32l1xx_it.o(i.TIM2_IRQHandler) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[d2]">TIM3_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[d3]">TIM4_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[e2]">TIM5_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[e0]">TIM6_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[e1]">TIM7_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[ce]">TIM9_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[fd]">TimerFreqChanged</a> from wesu_config.o(i.TimerFreqChanged) referenced 2 times from wesu_config.o(.constdata)
 <LI><a href="#[fc]">TxPwrLvlChange</a> from wesu_config.o(i.TxPwrLvlChange) referenced from wesu_config.o(.constdata)
 <LI><a href="#[e4]">UART4_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[e5]">UART5_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[da]">USART1_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[db]">USART2_IRQHandler</a> from stm32l1xx_it.o(i.USART2_IRQHandler) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[dc]">USART3_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[df]">USB_FS_WKUP_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[c9]">USB_HP_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[ca]">USB_LP_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[b1]">UsageFault_Handler</a> from stm32l1xx_it.o(i.UsageFault_Handler) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[b6]">WWDG_IRQHandler</a> from startup_stm32l151xe.o(.text) referenced from startup_stm32l151xe.o(RESET)
 <LI><a href="#[ee]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32l151xe.o(.text)
 <LI><a href="#[f0]">_sbackspace</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[f1]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[ef]">_sgetc</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[f8]">_snputc</a> from printfa.o(i._snputc) referenced from printfa.o(i.__0vsnprintf)
 <LI><a href="#[f7]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[12a]">compass_API_ForceReCalibration</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[125]">compass_API_Init</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[129]">compass_API_IsCalibrated</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[128]">compass_API_Run</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[126]">compass_API_SaveAcc</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[127]">compass_API_SaveMag</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[f6]">fputc</a> from console.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[12b]">getCalibrationData</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[124]">iNemoEngine_API_Get_Lib_Version</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[123]">iNemoEngine_API_Propagate</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[122]">iNemoEngine_API_Update</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[11e]">iNemoEngine_API_enable_6X</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[11f]">iNemoEngine_API_enable_9X</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[121]">iNemoEngine_API_getGbias</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[11b]">iNemoEngine_API_getKnobs</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[11c]">iNemoEngine_API_get_status_6X</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[11d]">iNemoEngine_API_get_status_9X</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[119]">iNemoEngine_API_initialize</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[120]">iNemoEngine_API_setGbias</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[11a]">iNemoEngine_API_setKnobs</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
 <LI><a href="#[f2]">isspace</a> from isspace_c.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[ec]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[114]">osx_MAR_CoreAPI_GetLibVersion</a> from osx_motion_ar.o(.text) referenced from osx_motion_ar.o(.constdata)
 <LI><a href="#[111]">osx_MAR_CoreAPI_Initialize</a> from osx_motion_ar.o(.text) referenced from osx_motion_ar.o(.constdata)
 <LI><a href="#[112]">osx_MAR_CoreAPI_SetOrientation_Acc</a> from osx_motion_ar.o(.text) referenced from osx_motion_ar.o(.constdata)
 <LI><a href="#[113]">osx_MAR_CoreAPI_Update</a> from osx_motion_ar.o(.text) referenced from osx_motion_ar.o(.constdata)
 <LI><a href="#[118]">osx_MCP_CoreAPI_GetLibVersion</a> from osx_motion_cp.o(.text) referenced from osx_motion_cp.o(.constdata)
 <LI><a href="#[115]">osx_MCP_CoreAPI_Initialize</a> from osx_motion_cp.o(.text) referenced from osx_motion_cp.o(.constdata)
 <LI><a href="#[116]">osx_MCP_CoreAPI_SetOrientation_Acc</a> from osx_motion_cp.o(.text) referenced from osx_motion_cp.o(.constdata)
 <LI><a href="#[117]">osx_MCP_CoreAPI_Update</a> from osx_motion_cp.o(.text) referenced from osx_motion_cp.o(.constdata)
 <LI><a href="#[12c]">setCalibrationData</a> from osx_motion_fx.o(.text) referenced from osx_motion_fx.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[ee]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(.text)
</UL>
<P><STRONG><a name="[43a]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[12d]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1c2]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[43b]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[43c]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[43d]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[43e]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[43f]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[ac]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[c8]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[eb]"></a>COMP_ACQ_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[cc]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[cb]"></a>DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[c1]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[c3]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[c4]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[c5]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[c6]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[c7]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[e6]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[e7]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[e8]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[e9]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[ea]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[bd]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[bf]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[c0]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[ba]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[d5]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[d4]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[d7]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[d6]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[b7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[bb]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[de]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[b9]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[d8]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[d9]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[e3]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[b8]"></a>TAMPER_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[d0]"></a>TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[d2]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[d3]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[e2]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[e0]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[e1]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[ce]"></a>TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[e4]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[e5]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[da]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[dc]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[df]"></a>USB_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[c9]"></a>USB_HP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[ca]"></a>USB_LP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[b6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[14a]"></a>osx_MotionAR_Initialize</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, osx_motion_ar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = osx_MotionAR_Initialize &rArr; osx_LibLocker_RegisterLicense &rArr; osx_LibLocker_Decrypt32 &rArr; osx_LibLocker_Decrypt16
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_UnwrapAPIs
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_SetHandle
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_RegisterLicense
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm1_init
</UL>

<P><STRONG><a name="[14f]"></a>osx_MotionAR_Update</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, osx_motion_ar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osx_MotionAR_Update &rArr; osx_LibLocker_Authenticate &rArr; osx_LibLocker_RetrieveUID
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm1_run
</UL>

<P><STRONG><a name="[150]"></a>osx_MotionAR_SetOrientation_Acc</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, osx_motion_ar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osx_MotionAR_SetOrientation_Acc &rArr; osx_LibLocker_Authenticate &rArr; osx_LibLocker_RetrieveUID
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm1_init
</UL>

<P><STRONG><a name="[151]"></a>osx_MotionAR_GetLibVersion</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, osx_motion_ar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osx_MotionAR_GetLibVersion &rArr; osx_LibLocker_Authenticate &rArr; osx_LibLocker_RetrieveUID
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm1_init
</UL>

<P><STRONG><a name="[15b]"></a>osx_MotionCP_Initialize</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, osx_motion_cp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = osx_MotionCP_Initialize &rArr; osx_LibLocker_RegisterLicense &rArr; osx_LibLocker_Decrypt32 &rArr; osx_LibLocker_Decrypt16
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_UnwrapAPIs
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_SetHandle
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_RegisterLicense
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm2_init
</UL>

<P><STRONG><a name="[15c]"></a>osx_MotionCP_Update</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, osx_motion_cp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osx_MotionCP_Update &rArr; osx_LibLocker_Authenticate &rArr; osx_LibLocker_RetrieveUID
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm2_run
</UL>

<P><STRONG><a name="[15d]"></a>osx_MotionCP_SetOrientation_Acc</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, osx_motion_cp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osx_MotionCP_SetOrientation_Acc &rArr; osx_LibLocker_Authenticate &rArr; osx_LibLocker_RetrieveUID
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm2_init
</UL>

<P><STRONG><a name="[15e]"></a>osx_MotionCP_GetLibVersion</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, osx_motion_cp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osx_MotionCP_GetLibVersion &rArr; osx_LibLocker_Authenticate &rArr; osx_LibLocker_RetrieveUID
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm2_init
</UL>

<P><STRONG><a name="[440]"></a>quaternion_reset_6X</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, osx_motion_fx.o(.text), UNUSED)

<P><STRONG><a name="[173]"></a>m_b_sum</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[176]"></a>m_sum</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[177]"></a>m_std</STRONG> (Thumb, 252 bytes, Stack size 72 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = m_std &rArr; sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[183]"></a>rotVect_6X</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = rotVect_6X &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Propagate
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
</UL>

<P><STRONG><a name="[185]"></a>m_q2ypr2_eml</STRONG> (Thumb, 238 bytes, Stack size 48 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = m_q2ypr2_eml &rArr; m_rt_atan2f_snf &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_rt_atan2f_snf
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_update
</UL>

<P><STRONG><a name="[18b]"></a>m_b_std</STRONG> (Thumb, 284 bytes, Stack size 40 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[18c]"></a>m_c_sum</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>

<P><STRONG><a name="[18e]"></a>m_d_sum</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[18f]"></a>m_e_sum</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[190]"></a>m_f_sum</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[191]"></a>m_g_sum</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[192]"></a>m_h_sum</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[193]"></a>osx_MotionFX_initialize</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = osx_MotionFX_initialize &rArr; osx_LibLocker_RegisterLicense &rArr; osx_LibLocker_Decrypt32 &rArr; osx_LibLocker_Decrypt16
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_UnwrapAPIs
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_SetHandle
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_RegisterLicense
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_StartupConfig
</UL>

<P><STRONG><a name="[194]"></a>osx_MotionFX_setKnobs</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osx_MotionFX_setKnobs &rArr; osx_LibLocker_Authenticate &rArr; osx_LibLocker_RetrieveUID
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_StartupConfig
</UL>

<P><STRONG><a name="[195]"></a>osx_MotionFX_getKnobs</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osx_MotionFX_getKnobs &rArr; osx_LibLocker_Authenticate &rArr; osx_LibLocker_RetrieveUID
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_StartupConfig
</UL>

<P><STRONG><a name="[196]"></a>osx_MotionFX_getStatus_6X</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[197]"></a>osx_MotionFX_getStatus_9X</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[198]"></a>osx_MotionFX_enable_6X</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osx_MotionFX_enable_6X &rArr; osx_LibLocker_Authenticate &rArr; osx_LibLocker_RetrieveUID
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_StartupConfig
</UL>

<P><STRONG><a name="[199]"></a>osx_MotionFX_enable_9X</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osx_MotionFX_enable_9X &rArr; osx_LibLocker_Authenticate &rArr; osx_LibLocker_RetrieveUID
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_StartupConfig
</UL>

<P><STRONG><a name="[19a]"></a>osx_MotionFX_setGbias</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[19b]"></a>osx_MotionFX_getGbias</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, osx_motion_fx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[19c]"></a>osx_MotionFX_update</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = osx_MotionFX_update &rArr; osx_LibLocker_Authenticate &rArr; osx_LibLocker_RetrieveUID
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_Process
</UL>

<P><STRONG><a name="[19d]"></a>osx_MotionFX_propagate</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = osx_MotionFX_propagate &rArr; osx_LibLocker_Authenticate &rArr; osx_LibLocker_RetrieveUID
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_Process_High
</UL>

<P><STRONG><a name="[19e]"></a>osx_MotionFX_getLibVersion</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osx_MotionFX_getLibVersion &rArr; osx_LibLocker_Authenticate &rArr; osx_LibLocker_RetrieveUID
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_StartupConfig
</UL>

<P><STRONG><a name="[19f]"></a>osx_MotionFX_compass_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osx_MotionFX_compass_init &rArr; osx_LibLocker_Authenticate &rArr; osx_LibLocker_RetrieveUID
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_StartupConfig
</UL>

<P><STRONG><a name="[1a0]"></a>osx_MotionFX_compass_saveAcc</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = osx_MotionFX_compass_saveAcc &rArr; osx_LibLocker_Authenticate &rArr; osx_LibLocker_RetrieveUID
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FxMagCalibration
</UL>

<P><STRONG><a name="[1a1]"></a>osx_MotionFX_compass_saveMag</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = osx_MotionFX_compass_saveMag &rArr; osx_LibLocker_Authenticate &rArr; osx_LibLocker_RetrieveUID
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FxMagCalibration
</UL>

<P><STRONG><a name="[1a2]"></a>osx_MotionFX_compass_run</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osx_MotionFX_compass_run &rArr; osx_LibLocker_Authenticate &rArr; osx_LibLocker_RetrieveUID
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FxMagCalibration
</UL>

<P><STRONG><a name="[1a3]"></a>osx_MotionFX_compass_isCalibrated</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osx_MotionFX_compass_isCalibrated &rArr; osx_LibLocker_Authenticate &rArr; osx_LibLocker_RetrieveUID
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FxMagCalibration
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReCallCalibrationFromMemory
</UL>

<P><STRONG><a name="[1a4]"></a>osx_MotionFX_compass_forceReCalibration</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osx_MotionFX_compass_forceReCalibration &rArr; osx_LibLocker_Authenticate &rArr; osx_LibLocker_RetrieveUID
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FxMagCalibration
</UL>

<P><STRONG><a name="[1a5]"></a>osx_MotionFX_getCalibrationData</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osx_MotionFX_getCalibrationData &rArr; osx_LibLocker_Authenticate &rArr; osx_LibLocker_RetrieveUID
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FxMagCalibration
</UL>

<P><STRONG><a name="[1a6]"></a>osx_MotionFX_setCalibrationData</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osx_MotionFX_setCalibrationData &rArr; osx_LibLocker_Authenticate &rArr; osx_LibLocker_RetrieveUID
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReCallCalibrationFromMemory
</UL>

<P><STRONG><a name="[14b]"></a>osx_LibLocker_RegisterLicense</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, osxLibraryLocker100_CM3_Keil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osx_LibLocker_RegisterLicense &rArr; osx_LibLocker_Decrypt32 &rArr; osx_LibLocker_Decrypt16
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Decrypt32
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_initialize
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionCP_Initialize
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionAR_Initialize
</UL>

<P><STRONG><a name="[14c]"></a>osx_LibLocker_Authenticate</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, osxLibraryLocker100_CM3_Keil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = osx_LibLocker_Authenticate &rArr; osx_LibLocker_RetrieveUID
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_RetrieveUID
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_GetLibrary
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_update
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_setKnobs
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_setCalibrationData
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_propagate
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_initialize
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_getLibVersion
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_getKnobs
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_getCalibrationData
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_enable_9X
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_enable_6X
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_compass_saveMag
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_compass_saveAcc
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_compass_run
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_compass_isCalibrated
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_compass_init
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_compass_forceReCalibration
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionCP_Update
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionCP_SetOrientation_Acc
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionCP_Initialize
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionCP_GetLibVersion
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionAR_Update
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionAR_SetOrientation_Acc
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionAR_Initialize
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionAR_GetLibVersion
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_getGbias
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_setGbias
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_getStatus_9X
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_getStatus_6X
</UL>

<P><STRONG><a name="[14e]"></a>osx_LibLocker_UnwrapAPIs</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, osxLibraryLocker100_CM3_Keil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = osx_LibLocker_UnwrapAPIs &rArr; osx_LibLocker_RetrieveUID
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_RetrieveUID
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_GetLibrary
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_initialize
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionCP_Initialize
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionAR_Initialize
</UL>

<P><STRONG><a name="[1ad]"></a>osx_LibLocker_IsNodeFree</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, osxLibraryLocker100_CM3_Keil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_GetLibrary
</UL>

<P><STRONG><a name="[441]"></a>osx_LibLocker_NumRegisteredLibraries</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, osxLibraryLocker100_CM3_Keil.o(.text), UNUSED)

<P><STRONG><a name="[442]"></a>osx_LibLocker_GetReason</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, osxLibraryLocker100_CM3_Keil.o(.text), UNUSED)

<P><STRONG><a name="[443]"></a>osx_LibLocker_GetMaxConcurrentLibraries</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osxLibraryLocker100_CM3_Keil.o(.text), UNUSED)

<P><STRONG><a name="[444]"></a>osx_LibLocker_GetVersion</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, osxLibraryLocker100_CM3_Keil.o(.text), UNUSED)

<P><STRONG><a name="[14d]"></a>osx_LibLocker_SetHandle</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, osxLibraryLocker100_CM3_Keil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osx_LibLocker_SetHandle &rArr; osx_LibLocker_GetLibrary
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_GetLibrary
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_initialize
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionCP_Initialize
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionAR_Initialize
</UL>

<P><STRONG><a name="[445]"></a>____aeabi_memcpy8$ret$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[446]"></a>___aeabi_memmove$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[447]"></a>___aeabi_memmove8$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[20e]"></a>__aeabi_memcpy</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Term_Update
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_ManageWAction
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessTerminalStringBle
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSerialInput
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctrl1_Update
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stderr_Update
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SESSIONREGS_Write
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SESSIONREGS_Read
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Attribute_Modified_CB
</UL>

<P><STRONG><a name="[147]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Initialization
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MAR_CoreAPI_GetLibVersion
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MCP_CoreAPI_GetLibVersion
</UL>

<P><STRONG><a name="[17e]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove4
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[3ab]"></a>memcpy</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
</UL>

<P><STRONG><a name="[448]"></a>memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[1af]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[449]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[44a]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1ae]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessTermCommand
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DS3_GYRO_Init
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DS3_ACCELERO_Init
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS25HB_TEMPERATURE_Init
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS25HB_PRESSURE_Init
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LIS3MDL_MAGNETO_Init
</UL>

<P><STRONG><a name="[16f]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setConnectable
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RegistersInitialization
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_RTC_HSE32MHz
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_DeInit
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_DeInit
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_DeInit
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgEraseLicenses
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreCheckLicense
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLSIFrequency
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_initialize
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_setOrientation
</UL>

<P><STRONG><a name="[44b]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1b0]"></a>memset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memset
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
</UL>

<P><STRONG><a name="[3a8]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSettime
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetdate
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetSessionRegVal
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetPersRegVal
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetLic
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetBleConIntvMode
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetSessionRegVal
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetPersRegVal
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageTerminal
</UL>

<P><STRONG><a name="[315]"></a>strncpy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setConnectable
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetLic
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BlueNRG_Hw
</UL>

<P><STRONG><a name="[149]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setConnectable
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WESU_PRINTF_USART
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WESU_PRINTF_BLE
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessTerminalStringBle
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessTermCommand
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetLic
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageTerminal
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckXDigitString
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BlueNRG_Stack
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MAR_CoreAPI_GetLibVersion
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_Get_Lib_Version
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MCP_CoreAPI_GetLibVersion
</UL>

<P><STRONG><a name="[314]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RegistersInitialization
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreCheckLicense
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BlueNRG_Hw
</UL>

<P><STRONG><a name="[148]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetLic
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm2_init
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm1_init
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MAR_CoreAPI_GetLibVersion
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_Get_Lib_Version
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MCP_CoreAPI_GetLibVersion
</UL>

<P><STRONG><a name="[3be]"></a>strncmp</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessTermCommand
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetSessionRegVal
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetPersRegVal
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetSessionRegVal
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetPersRegVal
</UL>

<P><STRONG><a name="[1b1]"></a>__0sscanf</STRONG> (Thumb, 48 bytes, Stack size 72 bytes, __0sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSCANF_WESU_X
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetBleConIntvMode
</UL>

<P><STRONG><a name="[1b3]"></a>_scanf_int</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[134]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotVect
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityRecognizerFunction
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_h_sum
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_g_sum
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_f_sum
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_e_sum
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_d_sum
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_b_std
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_q2ypr2_eml
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotVect_6X
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_std
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_sum
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_b_sum
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroPropRedist
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointCorrection
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Propagate
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_b_interp1q_constrain
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroProp
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_update
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_Update
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotVect
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointAlgorithm
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_interp1q_constrain
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_qmult_eml
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_quat2heading
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsNotFlat
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_dcm2q_eml
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_q2dcm_eml
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_norm_eml
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotVect
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryPositionRecognizerFunction
</UL>

<P><STRONG><a name="[13f]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityRecognizerFunction
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_b_std
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_q2ypr2_eml
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_std
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Propagate
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_b_interp1q_constrain
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroProp
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_update
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointAlgorithm
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_interp1q_constrain
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_mldivide
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_quat2heading
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eCompass_Offset
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_dcm2q_eml
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_q2dcm_eml
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryPositionRecognizerFunction
</UL>

<P><STRONG><a name="[158]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_Process_High
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floatToInt
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_Process
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroProp
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_update
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_mldivide
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryPositionRecognizerFunction
</UL>

<P><STRONG><a name="[133]"></a>__aeabi_fmul</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_Process_High
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageBleConnection
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_Process
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MAR_CoreAPI_Update
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotVect
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityRecognizerFunction
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Get_Axes
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_b_std
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_q2ypr2_eml
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotVect_6X
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_std
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroPropRedist
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointCorrection
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Propagate
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_b_interp1q_constrain
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroProp
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_update
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_Update
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotVect
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointAlgorithm
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_interp1q_constrain
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_mldivide
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_qmult_eml
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_quat2heading
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eCompass_Offset
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsNotFlat
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_dcm2q_eml
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_q2dcm_eml
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_norm_eml
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MCP_CoreAPI_Update
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotVect
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryPositionRecognizerFunction
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Axes
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Axes
</UL>

<P><STRONG><a name="[132]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageBleConnection
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityRecognizerFunction
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Get_Temp
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Get_Press
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_b_std
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_std
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroPropRedist
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointCorrection
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Propagate
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_b_interp1q_constrain
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroProp
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_Update
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointAlgorithm
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_interp1q_constrain
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_mldivide
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eCompass_Offset
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsNotFlat
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryPositionRecognizerFunction
</UL>

<P><STRONG><a name="[161]"></a>__ARM_scalbnf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fscalb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_q2ypr2_eml
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroProp
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_update
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_Update
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_quat2heading
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_dcm2q_eml
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_q2dcm_eml
</UL>

<P><STRONG><a name="[44c]"></a>scalbnf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fscalb.o(.text), UNUSED)

<P><STRONG><a name="[137]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityRecognizerFunction
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trunc
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_c_sum
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_quat2heading
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stDev
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryPositionRecognizerFunction
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[139]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityRecognizerFunction
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trunc
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_quat2heading
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stDev
</UL>

<P><STRONG><a name="[157]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trunc
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryPositionRecognizerFunction
</UL>

<P><STRONG><a name="[136]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_Process_High
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floatToInt
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_Process
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm2_run
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm1_run
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityRecognizerFunction
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_getGbias
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_setGbias
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_quat2heading
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findDirection
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryPositionRecognizerFunction
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[13d]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityRecognizerFunction
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_getGbias
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_setGbias
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_quat2heading
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stDev
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryPositionRecognizerFunction
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[180]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>

<P><STRONG><a name="[44d]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[145]"></a>__aeabi_i2f</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_Process_High
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floatToInt
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Sensors
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_Process
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotVect
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Get_Temp
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Get_Press
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Get_Axes
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_b_std
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotVect_6X
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_Update
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotVect
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eCompass_Offset
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsNotFlat
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_dcm2q_eml
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotVect
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryPositionRecognizerFunction
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Axes
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Axes
</UL>

<P><STRONG><a name="[142]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressOdrChanged
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MagOdrChanged
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MagFsChanged
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GyroOdrChanged
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GyroFsChanged
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccOdrChanged
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccFsChanged
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityRecognizerFunction
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Propagate
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsNotFlat
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryPositionRecognizerFunction
</UL>

<P><STRONG><a name="[16a]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floatToInt
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_rt_atan2f_snf
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
</UL>

<P><STRONG><a name="[18d]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_c_sum
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
</UL>

<P><STRONG><a name="[167]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floatToInt
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Sensors
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageBleConnection
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSTC3115VoltHidden
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSTC3115CurrentHidden
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetPowerInfo
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetBackupData
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FxMagCalibration
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Get_Axes
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Init
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eCompass_Offset
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Axes
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Axes
</UL>

<P><STRONG><a name="[165]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Sensors
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageBleConnection
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSTC3115VoltHidden
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetPowerInfo
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetBackupData
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressOdrChanged
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MagOdrChanged
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MagFsChanged
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GyroOdrChanged
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GyroFsChanged
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccOdrChanged
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccFsChanged
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsNotFlat
</UL>

<P><STRONG><a name="[1bb]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floatToInt
</UL>

<P><STRONG><a name="[17c]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[135]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_Process_High
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floatToInt
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_Process
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm2_run
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm1_run
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityRecognizerFunction
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_b_std
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_q2ypr2_eml
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_std
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroPropRedist
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointCorrection
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Propagate
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_rt_atan2f_snf
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroProp
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_update
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointAlgorithm
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_getGbias
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_setGbias
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_quat2heading
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findDirection
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_dcm2q_eml
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_norm_eml
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryPositionRecognizerFunction
</UL>

<P><STRONG><a name="[17a]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointAlgorithm
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[140]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityRecognizerFunction
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trunc
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryPositionRecognizerFunction
</UL>

<P><STRONG><a name="[141]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityRecognizerFunction
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trunc
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findDirection
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryPositionRecognizerFunction
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[138]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_Process_High
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_Process
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm2_run
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm1_run
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityRecognizerFunction
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_b_std
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_q2ypr2_eml
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_std
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroPropRedist
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointCorrection
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Propagate
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_rt_atan2f_snf
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_b_interp1q_constrain
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroProp
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_update
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointAlgorithm
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_interp1q_constrain
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_getGbias
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_setGbias
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_quat2heading
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_dcm2q_eml
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_norm_eml
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryPositionRecognizerFunction
</UL>

<P><STRONG><a name="[163]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Propagate
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_rt_atan2f_snf
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_dcm2q_eml
</UL>

<P><STRONG><a name="[13a]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityRecognizerFunction
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_b_interp1q_constrain
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_interp1q_constrain
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsNotFlat
</UL>

<P><STRONG><a name="[13b]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityRecognizerFunction
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_b_interp1q_constrain
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_interp1q_constrain
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_mldivide
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findDirection
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsNotFlat
</UL>

<P><STRONG><a name="[44e]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[42a]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1bd]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1b7]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[44f]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[1bc]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[450]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[1b8]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[451]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[1b4]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>

<P><STRONG><a name="[1b2]"></a>__vfscanf_char</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>

<P><STRONG><a name="[ef]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[f0]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[452]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[1b6]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[1b5]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[1ba]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[1b9]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>

<P><STRONG><a name="[1bf]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[1c0]"></a>_drnd</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, drnd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _drnd &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trunc
</UL>

<P><STRONG><a name="[1c1]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[433]"></a>__ARM_dcmp4</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, dcmp4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_dcmp4
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmax
</UL>

<P><STRONG><a name="[453]"></a>_dcmp4</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dcmp4.o(.text), UNUSED)

<P><STRONG><a name="[12e]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[454]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[f2]"></a>isspace</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, isspace_c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ctype_lookup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[1be]"></a>__vfscanf</STRONG> (Thumb, 808 bytes, Stack size 88 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[1c3]"></a>__ctype_lookup</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ctype_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
</UL>

<P><STRONG><a name="[455]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[456]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[10c]"></a>AccEventConfChanged</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, wesu_config.o(i.AccEventConfChanged))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = AccEventConfChanged
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReconfigHw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[1c5]"></a>AccEvent_Deinit</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, algorithms.o(i.AccEvent_Deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = AccEvent_Deinit &rArr; LSM6DS3_ACC_GYRO_W_WUEvOnInt1 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WUEvOnInt1
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TiltEvOnInt1
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TapEvOnInt1
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SingleTapOnInt1
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FFEvOnInt1
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_6DEvOnInt1
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Disable_Wake_Up_Detection_Ext
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Disable_Tilt_Detection_Ext
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Disable_Single_Tap_Detection_Ext
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Disable_Pedometer_Ext
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Disable_Free_Fall_Detection_Ext
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Disable_Double_Tap_Detection_Ext
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Disable_6D_Orientation_Ext
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_init
</UL>

<P><STRONG><a name="[1d3]"></a>AccEvent_Update</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, bluest_protocol.o(i.AccEvent_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = AccEvent_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;safe_aci_gatt_update_char_value
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stderr_Update
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageBleConnection
</UL>

<P><STRONG><a name="[1d8]"></a>AccEvent_init</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, algorithms.o(i.AccEvent_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = AccEvent_init &rArr; AccEvent_Deinit &rArr; LSM6DS3_ACC_GYRO_W_WUEvOnInt1 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Set_Tap_Threshold_Ext
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Set_Free_Fall_Threshold_Ext
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Enable_Wake_Up_Detection_Ext
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Enable_Tilt_Detection_Ext
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Enable_Single_Tap_Detection_Ext
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Enable_Pedometer_Ext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Enable_Free_Fall_Detection_Ext
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Enable_Double_Tap_Detection_Ext
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Enable_6D_Orientation_Ext
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithms_Init
</UL>

<P><STRONG><a name="[1e2]"></a>AccEvent_run</STRONG> (Thumb, 240 bytes, Stack size 16 bytes, algorithms.o(i.AccEvent_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = AccEvent_run &rArr; GetHWOrientation6D &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_Wake_Up_Detection_Status_Ext
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_Tilt_Detection_Status_Ext
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_Single_Tap_Detection_Status_Ext
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_Free_Fall_Detection_Status_Ext
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_Double_Tap_Detection_Status_Ext
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_6D_Orientation_Status_Ext
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHWOrientation6D
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithms_Hw_Process_INT1
</UL>

<P><STRONG><a name="[106]"></a>AccFsChanged</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, wesu_config.o(i.AccFsChanged))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AccFsChanged &rArr; BSP_GYRO_Get_Axes
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Get_Axes
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Set_FS_Value
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_FS
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigFullRun
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigLowPowerRunWithAlgos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[1ed]"></a>AccGyroMag_Update</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, bluest_protocol.o(i.AccGyroMag_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = AccGyroMag_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;safe_aci_gatt_update_char_value
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stderr_Update
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageBleConnection
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Request_CB
</UL>

<P><STRONG><a name="[107]"></a>AccOdrChanged</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, wesu_config.o(i.AccOdrChanged))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AccOdrChanged &rArr; BSP_GYRO_Get_Axes
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Get_Axes
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Set_ODR_Value
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_ODR
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigFullRun
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigLowPowerRunWithAlgos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[1f0]"></a>Add_Config_Service</STRONG> (Thumb, 232 bytes, Stack size 80 bytes, bluest_protocol.o(i.Add_Config_Service))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = Add_Config_Service &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_serv
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BlueNRG_Custom_Services
</UL>

<P><STRONG><a name="[1f3]"></a>Add_Console_Service</STRONG> (Thumb, 358 bytes, Stack size 80 bytes, bluest_protocol.o(i.Add_Console_Service))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = Add_Console_Service &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_serv
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BlueNRG_Custom_Services
</UL>

<P><STRONG><a name="[1f4]"></a>Add_Feature_Service</STRONG> (Thumb, 1148 bytes, Stack size 80 bytes, bluest_protocol.o(i.Add_Feature_Service))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = Add_Feature_Service &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_serv
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BlueNRG_Custom_Services
</UL>

<P><STRONG><a name="[39f]"></a>AdvIntvChange</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wesu_config.o(i.AdvIntvChange))
<BR><BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageBleConnection
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopBlePmMode
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopBleMode
</UL>

<P><STRONG><a name="[1f5]"></a>Algorithm1_Update</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, bluest_protocol.o(i.Algorithm1_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = Algorithm1_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;safe_aci_gatt_update_char_value
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stderr_Update
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageBleConnection
</UL>

<P><STRONG><a name="[1f6]"></a>Algorithm1_init</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, algorithms.o(i.Algorithm1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = Algorithm1_init &rArr; DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_ManageWAction
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_Manage
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LICENSE_Write
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LICENSE_Read
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionAR_SetOrientation_Acc
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionAR_Initialize
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionAR_GetLibVersion
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreCheckLicense
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithms_Init
</UL>

<P><STRONG><a name="[1fd]"></a>Algorithm1_run</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, algorithms.o(i.Algorithm1_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Algorithm1_run &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionAR_Update
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithms_Process
</UL>

<P><STRONG><a name="[1fe]"></a>Algorithm2_Update</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, bluest_protocol.o(i.Algorithm2_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = Algorithm2_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;safe_aci_gatt_update_char_value
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stderr_Update
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageBleConnection
</UL>

<P><STRONG><a name="[1ff]"></a>Algorithm2_init</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, algorithms.o(i.Algorithm2_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = Algorithm2_init &rArr; DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_ManageWAction
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_Manage
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LICENSE_Write
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LICENSE_Read
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionCP_SetOrientation_Acc
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionCP_Initialize
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionCP_GetLibVersion
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreCheckLicense
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithms_Init
</UL>

<P><STRONG><a name="[200]"></a>Algorithm2_run</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, algorithms.o(i.Algorithm2_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Algorithm2_run &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionCP_Update
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithms_Process
</UL>

<P><STRONG><a name="[201]"></a>Algorithms_Hw_Process</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, algorithms.o(i.Algorithms_Hw_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Algorithms_Hw_Process
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Enable_Step_Counter_Reset_Ext
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Disable_Step_Counter_Reset_Ext
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_Step_Count_Ext
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
</UL>

<P><STRONG><a name="[205]"></a>Algorithms_Hw_Process_INT1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, algorithms.o(i.Algorithms_Hw_Process_INT1))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = Algorithms_Hw_Process_INT1 &rArr; AccEvent_run &rArr; GetHWOrientation6D &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_run
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
</UL>

<P><STRONG><a name="[206]"></a>Algorithms_Init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, algorithms.o(i.Algorithms_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = Algorithms_Init &rArr; FX_StartupConfig &rArr; ReCallCalibrationFromMemory &rArr; DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_StartupConfig
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm2_init
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm1_init
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigFullRun
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigLowPowerRunWithAlgos
</UL>

<P><STRONG><a name="[208]"></a>Algorithms_Process</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, algorithms.o(i.Algorithms_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 944<LI>Call Chain = Algorithms_Process &rArr; FX_Process &rArr; FxMagCalibration &rArr; DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePedometerData
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_Process
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm2_run
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm1_run
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
</UL>

<P><STRONG><a name="[20c]"></a>Attribute_Modified_CB</STRONG> (Thumb, 518 bytes, Stack size 88 bytes, bluest_protocol.o(i.Attribute_Modified_CB))
<BR><BR>[Stack]<UL><LI>Max Depth = 968<LI>Call Chain = Attribute_Modified_CB &rArr; ctrl1_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessTerminalStringBle
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessRegCommand
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctrl1_Update
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stderr_Update
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Event_CB
</UL>

<P><STRONG><a name="[211]"></a>BNRG_SPI_Init</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32_bluenrg_ble.o(i.BNRG_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = BNRG_SPI_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreRunMode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BlueNRG_Hw
</UL>

<P><STRONG><a name="[213]"></a>BSP_ACCELERO_DeInit</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wesu_accelero.o(i.BSP_ACCELERO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BSP_ACCELERO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgRebootAccGyroHidden
</UL>

<P><STRONG><a name="[1c7]"></a>BSP_ACCELERO_Disable_6D_Orientation_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Disable_6D_Orientation_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Deinit
</UL>

<P><STRONG><a name="[1cb]"></a>BSP_ACCELERO_Disable_Double_Tap_Detection_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Disable_Double_Tap_Detection_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Deinit
</UL>

<P><STRONG><a name="[1cd]"></a>BSP_ACCELERO_Disable_Free_Fall_Detection_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Disable_Free_Fall_Detection_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Deinit
</UL>

<P><STRONG><a name="[1c6]"></a>BSP_ACCELERO_Disable_Pedometer_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Disable_Pedometer_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Deinit
</UL>

<P><STRONG><a name="[1c9]"></a>BSP_ACCELERO_Disable_Single_Tap_Detection_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Disable_Single_Tap_Detection_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Deinit
</UL>

<P><STRONG><a name="[204]"></a>BSP_ACCELERO_Disable_Step_Counter_Reset_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Disable_Step_Counter_Reset_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithms_Hw_Process
</UL>

<P><STRONG><a name="[1d1]"></a>BSP_ACCELERO_Disable_Tilt_Detection_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Disable_Tilt_Detection_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Deinit
</UL>

<P><STRONG><a name="[1cf]"></a>BSP_ACCELERO_Disable_Wake_Up_Detection_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Disable_Wake_Up_Detection_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Deinit
</UL>

<P><STRONG><a name="[1da]"></a>BSP_ACCELERO_Enable_6D_Orientation_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Enable_6D_Orientation_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_init
</UL>

<P><STRONG><a name="[1dc]"></a>BSP_ACCELERO_Enable_Double_Tap_Detection_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Enable_Double_Tap_Detection_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_init
</UL>

<P><STRONG><a name="[1de]"></a>BSP_ACCELERO_Enable_Free_Fall_Detection_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Enable_Free_Fall_Detection_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_init
</UL>

<P><STRONG><a name="[1d9]"></a>BSP_ACCELERO_Enable_Pedometer_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Enable_Pedometer_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_init
</UL>

<P><STRONG><a name="[1db]"></a>BSP_ACCELERO_Enable_Single_Tap_Detection_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Enable_Single_Tap_Detection_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_init
</UL>

<P><STRONG><a name="[203]"></a>BSP_ACCELERO_Enable_Step_Counter_Reset_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Enable_Step_Counter_Reset_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithms_Hw_Process
</UL>

<P><STRONG><a name="[1e1]"></a>BSP_ACCELERO_Enable_Tilt_Detection_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Enable_Tilt_Detection_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_init
</UL>

<P><STRONG><a name="[1e0]"></a>BSP_ACCELERO_Enable_Wake_Up_Detection_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Enable_Wake_Up_Detection_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_init
</UL>

<P><STRONG><a name="[1e8]"></a>BSP_ACCELERO_Get_6D_Orientation_Status_Ext</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Get_6D_Orientation_Status_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_run
</UL>

<P><STRONG><a name="[2ae]"></a>BSP_ACCELERO_Get_6D_Orientation_XH_Ext</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Get_6D_Orientation_XH_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHWOrientation6D
</UL>

<P><STRONG><a name="[2ad]"></a>BSP_ACCELERO_Get_6D_Orientation_XL_Ext</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Get_6D_Orientation_XL_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHWOrientation6D
</UL>

<P><STRONG><a name="[2b0]"></a>BSP_ACCELERO_Get_6D_Orientation_YH_Ext</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Get_6D_Orientation_YH_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHWOrientation6D
</UL>

<P><STRONG><a name="[2af]"></a>BSP_ACCELERO_Get_6D_Orientation_YL_Ext</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Get_6D_Orientation_YL_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHWOrientation6D
</UL>

<P><STRONG><a name="[2b2]"></a>BSP_ACCELERO_Get_6D_Orientation_ZH_Ext</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Get_6D_Orientation_ZH_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHWOrientation6D
</UL>

<P><STRONG><a name="[2b1]"></a>BSP_ACCELERO_Get_6D_Orientation_ZL_Ext</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Get_6D_Orientation_ZL_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHWOrientation6D
</UL>

<P><STRONG><a name="[3cb]"></a>BSP_ACCELERO_Get_Axes</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wesu_accelero.o(i.BSP_ACCELERO_Get_Axes))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_ACCELERO_Get_Axes
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Sensors
</UL>

<P><STRONG><a name="[1e4]"></a>BSP_ACCELERO_Get_Double_Tap_Detection_Status_Ext</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Get_Double_Tap_Detection_Status_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_run
</UL>

<P><STRONG><a name="[1eb]"></a>BSP_ACCELERO_Get_FS</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wesu_accelero.o(i.BSP_ACCELERO_Get_FS))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_ACCELERO_Get_FS
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccFsChanged
</UL>

<P><STRONG><a name="[1e3]"></a>BSP_ACCELERO_Get_Free_Fall_Detection_Status_Ext</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Get_Free_Fall_Detection_Status_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_run
</UL>

<P><STRONG><a name="[1ef]"></a>BSP_ACCELERO_Get_ODR</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wesu_accelero.o(i.BSP_ACCELERO_Get_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_ACCELERO_Get_ODR
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccOdrChanged
</UL>

<P><STRONG><a name="[1e5]"></a>BSP_ACCELERO_Get_Single_Tap_Detection_Status_Ext</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Get_Single_Tap_Detection_Status_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_run
</UL>

<P><STRONG><a name="[202]"></a>BSP_ACCELERO_Get_Step_Count_Ext</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Get_Step_Count_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithms_Hw_Process
</UL>

<P><STRONG><a name="[1e7]"></a>BSP_ACCELERO_Get_Tilt_Detection_Status_Ext</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Get_Tilt_Detection_Status_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_run
</UL>

<P><STRONG><a name="[1e6]"></a>BSP_ACCELERO_Get_Wake_Up_Detection_Status_Ext</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Get_Wake_Up_Detection_Status_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_run
</UL>

<P><STRONG><a name="[214]"></a>BSP_ACCELERO_Init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wesu_accelero.o(i.BSP_ACCELERO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = BSP_ACCELERO_Init &rArr; BSP_LSM6DS3_ACCELERO_Init &rArr; Sensor_IO_Init &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Sensor_IO_ITConfig
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DS3_ACCELERO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
</UL>

<P><STRONG><a name="[40f]"></a>BSP_ACCELERO_IsInitialized</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_IsInitialized))
<BR><BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
</UL>

<P><STRONG><a name="[3e8]"></a>BSP_ACCELERO_Sensor_Disable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wesu_accelero.o(i.BSP_ACCELERO_Sensor_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_ACCELERO_Sensor_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsShutdown
</UL>

<P><STRONG><a name="[3e7]"></a>BSP_ACCELERO_Sensor_Enable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wesu_accelero.o(i.BSP_ACCELERO_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_ACCELERO_Sensor_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
</UL>

<P><STRONG><a name="[1ea]"></a>BSP_ACCELERO_Set_FS_Value</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wesu_accelero.o(i.BSP_ACCELERO_Set_FS_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_ACCELERO_Set_FS_Value
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Set_LP_Mode
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccFsChanged
</UL>

<P><STRONG><a name="[1df]"></a>BSP_ACCELERO_Set_Free_Fall_Threshold_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Set_Free_Fall_Threshold_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_init
</UL>

<P><STRONG><a name="[217]"></a>BSP_ACCELERO_Set_LP_Mode</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, wesu_accelero.o(i.BSP_ACCELERO_Set_LP_Mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = BSP_ACCELERO_Set_LP_Mode &rArr; LSM6DS3_ACC_GYRO_W_LowPower_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Set_ODR_Value
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Set_FS_Value
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_LowPower_XL
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigFullRun
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigLowPowerRunWithAlgos
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigLowPowerRun
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigJustAcc
</UL>

<P><STRONG><a name="[1ee]"></a>BSP_ACCELERO_Set_ODR_Value</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wesu_accelero.o(i.BSP_ACCELERO_Set_ODR_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_ACCELERO_Set_ODR_Value
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Set_LP_Mode
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccOdrChanged
</UL>

<P><STRONG><a name="[1dd]"></a>BSP_ACCELERO_Set_Tap_Threshold_Ext</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wesu_accelero.o(i.BSP_ACCELERO_Set_Tap_Threshold_Ext))
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_init
</UL>

<P><STRONG><a name="[219]"></a>BSP_ACC_GYRO_Sensor_Reboot</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wesu_accelero.o(i.BSP_ACC_GYRO_Sensor_Reboot))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = BSP_ACC_GYRO_Sensor_Reboot &rArr; LSM6DS3_ACC_GYRO_W_BOOT &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_BOOT
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgRebootAccGyroHidden
</UL>

<P><STRONG><a name="[21b]"></a>BSP_ACC_GYRO_Sensor_Reset</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wesu_accelero.o(i.BSP_ACC_GYRO_Sensor_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = BSP_ACC_GYRO_Sensor_Reset &rArr; LSM6DS3_ACC_GYRO_W_SW_RESET &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SW_RESET
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgRebootAccGyroHidden
</UL>

<P><STRONG><a name="[21d]"></a>BSP_BatteryChargerTask</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, wesu_charger.o(i.BSP_BatteryChargerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BSP_BatteryChargerTask &rArr; BSP_PwrUsbMonitor_GetState
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PwrUsbMonitor_GetState
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CHARGER_Enable
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CHARGER_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Sensors
</UL>

<P><STRONG><a name="[220]"></a>BSP_CHARGER_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wesu_charger.o(i.BSP_CHARGER_Disable))
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_BatteryChargerTask
</UL>

<P><STRONG><a name="[21f]"></a>BSP_CHARGER_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wesu_charger.o(i.BSP_CHARGER_Enable))
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_BatteryChargerTask
</UL>

<P><STRONG><a name="[222]"></a>BSP_CHARGER_GetState</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, wesu_charger.o(i.BSP_CHARGER_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BSP_CHARGER_GetState &rArr; BSP_PwrUsbMonitor_GetState
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PwrUsbMonitor_GetState
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CHARGER_IO_GetGPIOState
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Sensors
</UL>

<P><STRONG><a name="[223]"></a>BSP_CHARGER_IO_GetGPIOState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wesu_charger.o(i.BSP_CHARGER_IO_GetGPIOState))
<BR><BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CHARGER_GetState
</UL>

<P><STRONG><a name="[225]"></a>BSP_CHARGER_Init</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, wesu_charger.o(i.BSP_CHARGER_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BSP_CHARGER_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreRunMode
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWR_MGMT
</UL>

<P><STRONG><a name="[227]"></a>BSP_DbgDisable</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wesu.o(i.BSP_DbgDisable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_DbgDisable
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DBGMCU_DisableDBGStopMode
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DBGMCU_DisableDBGStandbyMode
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DBGMCU_DisableDBGSleepMode
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugConfiguration
</UL>

<P><STRONG><a name="[247]"></a>BSP_EEPROM_ReadBuffer</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wesu.o(i.BSP_EEPROM_ReadBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_EEPROM_ReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LICENSE_Read
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PERSREGS_ReadBackup
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PERSREGS_Read
</UL>

<P><STRONG><a name="[22b]"></a>BSP_EEPROM_WriteBuffer</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, wesu.o(i.BSP_EEPROM_WriteBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BSP_EEPROM_WriteBuffer &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_DATAEEPROM_Unlock
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_DATAEEPROM_Program
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_DATAEEPROM_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_To_OTA_Service_Manager_Application
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LICENSE_Write
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PERSREGS_WriteBackup
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PERSREGS_Write
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_To_USB_DFU
</UL>

<P><STRONG><a name="[3d2]"></a>BSP_GG_GetCurrent</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wesu_gg.o(i.BSP_GG_GetCurrent))
<BR><BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Sensors
</UL>

<P><STRONG><a name="[3d3]"></a>BSP_GG_GetSOC</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wesu_gg.o(i.BSP_GG_GetSOC))
<BR><BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Sensors
</UL>

<P><STRONG><a name="[3d1]"></a>BSP_GG_GetVoltage</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wesu_gg.o(i.BSP_GG_GetVoltage))
<BR><BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Sensors
</UL>

<P><STRONG><a name="[3d7]"></a>BSP_GG_IO_DeInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wesu_gg.o(i.BSP_GG_IO_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreRunMode
</UL>

<P><STRONG><a name="[230]"></a>BSP_GG_IO_GetITState</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wesu_gg.o(i.BSP_GG_IO_GetITState))
<BR><BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_GetITState
</UL>

<P><STRONG><a name="[231]"></a>BSP_GG_IO_ITConfig</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, wesu_gg.o(i.BSP_GG_IO_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BSP_GG_IO_ITConfig &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_Init
</UL>

<P><STRONG><a name="[234]"></a>BSP_GG_IO_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wesu_gg.o(i.BSP_GG_IO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = BSP_GG_IO_Init &rArr; PWR_I2C_Init &rArr; PWR_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_ITConfig
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_I2C_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreRunMode
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWR_MGMT
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Initialization
</UL>

<P><STRONG><a name="[236]"></a>BSP_GG_IO_Read</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, wesu_gg.o(i.BSP_GG_IO_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = BSP_GG_IO_Read &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_I2C_Error
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_ReadWord
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_ReadRamData
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_ReadByte
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_ReadBatteryData
</UL>

<P><STRONG><a name="[239]"></a>BSP_GG_IO_Write</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, wesu_gg.o(i.BSP_GG_IO_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = BSP_GG_IO_Write &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_I2C_Error
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_WriteWord
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_WriteRamData
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_WriteByte
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_SetParam
</UL>

<P><STRONG><a name="[31c]"></a>BSP_GG_Init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wesu_gg.o(i.BSP_GG_Init))
<BR><BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWR_MGMT
</UL>

<P><STRONG><a name="[401]"></a>BSP_GG_PowerSavingMode</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wesu_gg.o(i.BSP_GG_PowerSavingMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_GG_PowerSavingMode
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoRebootMode
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoRebootDefSettingsMode
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopMode
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopBlePmMode
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopBleMode
</UL>

<P><STRONG><a name="[3bf]"></a>BSP_GG_Reset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wesu_gg.o(i.BSP_GG_Reset))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgResetPower
</UL>

<P><STRONG><a name="[402]"></a>BSP_GG_Stop</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wesu_gg.o(i.BSP_GG_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_GG_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoShutdown
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoRebootMode
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoRebootDefSettingsMode
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopMode
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopBlePmMode
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopBleMode
</UL>

<P><STRONG><a name="[3d0]"></a>BSP_GG_Task</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, wesu_gg.o(i.BSP_GG_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_GG_Task
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Sensors
</UL>

<P><STRONG><a name="[1ec]"></a>BSP_GYRO_Get_Axes</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wesu_gyro.o(i.BSP_GYRO_Get_Axes))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_GYRO_Get_Axes
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigFullRun
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Sensors
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessTermCommand
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessRegCommand
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressOdrChanged
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MagOdrChanged
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MagFsChanged
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GyroOdrChanged
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GyroFsChanged
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccOdrChanged
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccFsChanged
</UL>

<P><STRONG><a name="[2be]"></a>BSP_GYRO_Get_FS</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wesu_gyro.o(i.BSP_GYRO_Get_FS))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_GYRO_Get_FS
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GyroFsChanged
</UL>

<P><STRONG><a name="[2bf]"></a>BSP_GYRO_Get_ODR</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wesu_gyro.o(i.BSP_GYRO_Get_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_GYRO_Get_ODR
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GyroOdrChanged
</UL>

<P><STRONG><a name="[23b]"></a>BSP_GYRO_Init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wesu_gyro.o(i.BSP_GYRO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = BSP_GYRO_Init &rArr; BSP_LSM6DS3_GYRO_Init &rArr; Sensor_IO_Init &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DS3_GYRO_Init
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Sensor_IO_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
</UL>

<P><STRONG><a name="[410]"></a>BSP_GYRO_IsInitialized</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wesu_gyro.o(i.BSP_GYRO_IsInitialized))
<BR><BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
</UL>

<P><STRONG><a name="[3ea]"></a>BSP_GYRO_Sensor_Disable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wesu_gyro.o(i.BSP_GYRO_Sensor_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_GYRO_Sensor_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsShutdown
</UL>

<P><STRONG><a name="[3e9]"></a>BSP_GYRO_Sensor_Enable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wesu_gyro.o(i.BSP_GYRO_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_GYRO_Sensor_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
</UL>

<P><STRONG><a name="[23f]"></a>BSP_GYRO_Set_FS_Value</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wesu_gyro.o(i.BSP_GYRO_Set_FS_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_GYRO_Set_FS_Value
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Set_LP_Mode
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GyroFsChanged
</UL>

<P><STRONG><a name="[23d]"></a>BSP_GYRO_Set_LP_Mode</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, wesu_gyro.o(i.BSP_GYRO_Set_LP_Mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = BSP_GYRO_Set_LP_Mode &rArr; LSM6DS3_ACC_GYRO_W_LP_Mode &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Set_ODR_Value
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Set_FS_Value
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_LP_Mode
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigFullRun
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigLowPowerRunWithAlgos
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigLowPowerRun
</UL>

<P><STRONG><a name="[240]"></a>BSP_GYRO_Set_ODR_Value</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wesu_gyro.o(i.BSP_GYRO_Set_ODR_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_GYRO_Set_ODR_Value
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Set_LP_Mode
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GyroOdrChanged
</UL>

<P><STRONG><a name="[241]"></a>BSP_LED_GetState</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, wesu.o(i.BSP_LED_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_LED_GetState
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrepareLowPowerMode
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedManageStart
</UL>

<P><STRONG><a name="[242]"></a>BSP_LED_InitGpio</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, wesu.o(i.BSP_LED_InitGpio))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BSP_LED_InitGpio &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreRunMode
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
</UL>

<P><STRONG><a name="[243]"></a>BSP_LED_OffGpio</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wesu.o(i.BSP_LED_OffGpio))
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrepareLowPowerMode
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedManageStart
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedManageEnd
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RedLedControlMaskChanged
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedControlMaskChanged
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Pwm
</UL>

<P><STRONG><a name="[244]"></a>BSP_LED_OnGpio</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, wesu.o(i.BSP_LED_OnGpio))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_LED_OnGpio
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreRunMode
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedManageStart
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgTestIwdg
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedSmoothRampUpGpio
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoShutdown
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RedLedControlMaskChanged
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedControlMaskChanged
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_BlueNRG_Versions
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Pwm
</UL>

<P><STRONG><a name="[245]"></a>BSP_LED_ToggleGpio</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wesu.o(i.BSP_LED_ToggleGpio))
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_TogglePin
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedManageStart
</UL>

<P><STRONG><a name="[1fc]"></a>BSP_LICENSE_Read</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bluest_protocol.o(i.BSP_LICENSE_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_LICENSE_Read &rArr; BSP_EEPROM_ReadBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_EEPROM_ReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetLic
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetAlgoStatus
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_StartupConfig
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm2_init
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm1_init
</UL>

<P><STRONG><a name="[1f8]"></a>BSP_LICENSE_Write</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bluest_protocol.o(i.BSP_LICENSE_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BSP_LICENSE_Write &rArr; BSP_EEPROM_WriteBuffer &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_EEPROM_WriteBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetLic
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgEraseLicenses
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_StartupConfig
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm2_init
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm1_init
</UL>

<P><STRONG><a name="[24c]"></a>BSP_MAGNETO_DeInit</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wesu_magneto.o(i.BSP_MAGNETO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BSP_MAGNETO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgRebootMagHidden
</UL>

<P><STRONG><a name="[3cc]"></a>BSP_MAGNETO_Get_Axes</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wesu_magneto.o(i.BSP_MAGNETO_Get_Axes))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MAGNETO_Get_Axes
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Sensors
</UL>

<P><STRONG><a name="[39c]"></a>BSP_MAGNETO_Get_FS</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wesu_magneto.o(i.BSP_MAGNETO_Get_FS))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MAGNETO_Get_FS
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MagFsChanged
</UL>

<P><STRONG><a name="[39d]"></a>BSP_MAGNETO_Get_ODR</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wesu_magneto.o(i.BSP_MAGNETO_Get_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MAGNETO_Get_ODR
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MagOdrChanged
</UL>

<P><STRONG><a name="[24d]"></a>BSP_MAGNETO_Init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wesu_magneto.o(i.BSP_MAGNETO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = BSP_MAGNETO_Init &rArr; BSP_LIS3MDL_MAGNETO_Init &rArr; Sensor_IO_Init &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LIS3MDL_MAGNETO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
</UL>

<P><STRONG><a name="[411]"></a>BSP_MAGNETO_IsInitialized</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wesu_magneto.o(i.BSP_MAGNETO_IsInitialized))
<BR><BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
</UL>

<P><STRONG><a name="[3ec]"></a>BSP_MAGNETO_Sensor_Disable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wesu_magneto.o(i.BSP_MAGNETO_Sensor_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MAGNETO_Sensor_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsShutdown
</UL>

<P><STRONG><a name="[3eb]"></a>BSP_MAGNETO_Sensor_Enable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wesu_magneto.o(i.BSP_MAGNETO_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MAGNETO_Sensor_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
</UL>

<P><STRONG><a name="[24e]"></a>BSP_MAGNETO_Sensor_Reboot</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wesu_magneto.o(i.BSP_MAGNETO_Sensor_Reboot))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = BSP_MAGNETO_Sensor_Reboot &rArr; LIS3MDL_MAG_W_Reboot &rArr; LIS3MDL_MAG_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_Reboot
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgRebootMagHidden
</UL>

<P><STRONG><a name="[250]"></a>BSP_MAGNETO_Sensor_SoftRST</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wesu_magneto.o(i.BSP_MAGNETO_Sensor_SoftRST))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = BSP_MAGNETO_Sensor_SoftRST &rArr; LIS3MDL_MAG_W_SoftRST &rArr; LIS3MDL_MAG_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_SoftRST
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgRebootMagHidden
</UL>

<P><STRONG><a name="[257]"></a>BSP_MAGNETO_Set_FS_Value</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wesu_magneto.o(i.BSP_MAGNETO_Set_FS_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MAGNETO_Set_FS_Value
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Set_LP_Mode
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MagFsChanged
</UL>

<P><STRONG><a name="[252]"></a>BSP_MAGNETO_Set_LP_Mode</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, wesu_magneto.o(i.BSP_MAGNETO_Set_LP_Mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = BSP_MAGNETO_Set_LP_Mode &rArr; LIS3MDL_MAG_W_OperatingModeZ &rArr; LIS3MDL_MAG_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Set_ODR_Value
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Set_FS_Value
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_OperatingModeZ
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_OperatingModeXY
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_FastLowPowerXYZ
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigFullRun
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigLowPowerRunWithAlgos
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigLowPowerRun
</UL>

<P><STRONG><a name="[256]"></a>BSP_MAGNETO_Set_ODR_Value</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wesu_magneto.o(i.BSP_MAGNETO_Set_ODR_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MAGNETO_Set_ODR_Value
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Set_LP_Mode
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MagOdrChanged
</UL>

<P><STRONG><a name="[258]"></a>BSP_PB_DeInit</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, wesu.o(i.BSP_PB_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BSP_PB_DeInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrepareLowPowerMode
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
</UL>

<P><STRONG><a name="[25a]"></a>BSP_PB_GetState</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, wesu.o(i.BSP_PB_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_PB_GetState
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopMode
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopBlePmMode
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopBleMode
</UL>

<P><STRONG><a name="[25b]"></a>BSP_PB_Init</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, wesu.o(i.BSP_PB_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BSP_PB_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreRunMode
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
</UL>

<P><STRONG><a name="[25c]"></a>BSP_PERSREGS_Read</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bluest_protocol.o(i.BSP_PERSREGS_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_PERSREGS_Read &rArr; BSP_EEPROM_ReadBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_EEPROM_ReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_Manage
</UL>

<P><STRONG><a name="[25d]"></a>BSP_PERSREGS_ReadBackup</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bluest_protocol.o(i.BSP_PERSREGS_ReadBackup))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_PERSREGS_ReadBackup &rArr; BSP_EEPROM_ReadBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_EEPROM_ReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuGetBackupData
</UL>

<P><STRONG><a name="[25e]"></a>BSP_PERSREGS_Write</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bluest_protocol.o(i.BSP_PERSREGS_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BSP_PERSREGS_Write &rArr; BSP_EEPROM_WriteBuffer &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_EEPROM_WriteBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_Manage
</UL>

<P><STRONG><a name="[25f]"></a>BSP_PERSREGS_WriteBackup</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bluest_protocol.o(i.BSP_PERSREGS_WriteBackup))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BSP_PERSREGS_WriteBackup &rArr; BSP_EEPROM_WriteBuffer &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_EEPROM_WriteBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuBackupSystemParameters
</UL>

<P><STRONG><a name="[260]"></a>BSP_PRESSURE_DeInit</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wesu_pressure.o(i.BSP_PRESSURE_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BSP_PRESSURE_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgRebootPressTempHidden
</UL>

<P><STRONG><a name="[3b5]"></a>BSP_PRESSURE_Get_ODR</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wesu_pressure.o(i.BSP_PRESSURE_Get_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_PRESSURE_Get_ODR
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressOdrChanged
</UL>

<P><STRONG><a name="[3cd]"></a>BSP_PRESSURE_Get_Press</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wesu_pressure.o(i.BSP_PRESSURE_Get_Press))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_PRESSURE_Get_Press
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Sensors
</UL>

<P><STRONG><a name="[261]"></a>BSP_PRESSURE_Init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wesu_pressure.o(i.BSP_PRESSURE_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = BSP_PRESSURE_Init &rArr; BSP_LPS25HB_PRESSURE_Init &rArr; Sensor_IO_Init &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS25HB_PRESSURE_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
</UL>

<P><STRONG><a name="[412]"></a>BSP_PRESSURE_IsInitialized</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wesu_pressure.o(i.BSP_PRESSURE_IsInitialized))
<BR><BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
</UL>

<P><STRONG><a name="[3ee]"></a>BSP_PRESSURE_Sensor_Disable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wesu_pressure.o(i.BSP_PRESSURE_Sensor_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_PRESSURE_Sensor_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsShutdown
</UL>

<P><STRONG><a name="[3ed]"></a>BSP_PRESSURE_Sensor_Enable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wesu_pressure.o(i.BSP_PRESSURE_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_PRESSURE_Sensor_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
</UL>

<P><STRONG><a name="[262]"></a>BSP_PRESSURE_Set_AvgP</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wesu_pressure.o(i.BSP_PRESSURE_Set_AvgP))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = BSP_PRESSURE_Set_AvgP &rArr; LPS25HB_Set_AvgP &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_AvgP
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigLowPowerRunWithAlgos
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigLowPowerRun
</UL>

<P><STRONG><a name="[264]"></a>BSP_PRESSURE_Set_AvgT</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wesu_temperature.o(i.BSP_PRESSURE_Set_AvgT))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = BSP_PRESSURE_Set_AvgT &rArr; LPS25HB_Set_AvgT &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_AvgT
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigLowPowerRunWithAlgos
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigLowPowerRun
</UL>

<P><STRONG><a name="[3b4]"></a>BSP_PRESSURE_Set_ODR_Value</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wesu_pressure.o(i.BSP_PRESSURE_Set_ODR_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_PRESSURE_Set_ODR_Value
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigLowPowerRunWithAlgos
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigLowPowerRun
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressOdrChanged
</UL>

<P><STRONG><a name="[266]"></a>BSP_PRESS_TEMP_Sensor_SwRst_Reboot</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wesu_pressure.o(i.BSP_PRESS_TEMP_Sensor_SwRst_Reboot))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = BSP_PRESS_TEMP_Sensor_SwRst_Reboot &rArr; LPS25HB_MemoryBoot &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_MemoryBoot
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgRebootPressTempHidden
</UL>

<P><STRONG><a name="[268]"></a>BSP_PWMGT_BoardShutdown</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wesu_charger.o(i.BSP_PWMGT_BoardShutdown))
<BR><BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoShutdown
</UL>

<P><STRONG><a name="[269]"></a>BSP_PWMGT_Init</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, wesu_charger.o(i.BSP_PWMGT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BSP_PWMGT_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreRunMode
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWR_MGMT
</UL>

<P><STRONG><a name="[21e]"></a>BSP_PwrUsbMonitor_GetState</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wesu.o(i.BSP_PwrUsbMonitor_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_PwrUsbMonitor_GetState
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CHARGER_GetState
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_BatteryChargerTask
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
</UL>

<P><STRONG><a name="[26a]"></a>BSP_PwrUsbMonitor_Init</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, wesu.o(i.BSP_PwrUsbMonitor_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BSP_PwrUsbMonitor_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
</UL>

<P><STRONG><a name="[1fa]"></a>BSP_REGS_Manage</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, bluest_protocol.o(i.BSP_REGS_Manage))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BSP_REGS_Manage &rArr; BSP_PERSREGS_Write &rArr; BSP_EEPROM_WriteBuffer &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SESSIONREGS_Write
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SESSIONREGS_Read
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PERSREGS_Write
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PERSREGS_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigFullRun
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RegistersInitialization
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePedometerData
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetSessionRegVal
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetPersRegVal
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetLic
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetSessionRegVal
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetPersRegVal
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgEnterStopWBle
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgEnterStop
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgEnterConnOnly
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessRegCommand
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FxMagCalibration
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_StartupConfig
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm2_init
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm1_init
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReCallCalibrationFromMemory
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuSaveSystemParameters
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigLowPowerRunWithAlgos
</UL>

<P><STRONG><a name="[1fb]"></a>BSP_REGS_ManageWAction</STRONG> (Thumb, 90 bytes, Stack size 88 bytes, bluest_protocol.o(i.BSP_REGS_ManageWAction))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = BSP_REGS_ManageWAction &rArr; ProcessRegCommand &rArr; BSP_REGS_Manage &rArr; BSP_PERSREGS_Write &rArr; BSP_EEPROM_WriteBuffer &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessRegCommand
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetSessionRegVal
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetPersRegVal
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetLic
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgLedBlinkme
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetSessionRegVal
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetPersRegVal
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_StartupConfig
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm2_init
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm1_init
</UL>

<P><STRONG><a name="[3b9]"></a>BSP_RTC_GetMonthName</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wesu_rtc.o(i.BSP_RTC_GetMonthName))
<BR><BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintSystemParameters
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgViewtime
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgViewdate
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSettime
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetdate
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetBackupData
</UL>

<P><STRONG><a name="[3c6]"></a>BSP_RTC_GetRtcConfigAsString</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, wesu_rtc.o(i.BSP_RTC_GetRtcConfigAsString))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgViewtime
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgViewdate
</UL>

<P><STRONG><a name="[3ba]"></a>BSP_RTC_GetWeekDayName</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wesu_rtc.o(i.BSP_RTC_GetWeekDayName))
<BR><BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintSystemParameters
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgViewtime
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgViewdate
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSettime
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetdate
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetBackupData
</UL>

<P><STRONG><a name="[26b]"></a>BSP_SESSIONREGS_Read</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bluest_protocol.o(i.BSP_SESSIONREGS_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_SESSIONREGS_Read &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_Manage
</UL>

<P><STRONG><a name="[26c]"></a>BSP_SESSIONREGS_Write</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bluest_protocol.o(i.BSP_SESSIONREGS_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_SESSIONREGS_Write &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_Manage
</UL>

<P><STRONG><a name="[3cf]"></a>BSP_TEMPERATURE_Get_Temp</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wesu_temperature.o(i.BSP_TEMPERATURE_Get_Temp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_TEMPERATURE_Get_Temp
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Sensors
</UL>

<P><STRONG><a name="[26d]"></a>BSP_TEMPERATURE_Init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wesu_temperature.o(i.BSP_TEMPERATURE_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = BSP_TEMPERATURE_Init &rArr; BSP_LPS25HB_TEMPERATURE_Init &rArr; Sensor_IO_Init &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS25HB_TEMPERATURE_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
</UL>

<P><STRONG><a name="[413]"></a>BSP_TEMPERATURE_IsInitialized</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wesu_temperature.o(i.BSP_TEMPERATURE_IsInitialized))
<BR><BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
</UL>

<P><STRONG><a name="[3f0]"></a>BSP_TEMPERATURE_Sensor_Disable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wesu_temperature.o(i.BSP_TEMPERATURE_Sensor_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_TEMPERATURE_Sensor_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsShutdown
</UL>

<P><STRONG><a name="[3ef]"></a>BSP_TEMPERATURE_Sensor_Enable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wesu_temperature.o(i.BSP_TEMPERATURE_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_TEMPERATURE_Sensor_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
</UL>

<P><STRONG><a name="[26e]"></a>BSP_WD_Init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, wesu.o(i.BSP_WD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = BSP_WD_Init &rArr; GetLSIFrequency &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLSIFrequency
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Refresh
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_WD_Refresh
</UL>

<P><STRONG><a name="[273]"></a>BSP_WD_Refresh</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, wesu.o(i.BSP_WD_Refresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = BSP_WD_Refresh &rArr; BSP_WD_Init &rArr; GetLSIFrequency &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_WD_Init
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessTermCommand
</UL>

<P><STRONG><a name="[103]"></a>BleConIntvChanged</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wesu_config.o(i.BleConIntvChanged))
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[274]"></a>BlueNRG_DataPresent</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32_bluenrg_ble.o(i.BlueNRG_DataPresent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BlueNRG_DataPresent
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Process
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
</UL>

<P><STRONG><a name="[275]"></a>BlueNRG_RST</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, stm32_bluenrg_ble.o(i.BlueNRG_RST))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BlueNRG_RST &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BlueNRG_Hw
</UL>

<P><STRONG><a name="[277]"></a>BlueNRG_RST_AndKeep</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32_bluenrg_ble.o(i.BlueNRG_RST_AndKeep))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BlueNRG_RST_AndKeep &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BlueNRG_Hw
</UL>

<P><STRONG><a name="[278]"></a>BlueNRG_SPI_Read_All</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, stm32_bluenrg_ble.o(i.BlueNRG_SPI_Read_All))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = BlueNRG_SPI_Read_All &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Process
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
</UL>

<P><STRONG><a name="[27a]"></a>BlueNRG_SPI_Write</STRONG> (Thumb, 172 bytes, Stack size 312 bytes, stm32_bluenrg_ble.o(i.BlueNRG_SPI_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = BlueNRG_SPI_Write &rArr; set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_irq_as_input
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Write_Serial
</UL>

<P><STRONG><a name="[27c]"></a>BluenrgInitialization</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, wesu_config.o(i.BluenrgInitialization))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216<LI>Call Chain = BluenrgInitialization &rArr; Init_BlueNRG_Hw &rArr; Check_BlueNRG_Versions &rArr; getBlueNRGVersion &rArr; HCI_Process &rArr; HCI_Event_CB &rArr; Attribute_Modified_CB &rArr; ctrl1_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_set_tx_power_level
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluenrgResetParameters
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TxPwrLvlChange
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BlueNRG_Stack
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BlueNRG_Hw
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BlueNRG_Custom_Services
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopBlePmMode
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopBleMode
</UL>

<P><STRONG><a name="[281]"></a>BluenrgResetParameters</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bluest_protocol.o(i.BluenrgResetParameters))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = BluenrgResetParameters &rArr; GAP_DisconnectionComplete_CB &rArr; DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DisconnectionComplete_CB
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluenrgInitialization
</UL>

<P><STRONG><a name="[b0]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[283]"></a>CheckXDigitString</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, console.o(i.CheckXDigitString))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CheckXDigitString
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetLic
</UL>

<P><STRONG><a name="[284]"></a>Check_BlueNRG_Versions</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, wesu_config.o(i.Check_BlueNRG_Versions))
<BR><BR>[Stack]<UL><LI>Max Depth = 1184<LI>Call Chain = Check_BlueNRG_Versions &rArr; getBlueNRGVersion &rArr; HCI_Process &rArr; HCI_Event_CB &rArr; Attribute_Modified_CB &rArr; ctrl1_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_OnGpio
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBlueNRGVersion
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BlueNRG_Hw
</UL>

<P><STRONG><a name="[309]"></a>Clear_SPI_EXTI_Flag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32_bluenrg_ble.o(i.Clear_SPI_EXTI_Flag))
<BR><BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
</UL>

<P><STRONG><a name="[286]"></a>Clock_Time</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, clock.o(i.Clock_Time))
<BR><BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Set
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Expired
</UL>

<P><STRONG><a name="[287]"></a>ConfigAllGpioAsANInput</STRONG> (Thumb, 306 bytes, Stack size 32 bytes, low_power.o(i.ConfigAllGpioAsANInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ConfigAllGpioAsANInput &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrepareLowPowerMode
</UL>

<P><STRONG><a name="[fb]"></a>CopyToSession</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wesu_config.o(i.CopyToSession))
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[1f9]"></a>DBG_PRINTF</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, console.o(i.DBG_PRINTF))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_DeInit
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consoleInit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consoleDeInit
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WESU_PRINTF_USART
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WESU_PRINTF_BLE
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuSysChangeRunMode
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateConnectionParameters
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RegistersInitialization
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluenrgInitialization
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Sensors
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageBleConnection
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePedometerData
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintSystemParameters
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DisconnectionComplete_CB
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_ConnectionComplete_CB
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FxMagCalibration
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_StartupConfig
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm2_init
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm1_init
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReCallCalibrationFromMemory
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoHardwareReconfig
</UL>

<P><STRONG><a name="[28d]"></a>DBG_PRINTF_TERMINAL</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, console.o(i.DBG_PRINTF_TERMINAL))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_DeInit
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consoleInit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consoleDeInit
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WESU_PRINTF_USART
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WESU_PRINTF_BLE
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Dump
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessTerminalStringBle
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessTermCommand
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgViewtime
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgViewdate
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgTestIwdg
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSettime
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetdate
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetUsbBleBridge
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetSessionRegVal
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetPersRegVal
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetLic
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetBleConIntvMode
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSTC3115VoltHidden
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSTC3115CurrentHidden
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgResetPower
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgRebootPressTempHidden
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgRebootMagHidden
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgRebootAccGyroHidden
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgMinPower
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgLedBlinkme
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgHelpHidden
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgHelp
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetSysInfo
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetSessionRegVal
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetPowerInfo
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetPersRegVal
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetMcuId
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetLic
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetFwVersion
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetBluenrgInfo
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetBackupData
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetAlgoStatus
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgEraseLicenses
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgEchoNameHidden
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgDumpPressTempHidden
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgDumpMagHidden
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgDumpAccGyroHidden
</UL>

<P><STRONG><a name="[c2]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.DMA1_Channel2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA1_Channel2_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[28f]"></a>DebugConfiguration</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wesu_config.o(i.DebugConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DebugConfiguration &rArr; BSP_DbgDisable
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_DbgDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b3]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[290]"></a>Disable_SPI_IRQ</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32_bluenrg_ble.o(i.Disable_SPI_IRQ))
<BR><BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Process
</UL>

<P><STRONG><a name="[10f]"></a>DummyRegChange</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, wesu_config.o(i.DummyRegChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DummyRegChange &rArr; Switch_To_OTA_Service_Manager_Application &rArr; BSP_EEPROM_WriteBuffer &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_To_OTA_Service_Manager_Application
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SystemReset
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_To_USB_DFU
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[bc]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.EXTI0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[dd]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32l1xx_it.o(i.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1176<LI>Call Chain = EXTI15_10_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; RestoreRunMode &rArr; HCI_Process &rArr; HCI_Event_CB &rArr; Attribute_Modified_CB &rArr; ctrl1_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[be]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.EXTI2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168<LI>Call Chain = EXTI2_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; RestoreRunMode &rArr; HCI_Process &rArr; HCI_Event_CB &rArr; Attribute_Modified_CB &rArr; ctrl1_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[cd]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32l1xx_it.o(i.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1176<LI>Call Chain = EXTI9_5_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; RestoreRunMode &rArr; HCI_Process &rArr; HCI_Event_CB &rArr; Attribute_Modified_CB &rArr; ctrl1_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[295]"></a>Enable_SPI_IRQ</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32_bluenrg_ble.o(i.Enable_SPI_IRQ))
<BR><BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Process
</UL>

<P><STRONG><a name="[271]"></a>Error_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i.Error_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_WD_Init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLSIFrequency
</UL>

<P><STRONG><a name="[22d]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, stm32l1xx_hal_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetErrorCode
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_EEPROM_WriteBuffer
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_DATAEEPROM_Program
</UL>

<P><STRONG><a name="[105]"></a>FXMagCalibChanged</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wesu_config.o(i.FXMagCalibChanged))
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[209]"></a>FX_Process</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, algorithms.o(i.FX_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = FX_Process &rArr; FxMagCalibration &rArr; DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_update
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FxMagCalibration
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithms_Process
</UL>

<P><STRONG><a name="[298]"></a>FX_Process_High</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, algorithms.o(i.FX_Process_High))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = FX_Process_High &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_propagate
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[207]"></a>FX_StartupConfig</STRONG> (Thumb, 328 bytes, Stack size 56 bytes, algorithms.o(i.FX_StartupConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 920<LI>Call Chain = FX_StartupConfig &rArr; ReCallCalibrationFromMemory &rArr; DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_ManageWAction
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_Manage
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LICENSE_Write
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LICENSE_Read
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_setKnobs
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_initialize
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_getLibVersion
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_getKnobs
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_enable_9X
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_enable_6X
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_compass_init
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreCheckLicense
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReCallCalibrationFromMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithms_Init
</UL>

<P><STRONG><a name="[102]"></a>FwConfigChanged</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, wesu_config.o(i.FwConfigChanged))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FwConfigChanged
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReconfigHw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[297]"></a>FxMagCalibration</STRONG> (Thumb, 254 bytes, Stack size 64 bytes, algorithms.o(i.FxMagCalibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = FxMagCalibration &rArr; DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_Manage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_getCalibrationData
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_compass_saveMag
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_compass_saveAcc
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_compass_run
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_compass_isCalibrated
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_compass_forceReCalibration
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_Process
</UL>

<P><STRONG><a name="[29b]"></a>GasGauge_Initialization</STRONG> (Thumb, 208 bytes, Stack size 88 bytes, stc3115_driver_00.o(i.GasGauge_Initialization))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032<LI>Call Chain = GasGauge_Initialization &rArr; STC3115_Startup &rArr; STC3115_Status &rArr; STC3115_ReadWord &rArr; BSP_GG_IO_Read &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_Init
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_WriteRamData
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_UpdateRamCRC
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Startup
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Restore
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_ReadRamData
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_ReadByte
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_InitRamData
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_CalcRamCRC8
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Init
</UL>

<P><STRONG><a name="[2a4]"></a>GasGauge_PowerSavingMode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stc3115_driver_00.o(i.GasGauge_PowerSavingMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = GasGauge_PowerSavingMode &rArr; STC3115_SetPowerSavingMode &rArr; STC3115_ReadByte &rArr; BSP_GG_IO_Read &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_SetPowerSavingMode
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_PowerSavingMode
</UL>

<P><STRONG><a name="[2a6]"></a>GasGauge_Reset</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stc3115_driver_00.o(i.GasGauge_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 920<LI>Call Chain = GasGauge_Reset &rArr; STC3115_WriteByte &rArr; BSP_GG_IO_Write &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_WriteRamData
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Task
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Reset
</UL>

<P><STRONG><a name="[2a8]"></a>GasGauge_Stop</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stc3115_driver_00.o(i.GasGauge_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 920<LI>Call Chain = GasGauge_Stop &rArr; STC3115_WriteByte &rArr; BSP_GG_IO_Write &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_WriteRamData
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_WriteByte
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_UpdateRamCRC
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_ReadRamData
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Stop
</UL>

<P><STRONG><a name="[2a9]"></a>GasGauge_Task</STRONG> (Thumb, 366 bytes, Stack size 32 bytes, stc3115_driver_00.o(i.GasGauge_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = GasGauge_Task &rArr; STC3115_Startup &rArr; STC3115_Status &rArr; STC3115_ReadWord &rArr; BSP_GG_IO_Read &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Reset
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_WriteWord
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_WriteRamData
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_UpdateRamCRC
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Status
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Startup
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Restore
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_ReadRamData
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_ReadBatteryData
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_InitRamData
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_CalcRamCRC8
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Task
</UL>

<P><STRONG><a name="[1e9]"></a>GetHWOrientation6D</STRONG> (Thumb, 346 bytes, Stack size 48 bytes, algorithms.o(i.GetHWOrientation6D))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = GetHWOrientation6D &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_6D_Orientation_ZL_Ext
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_6D_Orientation_ZH_Ext
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_6D_Orientation_YL_Ext
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_6D_Orientation_YH_Ext
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_6D_Orientation_XL_Ext
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_6D_Orientation_XH_Ext
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_run
</UL>

<P><STRONG><a name="[26f]"></a>GetLSIFrequency</STRONG> (Thumb, 200 bytes, Stack size 112 bytes, wesu.o(i.GetLSIFrequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GetLSIFrequency &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Stop_IT
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Start_IT
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Init
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_DeInit
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_ConfigChannel
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetClockConfig
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_RemapConfig
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_WD_Init
</UL>

<P><STRONG><a name="[2bc]"></a>GetSerialInput</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, console.o(i.GetSerialInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GetSerialInput &rArr; consoleInit &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consoleInit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consoleDeInit
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageTerminal
</UL>

<P><STRONG><a name="[108]"></a>GyroFsChanged</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, wesu_config.o(i.GyroFsChanged))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GyroFsChanged &rArr; BSP_GYRO_Get_Axes
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Get_Axes
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Set_FS_Value
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Get_FS
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigFullRun
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigLowPowerRunWithAlgos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[109]"></a>GyroOdrChanged</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, wesu_config.o(i.GyroOdrChanged))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GyroOdrChanged &rArr; BSP_GYRO_Get_Axes
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Get_Axes
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Set_ODR_Value
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Get_ODR
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigFullRun
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigLowPowerRunWithAlgos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[22a]"></a>HAL_DBGMCU_DisableDBGSleepMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l1xx_hal.o(i.HAL_DBGMCU_DisableDBGSleepMode))
<BR><BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_DbgDisable
</UL>

<P><STRONG><a name="[229]"></a>HAL_DBGMCU_DisableDBGStandbyMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l1xx_hal.o(i.HAL_DBGMCU_DisableDBGStandbyMode))
<BR><BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_DbgDisable
</UL>

<P><STRONG><a name="[228]"></a>HAL_DBGMCU_DisableDBGStopMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l1xx_hal.o(i.HAL_DBGMCU_DisableDBGStopMode))
<BR><BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_DbgDisable
</UL>

<P><STRONG><a name="[28e]"></a>HAL_DMA_IRQHandler</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, stm32l1xx_hal_dma.o(i.HAL_DMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_IRQHandler
</UL>

<P><STRONG><a name="[276]"></a>HAL_Delay</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, main.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Term_Update
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgTestIwdg
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetUsbBleBridge
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSerialInput
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_RST_AndKeep
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_RST
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoShutdown
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DummyRegChange
</UL>

<P><STRONG><a name="[22f]"></a>HAL_FLASHEx_DATAEEPROM_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32l1xx_hal_flash_ex.o(i.HAL_FLASHEx_DATAEEPROM_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_EEPROM_WriteBuffer
</UL>

<P><STRONG><a name="[22e]"></a>HAL_FLASHEx_DATAEEPROM_Program</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, stm32l1xx_hal_flash_ex.o(i.HAL_FLASHEx_DATAEEPROM_Program))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_EEPROM_WriteBuffer
</UL>

<P><STRONG><a name="[22c]"></a>HAL_FLASHEx_DATAEEPROM_Unlock</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32l1xx_hal_flash_ex.o(i.HAL_FLASHEx_DATAEEPROM_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_EEPROM_WriteBuffer
</UL>

<P><STRONG><a name="[2e6]"></a>HAL_GPIO_DeInit</STRONG> (Thumb, 236 bytes, Stack size 36 bytes, stm32l1xx_hal_gpio.o(i.HAL_GPIO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspDeInit
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspDeInit
</UL>

<P><STRONG><a name="[2c0]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, main.o(i.HAL_GPIO_EXTI_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160<LI>Call Chain = HAL_GPIO_EXTI_Callback &rArr; RestoreRunMode &rArr; HCI_Process &rArr; HCI_Event_CB &rArr; Attribute_Modified_CB &rArr; ctrl1_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreRunMode
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_Process_High
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PwrUsbMonitor_GetState
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithms_Hw_Process_INT1
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithms_Hw_Process
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Sensors
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[294]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32l1xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168<LI>Call Chain = HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; RestoreRunMode &rArr; HCI_Process &rArr; HCI_Event_CB &rArr; Attribute_Modified_CB &rArr; ctrl1_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[226]"></a>HAL_GPIO_Init</STRONG> (Thumb, 390 bytes, Stack size 40 bytes, stm32l1xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_irq_as_input
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PwrUsbMonitor_Init
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_InitGpio
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_DeInit
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PWMGT_Init
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CHARGER_Init
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigAllGpioAsANInput
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Sensor_IO_ITConfig
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_ITConfig
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_I2C_MspInit
</UL>

<P><STRONG><a name="[224]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l1xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_DataPresent
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PwrUsbMonitor_GetState
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_GetState
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_GetState
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_GetITState
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CHARGER_IO_GetGPIOState
</UL>

<P><STRONG><a name="[246]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32l1xx_hal_gpio.o(i.HAL_GPIO_TogglePin))
<BR><BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_ToggleGpio
</UL>

<P><STRONG><a name="[221]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l1xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Read_All
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_InitGpio
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_OnGpio
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PWMGT_Init
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_OffGpio
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CHARGER_Init
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_RST_AndKeep
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_RST
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PWMGT_BoardShutdown
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Write
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CHARGER_Enable
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CHARGER_Disable
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensors_SPI_Write
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensors_SPI_Read
</UL>

<P><STRONG><a name="[20a]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedManageStart
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_BatteryChargerTask
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithms_Process
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Sensors
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageBleConnection
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_OnGpio
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_EEPROM_WriteBuffer
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_Time
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnRXNEFlagUntilTimeout
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnMasterAddressFlagUntilTimeout
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnBTFFlagUntilTimeout
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Init
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[2c4]"></a>HAL_I2C_DeInit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32l1xx_hal_i2c.o(i.HAL_I2C_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_I2C_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_I2C_Error
</UL>

<P><STRONG><a name="[3af]"></a>HAL_I2C_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_hal_i2c.o(i.HAL_I2C_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_I2C_Init
</UL>

<P><STRONG><a name="[2c6]"></a>HAL_I2C_Init</STRONG> (Thumb, 312 bytes, Stack size 16 bytes, stm32l1xx_hal_i2c.o(i.HAL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_I2C_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_I2C_Init
</UL>

<P><STRONG><a name="[238]"></a>HAL_I2C_Mem_Read</STRONG> (Thumb, 492 bytes, Stack size 64 bytes, stm32l1xx_hal_i2c.o(i.HAL_I2C_Mem_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnRXNEFlagUntilTimeout
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_Read
</UL>

<P><STRONG><a name="[23a]"></a>HAL_I2C_Mem_Write</STRONG> (Thumb, 320 bytes, Stack size 64 bytes, stm32l1xx_hal_i2c.o(i.HAL_I2C_Mem_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnBTFFlagUntilTimeout
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_Write
</UL>

<P><STRONG><a name="[2c5]"></a>HAL_I2C_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_hal_i2c.o(i.HAL_I2C_MspDeInit))
<BR><BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
</UL>

<P><STRONG><a name="[2c7]"></a>HAL_I2C_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_hal_i2c.o(i.HAL_I2C_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[270]"></a>HAL_IWDG_Init</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, stm32l1xx_hal_iwdg.o(i.HAL_IWDG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_IWDG_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_WD_Init
</UL>

<P><STRONG><a name="[272]"></a>HAL_IWDG_Refresh</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l1xx_hal_iwdg.o(i.HAL_IWDG_Refresh))
<BR><BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_WD_Init
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_WD_Refresh
</UL>

<P><STRONG><a name="[3f6]"></a>HAL_IncTick</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l1xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
</UL>

<P><STRONG><a name="[2cf]"></a>HAL_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32l1xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreRunMode
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d1]"></a>HAL_InitTick</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32l1xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[2d2]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[259]"></a>HAL_NVIC_DisableIRQ</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32l1xx_hal_cortex.o(i.HAL_NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_SPI_IRQ
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_DeInit
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Write
</UL>

<P><STRONG><a name="[233]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32l1xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_SPI_IRQ
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PwrUsbMonitor_Init
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_MspInit
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Write
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Sensor_IO_ITConfig
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_ITConfig
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_I2C_MspInit
</UL>

<P><STRONG><a name="[232]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32l1xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PwrUsbMonitor_Init
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_MspInit
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Sensor_IO_ITConfig
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_ITConfig
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_I2C_MspInit
</UL>

<P><STRONG><a name="[2d0]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32l1xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[293]"></a>HAL_NVIC_SystemReset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32l1xx_hal_cortex.o(i.HAL_NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetUsbBleBridge
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoRebootMode
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoRebootDefSettingsMode
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DummyRegChange
</UL>

<P><STRONG><a name="[3c8]"></a>HAL_PWREx_GetVoltageRange</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l1xx_hal_pwr_ex.o(i.HAL_PWREx_GetVoltageRange))
<BR><BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetFlashLatencyFromMSIRange
</UL>

<P><STRONG><a name="[416]"></a>HAL_PWR_EnterSLEEPMode</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32l1xx_hal_pwr.o(i.HAL_PWR_EnterSLEEPMode))
<BR><BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
</UL>

<P><STRONG><a name="[417]"></a>HAL_PWR_EnterSTOPMode</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32l1xx_hal_pwr.o(i.HAL_PWR_EnterSTOPMode))
<BR><BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
</UL>

<P><STRONG><a name="[2d5]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 360 bytes, Stack size 40 bytes, stm32l1xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_RTC_HSE32MHz
</UL>

<P><STRONG><a name="[2d6]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 444 bytes, Stack size 32 bytes, stm32l1xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_RTC_HSE32MHz
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_MSI_4MHz
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_HSE_24MHz
</UL>

<P><STRONG><a name="[3f8]"></a>HAL_RCC_DeInit</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, stm32l1xx_hal_rcc.o(i.HAL_RCC_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RCC_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_RTC_HSE32MHz
</UL>

<P><STRONG><a name="[2bb]"></a>HAL_RCC_GetClockConfig</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32l1xx_hal_rcc.o(i.HAL_RCC_GetClockConfig))
<BR><BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLSIFrequency
</UL>

<P><STRONG><a name="[3c0]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_RTC_HSE32MHz
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_MSI_4MHz
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_HSE_24MHz
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgResetStc3115I2C
</UL>

<P><STRONG><a name="[2c8]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32l1xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[2ba]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32l1xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLSIFrequency
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[2d7]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32l1xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[2b3]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1884 bytes, Stack size 40 bytes, stm32l1xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetFlashLatencyFromMSIRange
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_RTC_HSE32MHz
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_MSI_4MHz
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_HSE_24MHz
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLSIFrequency
</UL>

<P><STRONG><a name="[41a]"></a>HAL_RTCEx_BKUPRead</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l1xx_hal_rtc_ex.o(i.HAL_RTCEx_BKUPRead))
<BR><BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuRtcConfig
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeSU_GetDateTime
</UL>

<P><STRONG><a name="[41b]"></a>HAL_RTCEx_BKUPWrite</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l1xx_hal_rtc_ex.o(i.HAL_RTCEx_BKUPWrite))
<BR><BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeSU_SetDateTime
</UL>

<P><STRONG><a name="[2d9]"></a>HAL_RTC_GetDate</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, stm32l1xx_hal_rtc.o(i.HAL_RTC_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RTC_GetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeSU_GetDateTime
</UL>

<P><STRONG><a name="[419]"></a>HAL_RTC_GetState</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32l1xx_hal_rtc.o(i.HAL_RTC_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeSU_SetDateTime
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeSU_GetDateTime
</UL>

<P><STRONG><a name="[2db]"></a>HAL_RTC_GetTime</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, stm32l1xx_hal_rtc_ex.o(i.HAL_RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeSU_GetDateTime
</UL>

<P><STRONG><a name="[2dc]"></a>HAL_RTC_Init</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32l1xx_hal_rtc.o(i.HAL_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RTC_Init &rArr; HAL_RTC_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
</UL>

<P><STRONG><a name="[2dd]"></a>HAL_RTC_MspInit</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, stm32l1xx_hal_msp.o(i.HAL_RTC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RTC_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[2df]"></a>HAL_RTC_SetDate</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, stm32l1xx_hal_rtc.o(i.HAL_RTC_SetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_RTC_SetDate &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeSU_SetDateTime
</UL>

<P><STRONG><a name="[2e2]"></a>HAL_RTC_SetTime</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, stm32l1xx_hal_rtc.o(i.HAL_RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_RTC_SetTime &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeSU_SetDateTime
</UL>

<P><STRONG><a name="[2e1]"></a>HAL_RTC_WaitForSynchro</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32l1xx_hal_rtc_ex.o(i.HAL_RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
</UL>

<P><STRONG><a name="[2e3]"></a>HAL_SPI_DeInit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32l1xx_hal_spi.o(i.HAL_SPI_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_SPI_DeInit &rArr; HAL_SPI_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Error
</UL>

<P><STRONG><a name="[3f5]"></a>HAL_SPI_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_hal_spi.o(i.HAL_SPI_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsSpiInit
</UL>

<P><STRONG><a name="[212]"></a>HAL_SPI_Init</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32l1xx_hal_spi_ex.o(i.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BNRG_SPI_Init
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsSpiInit
</UL>

<P><STRONG><a name="[2e4]"></a>HAL_SPI_MspDeInit</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, stm32l1xx_hal_msp.o(i.HAL_SPI_MspDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_SPI_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DeInit
</UL>

<P><STRONG><a name="[2e5]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 646 bytes, Stack size 64 bytes, stm32l1xx_hal_msp.o(i.HAL_SPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[2e7]"></a>HAL_SPI_Receive</STRONG> (Thumb, 472 bytes, Stack size 40 bytes, stm32l1xx_hal_spi.o(i.HAL_SPI_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensors_SPI_Read
</UL>

<P><STRONG><a name="[2e9]"></a>HAL_SPI_Transmit</STRONG> (Thumb, 322 bytes, Stack size 32 bytes, stm32l1xx_hal_spi.o(i.HAL_SPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensors_SPI_Write
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensors_SPI_Read
</UL>

<P><STRONG><a name="[279]"></a>HAL_SPI_TransmitReceive</STRONG> (Thumb, 690 bytes, Stack size 32 bytes, stm32l1xx_hal_spi.o(i.HAL_SPI_TransmitReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Read_All
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Write
</UL>

<P><STRONG><a name="[3f7]"></a>HAL_SYSTICK_CLKSourceConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32l1xx_hal_cortex.o(i.HAL_SYSTICK_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_RTC_HSE32MHz
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_MSI_4MHz
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_HSE_24MHz
</UL>

<P><STRONG><a name="[2d3]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32l1xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_RTC_HSE32MHz
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_MSI_4MHz
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_HSE_24MHz
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[2b5]"></a>HAL_TIMEx_RemapConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32l1xx_hal_tim_ex.o(i.HAL_TIMEx_RemapConfig))
<BR><BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLSIFrequency
</UL>

<P><STRONG><a name="[2ea]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, wesu.o(i.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_TIM_IC_CaptureCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ReadCapturedValue
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[2b6]"></a>HAL_TIM_IC_ConfigChannel</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, stm32l1xx_hal_tim.o(i.HAL_TIM_IC_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_TIM_IC_ConfigChannel &rArr; TIM_TI1_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI2_SetConfig
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI1_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLSIFrequency
</UL>

<P><STRONG><a name="[2b8]"></a>HAL_TIM_IC_DeInit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32l1xx_hal_tim.o(i.HAL_TIM_IC_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_TIM_IC_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLSIFrequency
</UL>

<P><STRONG><a name="[2b4]"></a>HAL_TIM_IC_Init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32l1xx_hal_tim.o(i.HAL_TIM_IC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_TIM_IC_Init &rArr; HAL_TIM_IC_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLSIFrequency
</UL>

<P><STRONG><a name="[2ee]"></a>HAL_TIM_IC_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_hal_tim.o(i.HAL_TIM_IC_MspDeInit))
<BR><BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_DeInit
</UL>

<P><STRONG><a name="[2ef]"></a>HAL_TIM_IC_MspInit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, wesu.o(i.HAL_TIM_IC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_IC_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Init
</UL>

<P><STRONG><a name="[2b7]"></a>HAL_TIM_IC_Start_IT</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, stm32l1xx_hal_tim.o(i.HAL_TIM_IC_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_IC_Start_IT &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLSIFrequency
</UL>

<P><STRONG><a name="[2b9]"></a>HAL_TIM_IC_Stop_IT</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, stm32l1xx_hal_tim.o(i.HAL_TIM_IC_Stop_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_IC_Stop_IT &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLSIFrequency
</UL>

<P><STRONG><a name="[2f2]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 294 bytes, Stack size 16 bytes, stm32l1xx_hal_tim.o(i.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_IRQHandler &rArr; HAL_TIM_IC_CaptureCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM10_IRQHandler
</UL>

<P><STRONG><a name="[2f3]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_hal_tim.o(i.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[2f4]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_hal_tim.o(i.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[2f5]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[2eb]"></a>HAL_TIM_ReadCapturedValue</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, stm32l1xx_hal_tim.o(i.HAL_TIM_ReadCapturedValue))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
</UL>

<P><STRONG><a name="[2f6]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_hal_tim.o(i.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[2f7]"></a>HAL_UART_DeInit</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32l1xx_hal_uart.o(i.HAL_UART_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HAL_UART_DeInit &rArr; HAL_UART_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consoleInit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consoleDeInit
</UL>

<P><STRONG><a name="[2fd]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_hal_uart.o(i.HAL_UART_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[2f9]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, stm32l1xx_hal_uart.o(i.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_UART_IRQHandler &rArr; UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Transmit_IT
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[2fe]"></a>HAL_UART_Init</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, stm32l1xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consoleInit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consoleDeInit
</UL>

<P><STRONG><a name="[2f8]"></a>HAL_UART_MspDeInit</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32l1xx_hal_msp.o(i.HAL_UART_MspDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_UART_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DeInit
</UL>

<P><STRONG><a name="[2ff]"></a>HAL_UART_MspInit</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, stm32l1xx_hal_msp.o(i.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[431]"></a>HAL_UART_Receive_IT</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, stm32l1xx_hal_uart.o(i.HAL_UART_Receive_IT))
<BR><BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consoleInit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consoleDeInit
</UL>

<P><STRONG><a name="[40b]"></a>HAL_UART_RxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_hal_uart.o(i.HAL_UART_RxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
</UL>

<P><STRONG><a name="[2bd]"></a>HAL_UART_Transmit</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, stm32l1xx_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartSendChar
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSerialInput
</UL>

<P><STRONG><a name="[2fc]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_hal_uart.o(i.HAL_UART_TxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[302]"></a>HCI_Event_CB</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, bluest_protocol.o(i.HCI_Event_CB))
<BR><BR>[Stack]<UL><LI>Max Depth = 984<LI>Call Chain = HCI_Event_CB &rArr; Attribute_Modified_CB &rArr; ctrl1_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Request_CB
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Attribute_Modified_CB
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_DisconnectionComplete_CB
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAP_ConnectionComplete_CB
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_write_response
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Process
</UL>

<P><STRONG><a name="[305]"></a>HCI_Init</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, hci.o(i.HCI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HCI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_tail
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init_head
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BlueNRG_Hw
</UL>

<P><STRONG><a name="[2c3]"></a>HCI_Isr</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, hci.o(i.HCI_Isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HCI_Isr &rArr; BlueNRG_SPI_Read_All &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_head
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_is_empty
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_tail
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_head
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_SPI_EXTI_Flag
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Read_All
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_DataPresent
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_verify
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[30d]"></a>HCI_Process</STRONG> (Thumb, 106 bytes, Stack size 144 bytes, hci.o(i.HCI_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 1128<LI>Call Chain = HCI_Process &rArr; HCI_Event_CB &rArr; Attribute_Modified_CB &rArr; ctrl1_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_head
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_is_empty
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_tail
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Event_CB
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_SPI_IRQ
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_SPI_IRQ
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Read_All
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_DataPresent
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreRunMode
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBlueNRGVersion
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopBlePmMode
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopBleMode
</UL>

<P><STRONG><a name="[30e]"></a>HCI_Queue_Empty</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hci.o(i.HCI_Queue_Empty))
<BR><BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_is_empty
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[30b]"></a>HCI_verify</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, hci.o(i.HCI_verify))
<BR><BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
</UL>

<P><STRONG><a name="[30f]"></a>Hal_Write_Serial</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, stm32_bluenrg_ble.o(i.Hal_Write_Serial))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Set
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Expired
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_write
</UL>

<P><STRONG><a name="[ae]"></a>HardFault_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SystemReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[101]"></a>HwConfigChanged</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, wesu_config.o(i.HwConfigChanged))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HwConfigChanged
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReconfigHw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[27f]"></a>Init_BlueNRG_Custom_Services</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, wesu_config.o(i.Init_BlueNRG_Custom_Services))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = Init_BlueNRG_Custom_Services &rArr; Add_Feature_Service &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Feature_Service
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Console_Service
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Config_Service
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluenrgInitialization
</UL>

<P><STRONG><a name="[27d]"></a>Init_BlueNRG_Hw</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, wesu_config.o(i.Init_BlueNRG_Hw))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192<LI>Call Chain = Init_BlueNRG_Hw &rArr; Check_BlueNRG_Versions &rArr; getBlueNRGVersion &rArr; HCI_Process &rArr; HCI_Event_CB &rArr; Attribute_Modified_CB &rArr; ctrl1_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_write_config_data
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Init
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BNRG_SPI_Init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_init
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_RST_AndKeep
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_RST
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_BlueNRG_Versions
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluenrgInitialization
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopMode
</UL>

<P><STRONG><a name="[27e]"></a>Init_BlueNRG_Stack</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, wesu_config.o(i.Init_BlueNRG_Stack))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = Init_BlueNRG_Stack &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_update_char_value
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_auth_requirement
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluenrgInitialization
</UL>

<P><STRONG><a name="[31b]"></a>Init_PWR_MGMT</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wesu_config.o(i.Init_PWR_MGMT))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Init_PWR_MGMT &rArr; BSP_GG_IO_Init &rArr; PWR_I2C_Init &rArr; PWR_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PWMGT_Init
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_Init
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CHARGER_Init
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
</UL>

<P><STRONG><a name="[31e]"></a>LIS3MDL_MAG_Get_Magnatic</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, lis3mdl_mag_driver.o(i.LIS3MDL_MAG_Get_Magnatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LIS3MDL_MAG_Get_Magnatic &rArr; LIS3MDL_MAG_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Get_Axes_Raw
</UL>

<P><STRONG><a name="[31f]"></a>LIS3MDL_MAG_R_FullScale</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lis3mdl_mag_driver.o(i.LIS3MDL_MAG_R_FullScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LIS3MDL_MAG_R_FullScale &rArr; LIS3MDL_MAG_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Get_Sensitivity
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Get_FS
</UL>

<P><STRONG><a name="[320]"></a>LIS3MDL_MAG_R_OutputDataRate</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lis3mdl_mag_driver.o(i.LIS3MDL_MAG_R_OutputDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LIS3MDL_MAG_R_OutputDataRate &rArr; LIS3MDL_MAG_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Get_ODR
</UL>

<P><STRONG><a name="[321]"></a>LIS3MDL_MAG_R_WHO_AM_I_</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lis3mdl_mag_driver.o(i.LIS3MDL_MAG_R_WHO_AM_I_))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LIS3MDL_MAG_R_WHO_AM_I_ &rArr; LIS3MDL_MAG_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Get_WhoAmI
</UL>

<P><STRONG><a name="[323]"></a>LIS3MDL_MAG_W_BlockDataUpdate</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lis3mdl_mag_driver.o(i.LIS3MDL_MAG_W_BlockDataUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LIS3MDL_MAG_W_BlockDataUpdate &rArr; LIS3MDL_MAG_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_WriteReg
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Init
</UL>

<P><STRONG><a name="[253]"></a>LIS3MDL_MAG_W_FastLowPowerXYZ</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lis3mdl_mag_driver.o(i.LIS3MDL_MAG_W_FastLowPowerXYZ))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LIS3MDL_MAG_W_FastLowPowerXYZ &rArr; LIS3MDL_MAG_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_WriteReg
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Set_LP_Mode
</UL>

<P><STRONG><a name="[328]"></a>LIS3MDL_MAG_W_FullScale</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lis3mdl_mag_driver.o(i.LIS3MDL_MAG_W_FullScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LIS3MDL_MAG_W_FullScale &rArr; LIS3MDL_MAG_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_WriteReg
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Set_FS_Value
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Set_FS
</UL>

<P><STRONG><a name="[254]"></a>LIS3MDL_MAG_W_OperatingModeXY</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lis3mdl_mag_driver.o(i.LIS3MDL_MAG_W_OperatingModeXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LIS3MDL_MAG_W_OperatingModeXY &rArr; LIS3MDL_MAG_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_WriteReg
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Set_LP_Mode
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Init
</UL>

<P><STRONG><a name="[255]"></a>LIS3MDL_MAG_W_OperatingModeZ</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lis3mdl_mag_driver.o(i.LIS3MDL_MAG_W_OperatingModeZ))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LIS3MDL_MAG_W_OperatingModeZ &rArr; LIS3MDL_MAG_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_WriteReg
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Set_LP_Mode
</UL>

<P><STRONG><a name="[329]"></a>LIS3MDL_MAG_W_OutputDataRate</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lis3mdl_mag_driver.o(i.LIS3MDL_MAG_W_OutputDataRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LIS3MDL_MAG_W_OutputDataRate &rArr; LIS3MDL_MAG_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_WriteReg
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Set_ODR_Value
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Set_ODR
</UL>

<P><STRONG><a name="[24f]"></a>LIS3MDL_MAG_W_Reboot</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lis3mdl_mag_driver.o(i.LIS3MDL_MAG_W_Reboot))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LIS3MDL_MAG_W_Reboot &rArr; LIS3MDL_MAG_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_WriteReg
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Sensor_Reboot
</UL>

<P><STRONG><a name="[251]"></a>LIS3MDL_MAG_W_SoftRST</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lis3mdl_mag_driver.o(i.LIS3MDL_MAG_W_SoftRST))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LIS3MDL_MAG_W_SoftRST &rArr; LIS3MDL_MAG_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_WriteReg
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Sensor_SoftRST
</UL>

<P><STRONG><a name="[322]"></a>LIS3MDL_MAG_W_SystemOperatingMode</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lis3mdl_mag_driver.o(i.LIS3MDL_MAG_W_SystemOperatingMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LIS3MDL_MAG_W_SystemOperatingMode &rArr; LIS3MDL_MAG_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_WriteReg
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Sensor_Enable
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Sensor_Disable
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Init
</UL>

<P><STRONG><a name="[324]"></a>LIS3MDL_MAG_W_TemperatureSensor</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lis3mdl_mag_driver.o(i.LIS3MDL_MAG_W_TemperatureSensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LIS3MDL_MAG_W_TemperatureSensor &rArr; LIS3MDL_MAG_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_WriteReg
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Init
</UL>

<P><STRONG><a name="[32b]"></a>LPS25HB_Activate</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lps25hb_driver.o(i.LPS25HB_Activate))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LPS25HB_Activate &rArr; LPS25HB_Set_PowerDownMode &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_PowerDownMode
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Sensor_Enable
</UL>

<P><STRONG><a name="[32f]"></a>LPS25HB_DeActivate</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lps25hb_driver.o(i.LPS25HB_DeActivate))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LPS25HB_DeActivate &rArr; LPS25HB_Set_PowerDownMode &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_PowerDownMode
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Sensor_Disable
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Init
</UL>

<P><STRONG><a name="[330]"></a>LPS25HB_Get_DeviceID</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lps25hb_driver.o(i.LPS25HB_Get_DeviceID))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LPS25HB_Get_DeviceID &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_WhoAmI
</UL>

<P><STRONG><a name="[333]"></a>LPS25HB_Get_Odr</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lps25hb_driver.o(i.LPS25HB_Get_Odr))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LPS25HB_Get_Odr &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_ODR
</UL>

<P><STRONG><a name="[334]"></a>LPS25HB_Get_Pressure</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lps25hb_driver.o(i.LPS25HB_Get_Pressure))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LPS25HB_Get_Pressure &rArr; LPS25HB_Get_RawPressure &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_RawPressure
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Get_Press
</UL>

<P><STRONG><a name="[335]"></a>LPS25HB_Get_RawPressure</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lps25hb_driver.o(i.LPS25HB_Get_RawPressure))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LPS25HB_Get_RawPressure &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_Pressure
</UL>

<P><STRONG><a name="[336]"></a>LPS25HB_Get_RawTemperature</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lps25hb_driver.o(i.LPS25HB_Get_RawTemperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LPS25HB_Get_RawTemperature &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_Temperature
</UL>

<P><STRONG><a name="[337]"></a>LPS25HB_Get_Temperature</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lps25hb_driver.o(i.LPS25HB_Get_Temperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LPS25HB_Get_Temperature &rArr; LPS25HB_Get_RawTemperature &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_RawTemperature
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Get_Temp
</UL>

<P><STRONG><a name="[267]"></a>LPS25HB_MemoryBoot</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lps25hb_driver.o(i.LPS25HB_MemoryBoot))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LPS25HB_MemoryBoot &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_WriteReg
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESS_TEMP_Sensor_SwRst_Reboot
</UL>

<P><STRONG><a name="[33d]"></a>LPS25HB_Set_Avg</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, lps25hb_driver.o(i.LPS25HB_Set_Avg))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LPS25HB_Set_Avg &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_assert_failed
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_WriteReg
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Init
</UL>

<P><STRONG><a name="[263]"></a>LPS25HB_Set_AvgP</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, lps25hb_driver.o(i.LPS25HB_Set_AvgP))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LPS25HB_Set_AvgP &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_assert_failed
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_WriteReg
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_Set_AvgP
</UL>

<P><STRONG><a name="[265]"></a>LPS25HB_Set_AvgT</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, lps25hb_driver.o(i.LPS25HB_Set_AvgT))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LPS25HB_Set_AvgT &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_assert_failed
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_WriteReg
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_Set_AvgT
</UL>

<P><STRONG><a name="[33b]"></a>LPS25HB_Set_Bdu</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lps25hb_driver.o(i.LPS25HB_Set_Bdu))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LPS25HB_Set_Bdu &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_assert_failed
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_WriteReg
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Init
</UL>

<P><STRONG><a name="[33a]"></a>LPS25HB_Set_InterruptCircuitEnable</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, lps25hb_driver.o(i.LPS25HB_Set_InterruptCircuitEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LPS25HB_Set_InterruptCircuitEnable &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_assert_failed
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_WriteReg
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Init
</UL>

<P><STRONG><a name="[343]"></a>LPS25HB_Set_Odr</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lps25hb_driver.o(i.LPS25HB_Set_Odr))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LPS25HB_Set_Odr &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_assert_failed
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_WriteReg
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_ODR_Value
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_ODR
</UL>

<P><STRONG><a name="[32c]"></a>LPS25HB_Set_PowerDownMode</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, lps25hb_driver.o(i.LPS25HB_Set_PowerDownMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LPS25HB_Set_PowerDownMode &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_assert_failed
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_WriteReg
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_DeActivate
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Activate
</UL>

<P><STRONG><a name="[33c]"></a>LPS25HB_Set_SpiInterface</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lps25hb_driver.o(i.LPS25HB_Set_SpiInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LPS25HB_Set_SpiInterface &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_assert_failed
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_WriteReg
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Init
</UL>

<P><STRONG><a name="[342]"></a>LPS25HB_assert_failed</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lps25hb_driver.o(i.LPS25HB_assert_failed))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LPS25HB_assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_AvgT
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_AvgP
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_SpiInterface
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_PowerDownMode
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Odr
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_InterruptCircuitEnable
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Bdu
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Avg
</UL>

<P><STRONG><a name="[345]"></a>LSM6DS3_ACC_GYRO_GetRawAccData</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_GetRawAccData))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_GetRawAccData &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Axes_Raw
</UL>

<P><STRONG><a name="[347]"></a>LSM6DS3_ACC_GYRO_GetRawGyroData</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_GetRawGyroData))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_GetRawGyroData &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Axes_Raw
</UL>

<P><STRONG><a name="[348]"></a>LSM6DS3_ACC_GYRO_Get_GetStepCounter</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_Get_GetStepCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_Get_GetStepCounter &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Step_Count
</UL>

<P><STRONG><a name="[349]"></a>LSM6DS3_ACC_GYRO_R_D6D_EV_STATUS</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_D6D_EV_STATUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_D6D_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_6D_Orientation_Status
</UL>

<P><STRONG><a name="[34a]"></a>LSM6DS3_ACC_GYRO_R_DOUBLE_TAP_EV_STATUS</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_DOUBLE_TAP_EV_STATUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_DOUBLE_TAP_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Double_Tap_Detection_Status
</UL>

<P><STRONG><a name="[34b]"></a>LSM6DS3_ACC_GYRO_R_DSD_XH</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_DSD_XH))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_DSD_XH &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_6D_Orientation_XH
</UL>

<P><STRONG><a name="[34c]"></a>LSM6DS3_ACC_GYRO_R_DSD_XL</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_DSD_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_DSD_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_6D_Orientation_XL
</UL>

<P><STRONG><a name="[34d]"></a>LSM6DS3_ACC_GYRO_R_DSD_YH</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_DSD_YH))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_DSD_YH &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_6D_Orientation_YH
</UL>

<P><STRONG><a name="[34e]"></a>LSM6DS3_ACC_GYRO_R_DSD_YL</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_DSD_YL))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_DSD_YL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_6D_Orientation_YL
</UL>

<P><STRONG><a name="[34f]"></a>LSM6DS3_ACC_GYRO_R_DSD_ZH</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_DSD_ZH))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_DSD_ZH &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_6D_Orientation_ZH
</UL>

<P><STRONG><a name="[350]"></a>LSM6DS3_ACC_GYRO_R_DSD_ZL</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_DSD_ZL))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_DSD_ZL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_6D_Orientation_ZL
</UL>

<P><STRONG><a name="[351]"></a>LSM6DS3_ACC_GYRO_R_FF_EV_STATUS</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_FF_EV_STATUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_FF_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Free_Fall_Detection_Status
</UL>

<P><STRONG><a name="[352]"></a>LSM6DS3_ACC_GYRO_R_FS_125</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_FS_125))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_FS_125 &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Sensitivity
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_FS
</UL>

<P><STRONG><a name="[353]"></a>LSM6DS3_ACC_GYRO_R_FS_G</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_FS_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_FS_G &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Sensitivity
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_FS
</UL>

<P><STRONG><a name="[354]"></a>LSM6DS3_ACC_GYRO_R_FS_XL</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_FS_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_FS_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Sensitivity
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_FS
</UL>

<P><STRONG><a name="[355]"></a>LSM6DS3_ACC_GYRO_R_ODR_G</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_ODR_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_ODR_G &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_ODR
</UL>

<P><STRONG><a name="[356]"></a>LSM6DS3_ACC_GYRO_R_ODR_XL</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_ODR_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_ODR_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_ODR
</UL>

<P><STRONG><a name="[357]"></a>LSM6DS3_ACC_GYRO_R_PEDO_EV_STATUS</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_PEDO_EV_STATUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_PEDO_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Pedometer_Status
</UL>

<P><STRONG><a name="[358]"></a>LSM6DS3_ACC_GYRO_R_SINGLE_TAP_EV_STATUS</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_SINGLE_TAP_EV_STATUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_SINGLE_TAP_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Single_Tap_Detection_Status
</UL>

<P><STRONG><a name="[359]"></a>LSM6DS3_ACC_GYRO_R_TILT_EV_STATUS</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_TILT_EV_STATUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_TILT_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Tilt_Detection_Status
</UL>

<P><STRONG><a name="[35a]"></a>LSM6DS3_ACC_GYRO_R_WHO_AM_I</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_WHO_AM_I))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_WHO_AM_I &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Get_WhoAmI
</UL>

<P><STRONG><a name="[35b]"></a>LSM6DS3_ACC_GYRO_R_WU_EV_STATUS</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_WU_EV_STATUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_WU_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Wake_Up_Detection_Status
</UL>

<P><STRONG><a name="[35c]"></a>LSM6DS3_ACC_GYRO_R_XEN_G</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_XEN_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_XEN_G &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Axes_Status
</UL>

<P><STRONG><a name="[35d]"></a>LSM6DS3_ACC_GYRO_R_XEN_XL</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_XEN_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_XEN_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Axes_Status
</UL>

<P><STRONG><a name="[35e]"></a>LSM6DS3_ACC_GYRO_R_YEN_G</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_YEN_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_YEN_G &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Axes_Status
</UL>

<P><STRONG><a name="[35f]"></a>LSM6DS3_ACC_GYRO_R_YEN_XL</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_YEN_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_YEN_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Axes_Status
</UL>

<P><STRONG><a name="[360]"></a>LSM6DS3_ACC_GYRO_R_ZEN_G</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_ZEN_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_ZEN_G &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Axes_Status
</UL>

<P><STRONG><a name="[361]"></a>LSM6DS3_ACC_GYRO_R_ZEN_XL</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_R_ZEN_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_R_ZEN_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Axes_Status
</UL>

<P><STRONG><a name="[1c8]"></a>LSM6DS3_ACC_GYRO_W_6DEvOnInt1</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_6DEvOnInt1))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_6DEvOnInt1 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Deinit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_6D_Orientation
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_6D_Orientation
</UL>

<P><STRONG><a name="[363]"></a>LSM6DS3_ACC_GYRO_W_BDU</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_BDU))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_BDU &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Init
</UL>

<P><STRONG><a name="[21a]"></a>LSM6DS3_ACC_GYRO_W_BOOT</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_BOOT))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_BOOT &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACC_GYRO_Sensor_Reboot
</UL>

<P><STRONG><a name="[364]"></a>LSM6DS3_ACC_GYRO_W_DRDY_G_on_INT2</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_DRDY_G_on_INT2))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_DRDY_G_on_INT2 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
</UL>

<P><STRONG><a name="[365]"></a>LSM6DS3_ACC_GYRO_W_DRDY_TEMP_on_INT2</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_DRDY_TEMP_on_INT2))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_DRDY_TEMP_on_INT2 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
</UL>

<P><STRONG><a name="[366]"></a>LSM6DS3_ACC_GYRO_W_DRDY_XL_on_INT2</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_DRDY_XL_on_INT2))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_DRDY_XL_on_INT2 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
</UL>

<P><STRONG><a name="[367]"></a>LSM6DS3_ACC_GYRO_W_DUR</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_DUR))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_DUR &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Duration_Time
</UL>

<P><STRONG><a name="[1ce]"></a>LSM6DS3_ACC_GYRO_W_FFEvOnInt1</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_FFEvOnInt1))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_FFEvOnInt1 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Deinit
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Free_Fall_Detection
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Free_Fall_Detection
</UL>

<P><STRONG><a name="[368]"></a>LSM6DS3_ACC_GYRO_W_FF_Duration</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_FF_Duration))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_ACC_GYRO_W_FF_Duration &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Free_Fall_Detection
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Free_Fall_Detection
</UL>

<P><STRONG><a name="[369]"></a>LSM6DS3_ACC_GYRO_W_FF_THS</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_FF_THS))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_FF_THS &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Free_Fall_Threshold
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Free_Fall_Detection
</UL>

<P><STRONG><a name="[36a]"></a>LSM6DS3_ACC_GYRO_W_FIFO_MODE</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_FIFO_MODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_FIFO_MODE &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Init
</UL>

<P><STRONG><a name="[36b]"></a>LSM6DS3_ACC_GYRO_W_FIFO_TSHLD_on_INT2</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_FIFO_TSHLD_on_INT2))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_FIFO_TSHLD_on_INT2 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
</UL>

<P><STRONG><a name="[36c]"></a>LSM6DS3_ACC_GYRO_W_FSS5_on_INT2</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_FSS5_on_INT2))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_FSS5_on_INT2 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
</UL>

<P><STRONG><a name="[36d]"></a>LSM6DS3_ACC_GYRO_W_FS_125</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_FS_125))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_FS_125 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_FS_Value
</UL>

<P><STRONG><a name="[36e]"></a>LSM6DS3_ACC_GYRO_W_FS_G</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_FS_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_FS_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_FS_Value
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_FS
</UL>

<P><STRONG><a name="[36f]"></a>LSM6DS3_ACC_GYRO_W_FS_XL</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_FS_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_FS_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_FS_Value
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_FS
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Wake_Up_Detection
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Tilt_Detection
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Single_Tap_Detection
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Pedometer
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Free_Fall_Detection
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Double_Tap_Detection
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_6D_Orientation
</UL>

<P><STRONG><a name="[370]"></a>LSM6DS3_ACC_GYRO_W_FUNC_EN</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_FUNC_EN))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_FUNC_EN &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Tilt_Detection
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Pedometer
</UL>

<P><STRONG><a name="[371]"></a>LSM6DS3_ACC_GYRO_W_IF_Addr_Incr</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_IF_Addr_Incr))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_IF_Addr_Incr &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Init
</UL>

<P><STRONG><a name="[23e]"></a>LSM6DS3_ACC_GYRO_W_LP_Mode</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_LP_Mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_LP_Mode &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Set_LP_Mode
</UL>

<P><STRONG><a name="[218]"></a>LSM6DS3_ACC_GYRO_W_LowPower_XL</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_LowPower_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_LowPower_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Set_LP_Mode
</UL>

<P><STRONG><a name="[372]"></a>LSM6DS3_ACC_GYRO_W_ODR_G</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_ODR_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_ODR_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_ODR_Value_When_Enabled
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_ODR
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Sensor_Disable
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Init
</UL>

<P><STRONG><a name="[373]"></a>LSM6DS3_ACC_GYRO_W_ODR_XL</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_ODR_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_ODR_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value_When_Enabled
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Sensor_Disable
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Init
</UL>

<P><STRONG><a name="[374]"></a>LSM6DS3_ACC_GYRO_W_OVERRUN_on_INT2</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_OVERRUN_on_INT2))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_OVERRUN_on_INT2 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
</UL>

<P><STRONG><a name="[375]"></a>LSM6DS3_ACC_GYRO_W_Open_RAM_Page</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_Open_RAM_Page))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_Open_RAM_Page &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PedoThreshold
</UL>

<P><STRONG><a name="[376]"></a>LSM6DS3_ACC_GYRO_W_PEDO_EN</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_PEDO_EN))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_PEDO_EN &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Pedometer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Pedometer
</UL>

<P><STRONG><a name="[377]"></a>LSM6DS3_ACC_GYRO_W_PEDO_STEP_on_INT1</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_PEDO_STEP_on_INT1))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_PEDO_STEP_on_INT1 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Pedometer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Pedometer
</UL>

<P><STRONG><a name="[378]"></a>LSM6DS3_ACC_GYRO_W_PEDO_STEP_on_INT2</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_PEDO_STEP_on_INT2))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_PEDO_STEP_on_INT2 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
</UL>

<P><STRONG><a name="[379]"></a>LSM6DS3_ACC_GYRO_W_PedoStepReset</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_PedoStepReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_PedoStepReset &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Step_Counter_Reset
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Step_Counter_Reset
</UL>

<P><STRONG><a name="[37a]"></a>LSM6DS3_ACC_GYRO_W_PedoThreshold</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_PedoThreshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_ACC_GYRO_W_PedoThreshold &rArr; LSM6DS3_ACC_GYRO_W_Open_RAM_Page &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_Open_RAM_Page
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Pedometer_Threshold
</UL>

<P><STRONG><a name="[37b]"></a>LSM6DS3_ACC_GYRO_W_QUIET_Duration</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_QUIET_Duration))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_QUIET_Duration &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Quiet_Time
</UL>

<P><STRONG><a name="[37c]"></a>LSM6DS3_ACC_GYRO_W_SHOCK_Duration</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_SHOCK_Duration))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_SHOCK_Duration &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Shock_Time
</UL>

<P><STRONG><a name="[37d]"></a>LSM6DS3_ACC_GYRO_W_SIGN_MOT_on_INT2</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_SIGN_MOT_on_INT2))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_SIGN_MOT_on_INT2 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
</UL>

<P><STRONG><a name="[37e]"></a>LSM6DS3_ACC_GYRO_W_SINGLE_DOUBLE_TAP_EV</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_SINGLE_DOUBLE_TAP_EV))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_SINGLE_DOUBLE_TAP_EV &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Double_Tap_Detection
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Double_Tap_Detection
</UL>

<P><STRONG><a name="[37f]"></a>LSM6DS3_ACC_GYRO_W_SIXD_THS</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_SIXD_THS))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_SIXD_THS &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_6D_Orientation
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_6D_Orientation
</UL>

<P><STRONG><a name="[380]"></a>LSM6DS3_ACC_GYRO_W_SLEEP_DUR</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_SLEEP_DUR))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_SLEEP_DUR &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Free_Fall_Detection
</UL>

<P><STRONG><a name="[21c]"></a>LSM6DS3_ACC_GYRO_W_SW_RESET</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_SW_RESET))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_SW_RESET &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACC_GYRO_Sensor_Reset
</UL>

<P><STRONG><a name="[1ca]"></a>LSM6DS3_ACC_GYRO_W_SingleTapOnInt1</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_SingleTapOnInt1))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_SingleTapOnInt1 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Deinit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Single_Tap_Detection
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Single_Tap_Detection
</UL>

<P><STRONG><a name="[381]"></a>LSM6DS3_ACC_GYRO_W_TAP_THS</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_TAP_THS))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_TAP_THS &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Threshold
</UL>

<P><STRONG><a name="[382]"></a>LSM6DS3_ACC_GYRO_W_TAP_X_EN</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_TAP_X_EN))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_TAP_X_EN &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Single_Tap_Detection
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Double_Tap_Detection
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Single_Tap_Detection
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Double_Tap_Detection
</UL>

<P><STRONG><a name="[383]"></a>LSM6DS3_ACC_GYRO_W_TAP_Y_EN</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_TAP_Y_EN))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_TAP_Y_EN &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Single_Tap_Detection
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Double_Tap_Detection
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Single_Tap_Detection
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Double_Tap_Detection
</UL>

<P><STRONG><a name="[384]"></a>LSM6DS3_ACC_GYRO_W_TAP_Z_EN</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_TAP_Z_EN))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_TAP_Z_EN &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Single_Tap_Detection
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Double_Tap_Detection
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Single_Tap_Detection
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Double_Tap_Detection
</UL>

<P><STRONG><a name="[385]"></a>LSM6DS3_ACC_GYRO_W_TILT_EN</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_TILT_EN))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_TILT_EN &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Tilt_Detection
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Tilt_Detection
</UL>

<P><STRONG><a name="[386]"></a>LSM6DS3_ACC_GYRO_W_TIMER_HR</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_TIMER_HR))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_TIMER_HR &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Free_Fall_Detection
</UL>

<P><STRONG><a name="[1cc]"></a>LSM6DS3_ACC_GYRO_W_TapEvOnInt1</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_TapEvOnInt1))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_TapEvOnInt1 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Deinit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Double_Tap_Detection
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Double_Tap_Detection
</UL>

<P><STRONG><a name="[1d2]"></a>LSM6DS3_ACC_GYRO_W_TiltEvOnInt1</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_TiltEvOnInt1))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_TiltEvOnInt1 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Deinit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Tilt_Detection
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Tilt_Detection
</UL>

<P><STRONG><a name="[387]"></a>LSM6DS3_ACC_GYRO_W_WAKE_DUR</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_WAKE_DUR))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_WAKE_DUR &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Wake_Up_Detection
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Free_Fall_Detection
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Wake_Up_Detection
</UL>

<P><STRONG><a name="[388]"></a>LSM6DS3_ACC_GYRO_W_WK_THS</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_WK_THS))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_WK_THS &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Wake_Up_Threshold
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Wake_Up_Detection
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Wake_Up_Detection
</UL>

<P><STRONG><a name="[1d0]"></a>LSM6DS3_ACC_GYRO_W_WUEvOnInt1</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_WUEvOnInt1))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_WUEvOnInt1 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Deinit
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Wake_Up_Detection
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Wake_Up_Detection
</UL>

<P><STRONG><a name="[389]"></a>LSM6DS3_ACC_GYRO_W_XEN_G</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_XEN_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_XEN_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_Axes_Status
</UL>

<P><STRONG><a name="[38a]"></a>LSM6DS3_ACC_GYRO_W_XEN_XL</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_XEN_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_XEN_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Axes_Status
</UL>

<P><STRONG><a name="[38b]"></a>LSM6DS3_ACC_GYRO_W_YEN_G</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_YEN_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_YEN_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_Axes_Status
</UL>

<P><STRONG><a name="[38c]"></a>LSM6DS3_ACC_GYRO_W_YEN_XL</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_YEN_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_YEN_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Axes_Status
</UL>

<P><STRONG><a name="[38d]"></a>LSM6DS3_ACC_GYRO_W_ZEN_G</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_ZEN_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_ZEN_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_Axes_Status
</UL>

<P><STRONG><a name="[38e]"></a>LSM6DS3_ACC_GYRO_W_ZEN_XL</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_W_ZEN_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_ACC_GYRO_W_ZEN_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Axes_Status
</UL>

<P><STRONG><a name="[216]"></a>LSM6DS3_Sensor_IO_ITConfig</STRONG> (Thumb, 124 bytes, Stack size 72 bytes, wesu_sensors.o(i.LSM6DS3_Sensor_IO_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = LSM6DS3_Sensor_IO_ITConfig &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Init
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Init
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DS3_ACCELERO_Init
</UL>

<P><STRONG><a name="[fa]"></a>LedControlMaskChanged</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, wesu_config.o(i.LedControlMaskChanged))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LedControlMaskChanged &rArr; BSP_LED_OnGpio
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_OnGpio
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_OffGpio
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[396]"></a>LedManageEnd</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, wesu_config.o(i.LedManageEnd))
<BR><BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_OffGpio
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
</UL>

<P><STRONG><a name="[397]"></a>LedManageStart</STRONG> (Thumb, 326 bytes, Stack size 16 bytes, wesu_config.o(i.LedManageStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LedManageStart &rArr; LedSmoothRampDownGpio &rArr; Led_Pwm &rArr; BSP_LED_OnGpio
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedSmoothRampDownGpio
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_OnGpio
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_OffGpio
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_GetState
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedSmoothRampUpGpio
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_ToggleGpio
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
</UL>

<P><STRONG><a name="[39a]"></a>LedSmoothBlinkGpio</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wesu.o(i.LedSmoothBlinkGpio))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LedSmoothBlinkGpio &rArr; LedSmoothRampDownGpio &rArr; Led_Pwm &rArr; BSP_LED_OnGpio
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedSmoothRampDownGpio
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedSmoothRampUpGpio
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuSysChangeRunMode
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgLedBlinkme
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoShutdown
</UL>

<P><STRONG><a name="[398]"></a>LedSmoothRampDownGpio</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, wesu.o(i.LedSmoothRampDownGpio))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LedSmoothRampDownGpio &rArr; Led_Pwm &rArr; BSP_LED_OnGpio
</UL>
<BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Pwm
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedManageStart
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedSmoothBlinkGpio
</UL>

<P><STRONG><a name="[399]"></a>LedSmoothRampUpGpio</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wesu.o(i.LedSmoothRampUpGpio))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LedSmoothRampUpGpio &rArr; Led_Pwm &rArr; BSP_LED_OnGpio
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_OnGpio
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Pwm
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedManageStart
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedSmoothBlinkGpio
</UL>

<P><STRONG><a name="[39b]"></a>Led_Pwm</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, wesu.o(i.Led_Pwm))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Led_Pwm &rArr; BSP_LED_OnGpio
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_OnGpio
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_OffGpio
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedSmoothRampDownGpio
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedSmoothRampUpGpio
</UL>

<P><STRONG><a name="[10a]"></a>MagFsChanged</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, wesu_config.o(i.MagFsChanged))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MagFsChanged &rArr; BSP_GYRO_Get_Axes
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Get_Axes
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Set_FS_Value
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Get_FS
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigFullRun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[10b]"></a>MagOdrChanged</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, wesu_config.o(i.MagOdrChanged))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MagOdrChanged &rArr; BSP_GYRO_Get_Axes
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Get_Axes
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Set_ODR_Value
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Get_ODR
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigFullRun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[3a7]"></a>ManageTerminal</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, console.o(i.ManageTerminal))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = ManageTerminal &rArr; ProcessTermCommand &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessTermCommand
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSerialInput
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
</UL>

<P><STRONG><a name="[af]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[3a5]"></a>MotionFX_manager_getDataOUT</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, algorithms.o(i.MotionFX_manager_getDataOUT))
<BR><BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageBleConnection
</UL>

<P><STRONG><a name="[100]"></a>MotionFxCtrlChanged</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, wesu_config.o(i.MotionFxCtrlChanged))
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[ad]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[3aa]"></a>Osal_MemCpy</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osal.o(i.Osal_MemCpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Osal_MemCpy &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_write_config_data
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_cmd
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_scan_resp_data
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_write_response
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_update_char_value
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_serv
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_update_adv_data
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_discoverable
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_auth_requirement
</UL>

<P><STRONG><a name="[3ac]"></a>Osal_MemSet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osal.o(i.Osal_MemSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Osal_MemSet &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_write_config_data
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_set_tx_power_level
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_scan_resp_data
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_read_local_version
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_l2cap_connection_parameter_update_request
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_write_response
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_update_char_value
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_init
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_allow_read
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_serv
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_update_adv_data
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_non_discoverable
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_discoverable
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_auth_requirement
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_init
</UL>

<P><STRONG><a name="[1d5]"></a>PRINTF</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, console.o(i.PRINTF))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_DeInit
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consoleInit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consoleDeInit
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WESU_PRINTF_USART
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WESU_PRINTF_BLE
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Event_CB
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_Update
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Quat_Update
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pwr_Update
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Press_Update
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluenrgInitialization
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm2_Update
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm1_Update
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccGyroMag_Update
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Update
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Term_Update
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctrl1_Update
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stderr_Update
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Attribute_Modified_CB
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Feature_Service
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Console_Service
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Config_Service
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Term_Update_AfterRead
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHWOrientation6D
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopBlePmMode
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopBleMode
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BlueNRG_Stack
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BlueNRG_Hw
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BlueNRG_Custom_Services
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_BlueNRG_Versions
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgResetStc3115I2C
</UL>

<P><STRONG><a name="[3ad]"></a>PRINTF_INFO</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, console.o(i.PRINTF_INFO))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = PRINTF_INFO &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WESU_PRINTF_BLE
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setConnectable
</UL>

<P><STRONG><a name="[ff]"></a>PedometerCtrlChanged</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, wesu_config.o(i.PedometerCtrlChanged))
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[b4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[1f7]"></a>PreCheckLicense</STRONG> (Thumb, 34 bytes, Stack size 56 bytes, algorithms.o(i.PreCheckLicense))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = PreCheckLicense &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_StartupConfig
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm2_init
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm1_init
</UL>

<P><STRONG><a name="[3b3]"></a>PrepareLowPowerMode</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, low_power.o(i.PrepareLowPowerMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = PrepareLowPowerMode &rArr; BSP_PB_DeInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_DeInit
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_OffGpio
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_GetState
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigAllGpioAsANInput
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
</UL>

<P><STRONG><a name="[10d]"></a>PressOdrChanged</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, wesu_config.o(i.PressOdrChanged))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PressOdrChanged &rArr; BSP_GYRO_Get_Axes
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Get_Axes
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_Set_ODR_Value
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_Get_ODR
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigFullRun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[3a4]"></a>Press_Update</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bluest_protocol.o(i.Press_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = Press_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;safe_aci_gatt_update_char_value
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stderr_Update
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageBleConnection
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Request_CB
</UL>

<P><STRONG><a name="[3b6]"></a>PrintSystemParameters</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, wesu_config.o(i.PrintSystemParameters))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = PrintSystemParameters &rArr; DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTC_GetWeekDayName
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTC_GetMonthName
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuSaveSystemParameters
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuBackupSystemParameters
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetSysInfo
</UL>

<P><STRONG><a name="[26]"></a>ProcDbgDoNotReplyHidden</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, console.o(i.ProcDbgDoNotReplyHidden))
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>ProcDbgDumpAccGyroHidden</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, console.o(i.ProcDbgDumpAccGyroHidden))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = ProcDbgDumpAccGyroHidden &rArr; Sensor_Dump &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Dump
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>ProcDbgDumpMagHidden</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, console.o(i.ProcDbgDumpMagHidden))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = ProcDbgDumpMagHidden &rArr; Sensor_Dump &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Dump
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>ProcDbgDumpPressTempHidden</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, console.o(i.ProcDbgDumpPressTempHidden))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = ProcDbgDumpPressTempHidden &rArr; Sensor_Dump &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Dump
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[27]"></a>ProcDbgEchoNameHidden</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, console.o(i.ProcDbgEchoNameHidden))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = ProcDbgEchoNameHidden &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>ProcDbgEmptyCmd</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, console.o(i.ProcDbgEmptyCmd))
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>ProcDbgEnterConnOnly</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, console.o(i.ProcDbgEnterConnOnly))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ProcDbgEnterConnOnly &rArr; BSP_REGS_Manage &rArr; BSP_PERSREGS_Write &rArr; BSP_EEPROM_WriteBuffer &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_Manage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>ProcDbgEnterStop</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, console.o(i.ProcDbgEnterStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ProcDbgEnterStop &rArr; BSP_REGS_Manage &rArr; BSP_PERSREGS_Write &rArr; BSP_EEPROM_WriteBuffer &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_Manage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>ProcDbgEnterStopWBle</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, console.o(i.ProcDbgEnterStopWBle))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ProcDbgEnterStopWBle &rArr; BSP_REGS_Manage &rArr; BSP_PERSREGS_Write &rArr; BSP_EEPROM_WriteBuffer &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_Manage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>ProcDbgEraseLicenses</STRONG> (Thumb, 64 bytes, Stack size 56 bytes, console.o(i.ProcDbgEraseLicenses))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = ProcDbgEraseLicenses &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LICENSE_Write
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>ProcDbgGetAlgoStatus</STRONG> (Thumb, 1420 bytes, Stack size 80 bytes, console.o(i.ProcDbgGetAlgoStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = ProcDbgGetAlgoStatus &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LICENSE_Read
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>ProcDbgGetBackupData</STRONG> (Thumb, 276 bytes, Stack size 40 bytes, console.o(i.ProcDbgGetBackupData))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = ProcDbgGetBackupData &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuGetBackupData
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTC_GetWeekDayName
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTC_GetMonthName
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>ProcDbgGetBluenrgInfo</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, console.o(i.ProcDbgGetBluenrgInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = ProcDbgGetBluenrgInfo &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[0]"></a>ProcDbgGetFwVersion</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, console.o(i.ProcDbgGetFwVersion))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = ProcDbgGetFwVersion &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetSysInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[3bd]"></a>ProcDbgGetLic</STRONG> (Thumb, 348 bytes, Stack size 80 bytes, console.o(i.ProcDbgGetLic))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = ProcDbgGetLic &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LICENSE_Read
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetLic
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetLic3
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetLic2
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetLic1
</UL>

<P><STRONG><a name="[19]"></a>ProcDbgGetLic1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, console.o(i.ProcDbgGetLic1))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = ProcDbgGetLic1 &rArr; ProcDbgGetLic &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetLic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>ProcDbgGetLic2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, console.o(i.ProcDbgGetLic2))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = ProcDbgGetLic2 &rArr; ProcDbgGetLic &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetLic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>ProcDbgGetLic3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, console.o(i.ProcDbgGetLic3))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = ProcDbgGetLic3 &rArr; ProcDbgGetLic &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetLic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>ProcDbgGetMcuId</STRONG> (Thumb, 94 bytes, Stack size 56 bytes, console.o(i.ProcDbgGetMcuId))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = ProcDbgGetMcuId &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetSysInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>ProcDbgGetPersRegVal</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, console.o(i.ProcDbgGetPersRegVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = ProcDbgGetPersRegVal &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_ManageWAction
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_Manage
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>ProcDbgGetPowerInfo</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, console.o(i.ProcDbgGetPowerInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = ProcDbgGetPowerInfo &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>ProcDbgGetSessionRegVal</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, console.o(i.ProcDbgGetSessionRegVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = ProcDbgGetSessionRegVal &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_ManageWAction
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_Manage
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>ProcDbgGetSysInfo</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, console.o(i.ProcDbgGetSysInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = ProcDbgGetSysInfo &rArr; ProcDbgGetMcuId &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintSystemParameters
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetMcuId
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetFwVersion
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[2c]"></a>ProcDbgHelp</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, console.o(i.ProcDbgHelp))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = ProcDbgHelp &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>ProcDbgHelpHidden</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, console.o(i.ProcDbgHelpHidden))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = ProcDbgHelpHidden &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>ProcDbgLedBlinkme</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, console.o(i.ProcDbgLedBlinkme))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = ProcDbgLedBlinkme &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedSmoothBlinkGpio
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_ManageWAction
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>ProcDbgMinPower</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, console.o(i.ProcDbgMinPower))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = ProcDbgMinPower &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>ProcDbgNormPower</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, console.o(i.ProcDbgNormPower))
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>ProcDbgRebootAccGyroHidden</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, console.o(i.ProcDbgRebootAccGyroHidden))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = ProcDbgRebootAccGyroHidden &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReconfigHw
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACC_GYRO_Sensor_Reset
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACC_GYRO_Sensor_Reboot
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_DeInit
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>ProcDbgRebootMagHidden</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, console.o(i.ProcDbgRebootMagHidden))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = ProcDbgRebootMagHidden &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReconfigHw
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Sensor_SoftRST
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Sensor_Reboot
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_DeInit
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[25]"></a>ProcDbgRebootPressTempHidden</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, console.o(i.ProcDbgRebootPressTempHidden))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = ProcDbgRebootPressTempHidden &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReconfigHw
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESS_TEMP_Sensor_SwRst_Reboot
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_DeInit
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[2a]"></a>ProcDbgResetPower</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, console.o(i.ProcDbgResetPower))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = ProcDbgResetPower &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_Reset
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[3ae]"></a>ProcDbgResetStc3115I2C</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, wesu_gg.o(i.ProcDbgResetStc3115I2C))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_I2C_Error
</UL>

<P><STRONG><a name="[29]"></a>ProcDbgSTC3115CurrentHidden</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, console.o(i.ProcDbgSTC3115CurrentHidden))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = ProcDbgSTC3115CurrentHidden &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[28]"></a>ProcDbgSTC3115VoltHidden</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, console.o(i.ProcDbgSTC3115VoltHidden))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = ProcDbgSTC3115VoltHidden &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>ProcDbgSetBleConIntvMode</STRONG> (Thumb, 280 bytes, Stack size 24 bytes, console.o(i.ProcDbgSetBleConIntvMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = ProcDbgSetBleConIntvMode &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[3c1]"></a>ProcDbgSetLic</STRONG> (Thumb, 788 bytes, Stack size 496 bytes, console.o(i.ProcDbgSetLic))
<BR><BR>[Stack]<UL><LI>Max Depth = 1424<LI>Call Chain = ProcDbgSetLic &rArr; ProcDbgGetLic &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_ManageWAction
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_Manage
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LICENSE_Write
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lStringShift
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSCANF_WESU_X
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetLic
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckXDigitString
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetLic3
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetLic2
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetLic1
</UL>

<P><STRONG><a name="[1a]"></a>ProcDbgSetLic1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, console.o(i.ProcDbgSetLic1))
<BR><BR>[Stack]<UL><LI>Max Depth = 1424<LI>Call Chain = ProcDbgSetLic1 &rArr; ProcDbgSetLic &rArr; ProcDbgGetLic &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetLic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>ProcDbgSetLic2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, console.o(i.ProcDbgSetLic2))
<BR><BR>[Stack]<UL><LI>Max Depth = 1424<LI>Call Chain = ProcDbgSetLic2 &rArr; ProcDbgSetLic &rArr; ProcDbgGetLic &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetLic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>ProcDbgSetLic3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, console.o(i.ProcDbgSetLic3))
<BR><BR>[Stack]<UL><LI>Max Depth = 1424<LI>Call Chain = ProcDbgSetLic3 &rArr; ProcDbgSetLic &rArr; ProcDbgGetLic &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetLic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>ProcDbgSetPersRegVal</STRONG> (Thumb, 496 bytes, Stack size 24 bytes, console.o(i.ProcDbgSetPersRegVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = ProcDbgSetPersRegVal &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_ManageWAction
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_Manage
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>ProcDbgSetSessionRegVal</STRONG> (Thumb, 494 bytes, Stack size 24 bytes, console.o(i.ProcDbgSetSessionRegVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = ProcDbgSetSessionRegVal &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_ManageWAction
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_Manage
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>ProcDbgSetUsbBleBridge</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, console.o(i.ProcDbgSetUsbBleBridge))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = ProcDbgSetUsbBleBridge &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_To_OTA_Service_Manager_Application
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SystemReset
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>ProcDbgSetdate</STRONG> (Thumb, 330 bytes, Stack size 40 bytes, console.o(i.ProcDbgSetdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = ProcDbgSetdate &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeSU_SetDateTime
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeSU_GetDateTime
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTC_GetWeekDayName
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTC_GetMonthName
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>ProcDbgSettime</STRONG> (Thumb, 274 bytes, Stack size 32 bytes, console.o(i.ProcDbgSettime))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = ProcDbgSettime &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeSU_SetDateTime
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeSU_GetDateTime
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTC_GetWeekDayName
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTC_GetMonthName
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>ProcDbgTestIwdg</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, console.o(i.ProcDbgTestIwdg))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = ProcDbgTestIwdg &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_OnGpio
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>ProcDbgViewdate</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, console.o(i.ProcDbgViewdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = ProcDbgViewdate &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeSU_GetDateTime
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTC_GetWeekDayName
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTC_GetRtcConfigAsString
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTC_GetMonthName
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>ProcDbgViewtime</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, console.o(i.ProcDbgViewtime))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = ProcDbgViewtime &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeSU_GetDateTime
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTC_GetWeekDayName
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTC_GetRtcConfigAsString
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RTC_GetMonthName
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> console.o(.data)
</UL>
<P><STRONG><a name="[20f]"></a>ProcessRegCommand</STRONG> (Thumb, 358 bytes, Stack size 48 bytes, wesu_config.o(i.ProcessRegCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ProcessRegCommand &rArr; BSP_REGS_Manage &rArr; BSP_PERSREGS_Write &rArr; BSP_EEPROM_WriteBuffer &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_Manage
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Get_Axes
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SessionRegCheckCorrect
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PermRegCheckCorrect
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckRegVect
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_ManageWAction
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Attribute_Modified_CB
</UL>

<P><STRONG><a name="[3a9]"></a>ProcessTermCommand</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, console.o(i.ProcessTermCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = ProcessTermCommand &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_WD_Refresh
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Get_Axes
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageTerminal
</UL>

<P><STRONG><a name="[20d]"></a>ProcessTerminalStringBle</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, console.o(i.ProcessTerminalStringBle))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = ProcessTerminalStringBle &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Attribute_Modified_CB
</UL>

<P><STRONG><a name="[110]"></a>PwrModeAltRegChange</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wesu_config.o(i.PwrModeAltRegChange))
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[fe]"></a>PwrModeControlChanged</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, wesu_config.o(i.PwrModeControlChanged))
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[3a2]"></a>Pwr_Update</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, bluest_protocol.o(i.Pwr_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = Pwr_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;safe_aci_gatt_update_char_value
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stderr_Update
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageBleConnection
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Request_CB
</UL>

<P><STRONG><a name="[3a6]"></a>Quat_Update</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, bluest_protocol.o(i.Quat_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = Quat_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;safe_aci_gatt_update_char_value
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stderr_Update
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageBleConnection
</UL>

<P><STRONG><a name="[2da]"></a>RTC_Bcd2ToByte</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32l1xx_hal_rtc.o(i.RTC_Bcd2ToByte))
<BR><BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>

<P><STRONG><a name="[2e0]"></a>RTC_ByteToBcd2</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32l1xx_hal_rtc.o(i.RTC_ByteToBcd2))
<BR><BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
</UL>

<P><STRONG><a name="[2de]"></a>RTC_EnterInitMode</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32l1xx_hal_rtc.o(i.RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
</UL>

<P><STRONG><a name="[f9]"></a>ReadOnly</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wesu_config.o(i.ReadOnly))
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[303]"></a>Read_Request_CB</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, bluest_protocol.o(i.Read_Request_CB))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = Read_Request_CB &rArr; Pwr_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_Update
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pwr_Update
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Press_Update
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccGyroMag_Update
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;safe_aci_gatt_update_char_value
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Term_Update_AfterRead
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_allow_read
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Event_CB
</UL>

<P><STRONG><a name="[104]"></a>RedLedControlMaskChanged</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, wesu_config.o(i.RedLedControlMaskChanged))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RedLedControlMaskChanged &rArr; BSP_LED_OnGpio
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_OnGpio
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_OffGpio
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[3d4]"></a>RegistersInitialization</STRONG> (Thumb, 640 bytes, Stack size 32 bytes, wesu_config.o(i.RegistersInitialization))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = RegistersInitialization &rArr; DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_Manage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuGetSystemStartup
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSubSampling
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
</UL>

<P><STRONG><a name="[2c2]"></a>RestoreRunMode</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, low_power.o(i.RestoreRunMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 1144<LI>Call Chain = RestoreRunMode &rArr; HCI_Process &rArr; HCI_Event_CB &rArr; Attribute_Modified_CB &rArr; ctrl1_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Process
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_InitGpio
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_OnGpio
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PWMGT_Init
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_Init
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_DeInit
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CHARGER_Init
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BNRG_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
</UL>

<P><STRONG><a name="[10e]"></a>RtcConfChanged</STRONG> (Thumb, 302 bytes, Stack size 32 bytes, wesu_config.o(i.RtcConfChanged))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = RtcConfChanged &rArr; WeSU_SetDateTime &rArr; HAL_RTC_SetTime &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeSU_SetDateTime
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeSU_GetDateTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[3c2]"></a>SSCANF_WESU_X</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, console.o(i.SSCANF_WESU_X))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = SSCANF_WESU_X &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetLic
</UL>

<P><STRONG><a name="[3da]"></a>STC3115_AlarmClear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stc3115_driver_00.o(i.STC3115_AlarmClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = STC3115_AlarmClear &rArr; STC3115_WriteByte &rArr; BSP_GG_IO_Write &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_ClearIT
</UL>

<P><STRONG><a name="[3db]"></a>STC3115_AlarmGet</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stc3115_driver_00.o(i.STC3115_AlarmGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = STC3115_AlarmGet &rArr; STC3115_ReadByte &rArr; BSP_GG_IO_Read &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_GetIT
</UL>

<P><STRONG><a name="[3dc]"></a>STC3115_AlarmSet</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stc3115_driver_00.o(i.STC3115_AlarmSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = STC3115_AlarmSet &rArr; STC3115_ReadByte &rArr; BSP_GG_IO_Read &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_WriteByte
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_SetIT
</UL>

<P><STRONG><a name="[3dd]"></a>STC3115_AlarmSetSOCThreshold</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stc3115_driver_00.o(i.STC3115_AlarmSetSOCThreshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = STC3115_AlarmSetSOCThreshold &rArr; STC3115_WriteByte &rArr; BSP_GG_IO_Write &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_AlarmSetSOCTh
</UL>

<P><STRONG><a name="[3de]"></a>STC3115_AlarmSetVoltageThreshold</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stc3115_driver_00.o(i.STC3115_AlarmSetVoltageThreshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = STC3115_AlarmSetVoltageThreshold &rArr; STC3115_WriteByte &rArr; BSP_GG_IO_Write &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_AlarmSetVoTh
</UL>

<P><STRONG><a name="[3df]"></a>STC3115_AlarmStop</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stc3115_driver_00.o(i.STC3115_AlarmStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = STC3115_AlarmStop &rArr; STC3115_ReadByte &rArr; BSP_GG_IO_Read &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_WriteByte
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_StopIT
</UL>

<P><STRONG><a name="[2a5]"></a>STC3115_SetPowerSavingMode</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stc3115_driver_00.o(i.STC3115_SetPowerSavingMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = STC3115_SetPowerSavingMode &rArr; STC3115_ReadByte &rArr; BSP_GG_IO_Read &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_WriteByte
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_PowerSavingMode
</UL>

<P><STRONG><a name="[b2]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[20b]"></a>SavePedometerData</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, algorithms.o(i.SavePedometerData))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = SavePedometerData &rArr; DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_Manage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithms_Process
</UL>

<P><STRONG><a name="[3bb]"></a>Sensor_Dump</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, console.o(i.Sensor_Dump))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = Sensor_Dump &rArr; DBG_PRINTF_TERMINAL &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReconfigHw
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgDumpPressTempHidden
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgDumpMagHidden
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgDumpAccGyroHidden
</UL>

<P><STRONG><a name="[249]"></a>Sensor_IO_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wesu_sensors.o(i.Sensor_IO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Sensor_IO_Init &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsSpiInit
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DS3_GYRO_Init
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LSM6DS3_ACCELERO_Init
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS25HB_TEMPERATURE_Init
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LPS25HB_PRESSURE_Init
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LIS3MDL_MAGNETO_Init
</UL>

<P><STRONG><a name="[326]"></a>Sensor_IO_Read</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, wesu_sensors.o(i.Sensor_IO_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensors_SPI_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Dump
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_ReadReg
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_ReadReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_ReadReg
</UL>

<P><STRONG><a name="[32a]"></a>Sensor_IO_Write</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, wesu_sensors.o(i.Sensor_IO_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensors_SPI_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_WriteReg
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_WriteReg
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_WriteReg
</UL>

<P><STRONG><a name="[3e5]"></a>SensorsConfigFullRun</STRONG> (Thumb, 454 bytes, Stack size 32 bytes, wesu_config.o(i.SensorsConfigFullRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = SensorsConfigFullRun &rArr; Algorithms_Init &rArr; FX_StartupConfig &rArr; ReCallCalibrationFromMemory &rArr; DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithms_Init
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_Manage
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Get_Axes
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Set_LP_Mode
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Set_LP_Mode
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Set_LP_Mode
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressOdrChanged
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MagOdrChanged
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MagFsChanged
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GyroOdrChanged
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GyroFsChanged
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccOdrChanged
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccFsChanged
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoLowPowerRunMode
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoHardwareReconfig
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoFullRunWfiMode
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoFullRunMode
</UL>

<P><STRONG><a name="[3e6]"></a>SensorsConfigInit</STRONG> (Thumb, 408 bytes, Stack size 24 bytes, wesu_config.o(i.SensorsConfigInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = SensorsConfigInit &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SIGN_MOT_on_INT2
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PEDO_STEP_on_INT2
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_OVERRUN_on_INT2
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FSS5_on_INT2
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FIFO_TSHLD_on_INT2
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_DRDY_XL_on_INT2
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_DRDY_TEMP_on_INT2
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_DRDY_G_on_INT2
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TEMPERATURE_Sensor_Enable
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TEMPERATURE_Sensor_Disable
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TEMPERATURE_Init
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_Sensor_Enable
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_Sensor_Disable
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_Init
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Sensor_Enable
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Sensor_Disable
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Init
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Sensor_Enable
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Sensor_Disable
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Init
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Sensor_Enable
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Sensor_Disable
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigFullRun
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigLowPowerRunWithAlgos
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigLowPowerRun
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigJustAcc
</UL>

<P><STRONG><a name="[3f1]"></a>SensorsConfigJustAcc</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, wesu_config.o(i.SensorsConfigJustAcc))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = SensorsConfigJustAcc &rArr; SensorsConfigInit &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Set_LP_Mode
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoRunSleepMode
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoRunLowPowerSleepMode
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopBlePmMode
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoLowPowerRunModeJustAcc
</UL>

<P><STRONG><a name="[3f2]"></a>SensorsConfigLowPowerRun</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, wesu_config.o(i.SensorsConfigLowPowerRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = SensorsConfigLowPowerRun &rArr; SensorsConfigInit &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_Set_ODR_Value
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_Set_AvgT
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_Set_AvgP
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Set_LP_Mode
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Set_LP_Mode
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Set_LP_Mode
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoLowPowerMode
</UL>

<P><STRONG><a name="[3f3]"></a>SensorsConfigLowPowerRunWithAlgos</STRONG> (Thumb, 304 bytes, Stack size 24 bytes, wesu_config.o(i.SensorsConfigLowPowerRunWithAlgos))
<BR><BR>[Stack]<UL><LI>Max Depth = 952<LI>Call Chain = SensorsConfigLowPowerRunWithAlgos &rArr; Algorithms_Init &rArr; FX_StartupConfig &rArr; ReCallCalibrationFromMemory &rArr; DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithms_Init
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_Manage
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_Set_ODR_Value
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_Set_AvgT
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_Set_AvgP
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Set_LP_Mode
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Set_LP_Mode
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Set_LP_Mode
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GyroOdrChanged
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GyroFsChanged
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccOdrChanged
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccFsChanged
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoLowPowerRunWithAlgos
</UL>

<P><STRONG><a name="[3f4]"></a>SensorsShutdown</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, wesu_config.o(i.SensorsShutdown))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SensorsShutdown &rArr; BSP_TEMPERATURE_Sensor_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TEMPERATURE_Sensor_Disable
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_Sensor_Disable
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Sensor_Disable
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Sensor_Disable
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Sensor_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoRebootMode
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoRebootDefSettingsMode
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopMode
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopBleMode
</UL>

<P><STRONG><a name="[1d7]"></a>Stderr_Update</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, bluest_protocol.o(i.Stderr_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 744 + In Cycle
<LI>Call Chain = Stderr_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;safe_aci_gatt_update_char_value
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_Update
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Quat_Update
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pwr_Update
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Press_Update
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm2_Update
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm1_Update
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccGyroMag_Update
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Update
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Term_Update
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctrl1_Update
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Attribute_Modified_CB
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Term_Update_AfterRead
</UL>

<P><STRONG><a name="[291]"></a>Switch_To_OTA_Service_Manager_Application</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wesu_config.o(i.Switch_To_OTA_Service_Manager_Application))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Switch_To_OTA_Service_Manager_Application &rArr; BSP_EEPROM_WriteBuffer &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_EEPROM_WriteBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetUsbBleBridge
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DummyRegChange
</UL>

<P><STRONG><a name="[292]"></a>Switch_To_USB_DFU</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wesu_config.o(i.Switch_To_USB_DFU))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Switch_To_USB_DFU &rArr; BSP_EEPROM_WriteBuffer &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_EEPROM_WriteBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DummyRegChange
</UL>

<P><STRONG><a name="[b5]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[f4]"></a>SystemClock_Config_HSE_24MHz</STRONG> (Thumb, 100 bytes, Stack size 80 bytes, main.o(i.SystemClock_Config_HSE_24MHz))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SystemClock_Config_HSE_24MHz &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_CLKSourceConfig
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoLowPowerRunMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(i.SystemGotoLowPowerRunMode)
</UL>
<P><STRONG><a name="[f3]"></a>SystemClock_Config_MSI_4MHz</STRONG> (Thumb, 108 bytes, Stack size 88 bytes, main.o(i.SystemClock_Config_MSI_4MHz))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SystemClock_Config_MSI_4MHz &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_CLKSourceConfig
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoRunSleepMode
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoRunLowPowerSleepMode
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoLowPowerRunWithAlgos
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoLowPowerRunModeJustAcc
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoLowPowerMode
</UL>
<BR>[Address Reference Count : 5]<UL><LI> wesu_config.o(i.SystemGotoLowPowerMode)
<LI> wesu_config.o(i.SystemGotoLowPowerRunModeJustAcc)
<LI> wesu_config.o(i.SystemGotoLowPowerRunWithAlgos)
<LI> wesu_config.o(i.SystemGotoRunLowPowerSleepMode)
<LI> wesu_config.o(i.SystemGotoRunSleepMode)
</UL>
<P><STRONG><a name="[2d]"></a>SystemClock_Config_RTC_HSE32MHz</STRONG> (Thumb, 150 bytes, Stack size 104 bytes, main.o(i.SystemClock_Config_RTC_HSE32MHz))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = SystemClock_Config_RTC_HSE32MHz &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_CLKSourceConfig
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_DeInit
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoFullRunWfiMode
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoFullRunMode
</UL>
<BR>[Address Reference Count : 5]<UL><LI> low_power.o(.data)
<LI> main.o(i.main)
<LI> main.o(.data)
<LI> wesu_config.o(i.SystemGotoFullRunMode)
<LI> wesu_config.o(i.SystemGotoFullRunWfiMode)
</UL>
<P><STRONG><a name="[3f9]"></a>SystemGotoFullRunMode</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, wesu_config.o(i.SystemGotoFullRunMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = SystemGotoFullRunMode &rArr; SensorsConfigFullRun &rArr; Algorithms_Init &rArr; FX_StartupConfig &rArr; ReCallCalibrationFromMemory &rArr; DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigFullRun
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_RTC_HSE32MHz
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSubSampling
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuSysChangeRunMode
</UL>

<P><STRONG><a name="[3fa]"></a>SystemGotoFullRunWfiMode</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, wesu_config.o(i.SystemGotoFullRunWfiMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 968<LI>Call Chain = SystemGotoFullRunWfiMode &rArr; SensorsConfigFullRun &rArr; Algorithms_Init &rArr; FX_StartupConfig &rArr; ReCallCalibrationFromMemory &rArr; DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigFullRun
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_RTC_HSE32MHz
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSubSampling
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuSysChangeRunMode
</UL>

<P><STRONG><a name="[3fb]"></a>SystemGotoHardwareReconfig</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, wesu_config.o(i.SystemGotoHardwareReconfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 968<LI>Call Chain = SystemGotoHardwareReconfig &rArr; SensorsConfigFullRun &rArr; Algorithms_Init &rArr; FX_StartupConfig &rArr; ReCallCalibrationFromMemory &rArr; DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigFullRun
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSubSampling
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuSysChangeRunMode
</UL>

<P><STRONG><a name="[3fc]"></a>SystemGotoLowPowerMode</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, wesu_config.o(i.SystemGotoLowPowerMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = SystemGotoLowPowerMode &rArr; SensorsConfigLowPowerRun &rArr; SensorsConfigInit &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_MSI_4MHz
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSubSampling
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigLowPowerRun
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuSysChangeRunMode
</UL>

<P><STRONG><a name="[3fd]"></a>SystemGotoLowPowerRunMode</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, wesu_config.o(i.SystemGotoLowPowerRunMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 968<LI>Call Chain = SystemGotoLowPowerRunMode &rArr; SensorsConfigFullRun &rArr; Algorithms_Init &rArr; FX_StartupConfig &rArr; ReCallCalibrationFromMemory &rArr; DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigFullRun
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_HSE_24MHz
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSubSampling
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuSysChangeRunMode
</UL>

<P><STRONG><a name="[3fe]"></a>SystemGotoLowPowerRunModeJustAcc</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, wesu_config.o(i.SystemGotoLowPowerRunModeJustAcc))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = SystemGotoLowPowerRunModeJustAcc &rArr; SensorsConfigJustAcc &rArr; SensorsConfigInit &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_MSI_4MHz
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSubSampling
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigJustAcc
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuSysChangeRunMode
</UL>

<P><STRONG><a name="[3ff]"></a>SystemGotoLowPowerRunWithAlgos</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, wesu_config.o(i.SystemGotoLowPowerRunWithAlgos))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = SystemGotoLowPowerRunWithAlgos &rArr; SensorsConfigLowPowerRunWithAlgos &rArr; Algorithms_Init &rArr; FX_StartupConfig &rArr; ReCallCalibrationFromMemory &rArr; DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_MSI_4MHz
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSubSampling
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigLowPowerRunWithAlgos
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuSysChangeRunMode
</UL>

<P><STRONG><a name="[400]"></a>SystemGotoPermanentStopBleMode</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, wesu_config.o(i.SystemGotoPermanentStopBleMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 1224<LI>Call Chain = SystemGotoPermanentStopBleMode &rArr; BluenrgInitialization &rArr; Init_BlueNRG_Hw &rArr; Check_BlueNRG_Versions &rArr; getBlueNRGVersion &rArr; HCI_Process &rArr; HCI_Event_CB &rArr; Attribute_Modified_CB &rArr; ctrl1_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Process
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setConnectable
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluenrgInitialization
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_GetState
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvIntvChange
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_Stop
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_PowerSavingMode
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoShutdown
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsShutdown
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuSysChangeRunMode
</UL>

<P><STRONG><a name="[404]"></a>SystemGotoPermanentStopBlePmMode</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, wesu_config.o(i.SystemGotoPermanentStopBlePmMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232<LI>Call Chain = SystemGotoPermanentStopBlePmMode &rArr; BluenrgInitialization &rArr; Init_BlueNRG_Hw &rArr; Check_BlueNRG_Versions &rArr; getBlueNRGVersion &rArr; HCI_Process &rArr; HCI_Event_CB &rArr; Attribute_Modified_CB &rArr; ctrl1_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Process
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setConnectable
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluenrgInitialization
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_GetState
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvIntvChange
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_Stop
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_PowerSavingMode
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSubSampling
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoShutdown
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigJustAcc
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuSysChangeRunMode
</UL>

<P><STRONG><a name="[405]"></a>SystemGotoPermanentStopMode</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, wesu_config.o(i.SystemGotoPermanentStopMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 1200<LI>Call Chain = SystemGotoPermanentStopMode &rArr; Init_BlueNRG_Hw &rArr; Check_BlueNRG_Versions &rArr; getBlueNRGVersion &rArr; HCI_Process &rArr; HCI_Event_CB &rArr; Attribute_Modified_CB &rArr; ctrl1_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_GetState
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_Stop
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_PowerSavingMode
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoShutdown
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsShutdown
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BlueNRG_Hw
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuSysChangeRunMode
</UL>

<P><STRONG><a name="[406]"></a>SystemGotoRebootDefSettingsMode</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, wesu_config.o(i.SystemGotoRebootDefSettingsMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemGotoRebootDefSettingsMode &rArr; SensorsShutdown &rArr; BSP_TEMPERATURE_Sensor_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SystemReset
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_Stop
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_PowerSavingMode
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsShutdown
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuSysChangeRunMode
</UL>

<P><STRONG><a name="[407]"></a>SystemGotoRebootMode</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, wesu_config.o(i.SystemGotoRebootMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemGotoRebootMode &rArr; SensorsShutdown &rArr; BSP_TEMPERATURE_Sensor_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SystemReset
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_Stop
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_PowerSavingMode
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsShutdown
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuSysChangeRunMode
</UL>

<P><STRONG><a name="[408]"></a>SystemGotoRunLowPowerSleepMode</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, wesu_config.o(i.SystemGotoRunLowPowerSleepMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = SystemGotoRunLowPowerSleepMode &rArr; SensorsConfigJustAcc &rArr; SensorsConfigInit &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_MSI_4MHz
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSubSampling
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigJustAcc
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuSysChangeRunMode
</UL>

<P><STRONG><a name="[409]"></a>SystemGotoRunSleepMode</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, wesu_config.o(i.SystemGotoRunSleepMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = SystemGotoRunSleepMode &rArr; SensorsConfigJustAcc &rArr; SensorsConfigInit &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_MSI_4MHz
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSubSampling
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigJustAcc
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuSysChangeRunMode
</UL>

<P><STRONG><a name="[403]"></a>SystemGotoShutdown</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, wesu_config.o(i.SystemGotoShutdown))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SystemGotoShutdown &rArr; LedSmoothBlinkGpio &rArr; LedSmoothRampDownGpio &rArr; Led_Pwm &rArr; BSP_LED_OnGpio
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedSmoothBlinkGpio
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_OnGpio
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PWMGT_BoardShutdown
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuSysChangeRunMode
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopMode
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopBlePmMode
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopBleMode
</UL>

<P><STRONG><a name="[ed]"></a>SystemInit</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, system_stm32l1xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(.text)
</UL>
<P><STRONG><a name="[1c4]"></a>SystemReconfigHw</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wesu_config.o(i.SystemReconfigHw))
<BR><BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Dump
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgRebootPressTempHidden
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgRebootMagHidden
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgRebootAccGyroHidden
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwConfigChanged
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FwConfigChanged
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEventConfChanged
</UL>

<P><STRONG><a name="[cf]"></a>TIM10_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.TIM10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM10_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_IC_CaptureCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[d1]"></a>TIM2_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM2_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_IC_CaptureCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[3a3]"></a>Temp_Update</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, bluest_protocol.o(i.Temp_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = Temp_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;safe_aci_gatt_update_char_value
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stderr_Update
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageBleConnection
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Request_CB
</UL>

<P><STRONG><a name="[40a]"></a>Term_Update</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, bluest_protocol.o(i.Term_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 776 + In Cycle
<LI>Call Chain = Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;safe_aci_gatt_update_char_value
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stderr_Update
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WESU_PRINTF_BLE
</UL>

<P><STRONG><a name="[fd]"></a>TimerFreqChanged</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wesu_config.o(i.TimerFreqChanged))
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[311]"></a>Timer_Expired</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gp_timer.o(i.Timer_Expired))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Timer_Expired
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_Time
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Write_Serial
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[310]"></a>Timer_Set</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gp_timer.o(i.Timer_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Timer_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_Time
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Write_Serial
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[fc]"></a>TxPwrLvlChange</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, wesu_config.o(i.TxPwrLvlChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = TxPwrLvlChange &rArr; aci_hal_set_tx_power_level &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_set_tx_power_level
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluenrgInitialization
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wesu_config.o(.constdata)
</UL>
<P><STRONG><a name="[db]"></a>USART2_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART2_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[3a1]"></a>UpdateConnectionParameters</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, bluest_protocol.o(i.UpdateConnectionParameters))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = UpdateConnectionParameters &rArr; DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_l2cap_connection_parameter_update_request
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageBleConnection
</UL>

<P><STRONG><a name="[3d6]"></a>UpdateSubSampling</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, wesu_config.o(i.UpdateSubSampling))
<BR><BR>[Called By]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RegistersInitialization
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoRunSleepMode
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoRunLowPowerSleepMode
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopBlePmMode
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoLowPowerRunWithAlgos
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoLowPowerRunModeJustAcc
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoLowPowerRunMode
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoLowPowerMode
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoHardwareReconfig
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoFullRunWfiMode
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoFullRunMode
</UL>

<P><STRONG><a name="[b1]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xe.o(RESET)
</UL>
<P><STRONG><a name="[28c]"></a>WESU_PRINTF_BLE</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, console.o(i.WESU_PRINTF_BLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Term_Update
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF_INFO
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
</UL>

<P><STRONG><a name="[28a]"></a>WESU_PRINTF_USART</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, console.o(i.WESU_PRINTF_USART))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = WESU_PRINTF_USART &rArr; uartSendChar &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartSendChar
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
</UL>

<P><STRONG><a name="[3c5]"></a>WeSU_GetDateTime</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, wesu_rtc.o(i.WeSU_GetDateTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WeSU_GetDateTime &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_BKUPRead
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetState
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgViewtime
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgViewdate
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSettime
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetdate
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcConfChanged
</UL>

<P><STRONG><a name="[3c4]"></a>WeSU_SetDateTime</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, wesu_rtc.o(i.WeSU_SetDateTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = WeSU_SetDateTime &rArr; HAL_RTC_SetTime &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_BKUPWrite
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeStampConfigDefault
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSettime
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetdate
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcConfChanged
</UL>

<P><STRONG><a name="[3b7]"></a>WesuBackupSystemParameters</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, wesu_config.o(i.WesuBackupSystemParameters))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = WesuBackupSystemParameters &rArr; BSP_PERSREGS_WriteBackup &rArr; BSP_EEPROM_WriteBuffer &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PERSREGS_WriteBackup
</UL>
<BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintSystemParameters
</UL>

<P><STRONG><a name="[3bc]"></a>WesuGetBackupData</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, wesu_config.o(i.WesuGetBackupData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WesuGetBackupData &rArr; BSP_PERSREGS_ReadBackup &rArr; BSP_EEPROM_ReadBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PERSREGS_ReadBackup
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgGetBackupData
</UL>

<P><STRONG><a name="[3d5]"></a>WesuGetSystemStartup</STRONG> (Thumb, 232 bytes, Stack size 20 bytes, wesu_config.o(i.WesuGetSystemStartup))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = WesuGetSystemStartup
</UL>
<BR>[Called By]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RegistersInitialization
</UL>

<P><STRONG><a name="[40e]"></a>WesuRtcConfig</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, wesu_rtc.o(i.WesuRtcConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WesuRtcConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_BKUPRead
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
</UL>

<P><STRONG><a name="[3b8]"></a>WesuSaveSystemParameters</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, wesu_config.o(i.WesuSaveSystemParameters))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = WesuSaveSystemParameters &rArr; BSP_REGS_Manage &rArr; BSP_PERSREGS_Write &rArr; BSP_EEPROM_WriteBuffer &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_Manage
</UL>
<BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintSystemParameters
</UL>

<P><STRONG><a name="[415]"></a>WesuSysChangeRunMode</STRONG> (Thumb, 758 bytes, Stack size 16 bytes, wesu_config.o(i.WesuSysChangeRunMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 1248<LI>Call Chain = WesuSysChangeRunMode &rArr; SystemGotoPermanentStopBlePmMode &rArr; BluenrgInitialization &rArr; Init_BlueNRG_Hw &rArr; Check_BlueNRG_Versions &rArr; getBlueNRGVersion &rArr; HCI_Process &rArr; HCI_Event_CB &rArr; Attribute_Modified_CB &rArr; ctrl1_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedSmoothBlinkGpio
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoShutdown
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoRunSleepMode
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoRunLowPowerSleepMode
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoRebootMode
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoRebootDefSettingsMode
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopMode
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopBlePmMode
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopBleMode
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoLowPowerRunWithAlgos
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoLowPowerRunModeJustAcc
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoLowPowerRunMode
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoLowPowerMode
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoHardwareReconfig
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoFullRunWfiMode
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoFullRunMode
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
</UL>

<P><STRONG><a name="[41c]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[457]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[344]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_assert_failed
</UL>

<P><STRONG><a name="[458]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[459]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[41e]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[45a]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[1d6]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_Update
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Quat_Update
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pwr_Update
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Press_Update
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm2_Update
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm1_Update
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccGyroMag_Update
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Update
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Term_Update
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctrl1_Update
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Attribute_Modified_CB
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Term_Update_AfterRead
</UL>

<P><STRONG><a name="[45b]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[45c]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[41f]"></a>__0vsnprintf</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[45d]"></a>__1vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[45e]"></a>__2vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[45f]"></a>__c89vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[288]"></a>vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WESU_PRINTF_USART
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WESU_PRINTF_BLE
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF_INFO
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
</UL>

<P><STRONG><a name="[170]"></a>__ARM_common_memclr4_9</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, osx_motion_fx.o(i.__ARM_common_memclr4_9))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_initialize
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_setOrientation
</UL>

<P><STRONG><a name="[179]"></a>__ARM_common_memset4_12</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, osx_motion_fx.o(i.__ARM_common_memset4_12))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[430]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[420]"></a>__kernel_poly</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[421]"></a>__mathlib_dbl_divzero</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_divzero))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_divzero &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[422]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_infnan &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[423]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[424]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[425]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_overflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[426]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_underflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[460]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[461]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[462]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[42f]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[318]"></a>aci_gap_init</STRONG> (Thumb, 118 bytes, Stack size 56 bytes, bluenrg_gap_aci.o(i.aci_gap_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = aci_gap_init &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BlueNRG_Stack
</UL>

<P><STRONG><a name="[31a]"></a>aci_gap_set_auth_requirement</STRONG> (Thumb, 118 bytes, Stack size 88 bytes, bluenrg_gap_aci.o(i.aci_gap_set_auth_requirement))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = aci_gap_set_auth_requirement &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BlueNRG_Stack
</UL>

<P><STRONG><a name="[42c]"></a>aci_gap_set_discoverable</STRONG> (Thumb, 224 bytes, Stack size 120 bytes, bluenrg_gap_aci.o(i.aci_gap_set_discoverable))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = aci_gap_set_discoverable &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setConnectable
</UL>

<P><STRONG><a name="[42d]"></a>aci_gap_set_non_discoverable</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, bluenrg_gap_aci.o(i.aci_gap_set_non_discoverable))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = aci_gap_set_non_discoverable &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setConnectable
</UL>

<P><STRONG><a name="[42e]"></a>aci_gap_update_adv_data</STRONG> (Thumb, 90 bytes, Stack size 80 bytes, bluenrg_gap_aci.o(i.aci_gap_update_adv_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = aci_gap_update_adv_data &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setConnectable
</UL>

<P><STRONG><a name="[1f2]"></a>aci_gatt_add_char</STRONG> (Thumb, 194 bytes, Stack size 112 bytes, bluenrg_gatt_aci.o(i.aci_gatt_add_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = aci_gatt_add_char &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Feature_Service
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Console_Service
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Config_Service
</UL>

<P><STRONG><a name="[1f1]"></a>aci_gatt_add_serv</STRONG> (Thumb, 132 bytes, Stack size 72 bytes, bluenrg_gatt_aci.o(i.aci_gatt_add_serv))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = aci_gatt_add_serv &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Feature_Service
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Console_Service
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Config_Service
</UL>

<P><STRONG><a name="[3ca]"></a>aci_gatt_allow_read</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, bluenrg_gatt_aci.o(i.aci_gatt_allow_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = aci_gatt_allow_read &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Request_CB
</UL>

<P><STRONG><a name="[317]"></a>aci_gatt_init</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, bluenrg_gatt_aci.o(i.aci_gatt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = aci_gatt_init &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BlueNRG_Hw
</UL>

<P><STRONG><a name="[319]"></a>aci_gatt_update_char_value</STRONG> (Thumb, 144 bytes, Stack size 200 bytes, bluenrg_gatt_aci.o(i.aci_gatt_update_char_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = aci_gatt_update_char_value &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;safe_aci_gatt_update_char_value
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BlueNRG_Stack
</UL>

<P><STRONG><a name="[304]"></a>aci_gatt_write_response</STRONG> (Thumb, 148 bytes, Stack size 200 bytes, bluenrg_gatt_aci.o(i.aci_gatt_write_response))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = aci_gatt_write_response &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Event_CB
</UL>

<P><STRONG><a name="[280]"></a>aci_hal_set_tx_power_level</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, bluenrg_hal_aci.o(i.aci_hal_set_tx_power_level))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = aci_hal_set_tx_power_level &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluenrgInitialization
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TxPwrLvlChange
</UL>

<P><STRONG><a name="[316]"></a>aci_hal_write_config_data</STRONG> (Thumb, 98 bytes, Stack size 176 bytes, bluenrg_hal_aci.o(i.aci_hal_write_config_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = aci_hal_write_config_data &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_BlueNRG_Hw
</UL>

<P><STRONG><a name="[40c]"></a>aci_l2cap_connection_parameter_update_request</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, bluenrg_l2cap_aci.o(i.aci_l2cap_connection_parameter_update_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = aci_l2cap_connection_parameter_update_request &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateConnectionParameters
</UL>

<P><STRONG><a name="[187]"></a>asin</STRONG> (Thumb, 572 bytes, Stack size 56 bytes, asin.o(i.asin))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = asin &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_q2ypr2_eml
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_update
</UL>

<P><STRONG><a name="[13e]"></a>atan</STRONG> (Thumb, 474 bytes, Stack size 40 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityRecognizerFunction
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryPositionRecognizerFunction
</UL>

<P><STRONG><a name="[16d]"></a>atan2</STRONG> (Thumb, 346 bytes, Stack size 32 bytes, atan2.o(i.atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_rt_atan2f_snf
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_update
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_quat2heading
</UL>

<P><STRONG><a name="[28b]"></a>consoleDeInit</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, console.o(i.consoleDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = consoleDeInit &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSerialInput
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
</UL>

<P><STRONG><a name="[289]"></a>consoleInit</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, console.o(i.consoleInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = consoleInit &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSerialInput
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF_TERMINAL
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
</UL>

<P><STRONG><a name="[210]"></a>ctrl1_Update</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, bluest_protocol.o(i.ctrl1_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = ctrl1_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;safe_aci_gatt_update_char_value
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stderr_Update
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Attribute_Modified_CB
</UL>

<P><STRONG><a name="[3ce]"></a>floatToInt</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, main.o(i.floatToInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = floatToInt &rArr; pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trunc
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Sensors
</UL>

<P><STRONG><a name="[17b]"></a>floor</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, floor.o(i.floor))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = floor &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[17d]"></a>fmax</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, fmax.o(i.fmax))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = fmax &rArr; __ARM_dcmp4
</UL>
<BR>[Calls]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_dcmp4
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[f6]"></a>fputc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, console.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = fputc &rArr; uartSendChar &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartSendChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[285]"></a>getBlueNRGVersion</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, wesu_config.o(i.getBlueNRGVersion))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168<LI>Call Chain = getBlueNRGVersion &rArr; HCI_Process &rArr; HCI_Event_CB &rArr; Attribute_Modified_CB &rArr; ctrl1_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_read_local_version
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Process
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_BlueNRG_Versions
</UL>

<P><STRONG><a name="[434]"></a>hci_le_read_local_version</STRONG> (Thumb, 128 bytes, Stack size 64 bytes, hci.o(i.hci_le_read_local_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = hci_le_read_local_version &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBlueNRGVersion
</UL>

<P><STRONG><a name="[435]"></a>hci_le_set_scan_resp_data</STRONG> (Thumb, 100 bytes, Stack size 72 bytes, hci.o(i.hci_le_set_scan_resp_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = hci_le_set_scan_resp_data &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemSet
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setConnectable
</UL>

<P><STRONG><a name="[436]"></a>hci_send_cmd</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, hci.o(i.hci_send_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_write
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[42b]"></a>hci_send_req</STRONG> (Thumb, 318 bytes, Stack size 48 bytes, hci.o(i.hci_send_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_head
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_is_empty
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_tail
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_head
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_init_head
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Set
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Expired
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Osal_MemCpy
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_SPI_IRQ
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_SPI_IRQ
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_cmd
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Queue_Empty
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_list
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_write_config_data
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_hal_set_tx_power_level
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_scan_resp_data
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_read_local_version
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_l2cap_connection_parameter_update_request
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_write_response
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_update_char_value
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_init
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_allow_read
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_serv
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_add_char
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_update_adv_data
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_non_discoverable
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_discoverable
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_auth_requirement
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_init
</UL>

<P><STRONG><a name="[437]"></a>hci_write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hci.o(i.hci_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Write_Serial
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_cmd
</UL>

<P><STRONG><a name="[3c3]"></a>lStringShift</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, console.o(i.lStringShift))
<BR><BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgSetLic
</UL>

<P><STRONG><a name="[306]"></a>list_init_head</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(i.list_init_head))
<BR><BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Init
</UL>

<P><STRONG><a name="[30c]"></a>list_insert_head</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, list.o(i.list_insert_head))
<BR><BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
</UL>

<P><STRONG><a name="[307]"></a>list_insert_tail</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, list.o(i.list_insert_tail))
<BR><BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Process
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Init
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_list
</UL>

<P><STRONG><a name="[308]"></a>list_is_empty</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, list.o(i.list_is_empty))
<BR><BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Queue_Empty
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Process
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_list
</UL>

<P><STRONG><a name="[30a]"></a>list_remove_head</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, list.o(i.list_remove_head))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = list_remove_head
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_node
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Process
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Isr
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_list
</UL>

<P><STRONG><a name="[439]"></a>list_remove_node</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, list.o(i.list_remove_node))
<BR><BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_head
</UL>

<P><STRONG><a name="[ec]"></a>main</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1288<LI>Call Chain = main &rArr; User_Process &rArr; WesuSysChangeRunMode &rArr; SystemGotoPermanentStopBlePmMode &rArr; BluenrgInitialization &rArr; Init_BlueNRG_Hw &rArr; Check_BlueNRG_Versions &rArr; getBlueNRGVersion &rArr; HCI_Process &rArr; HCI_Event_CB &rArr; Attribute_Modified_CB &rArr; ctrl1_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Process
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugConfiguration
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config_RTC_HSE32MHz
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Init
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_WD_Refresh
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[169]"></a>pow</STRONG> (Thumb, 2512 bytes, Stack size 128 bytes, pow.o(i.pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floatToInt
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stDev
</UL>

<P><STRONG><a name="[1d4]"></a>safe_aci_gatt_update_char_value</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, bluest_protocol.o(i.safe_aci_gatt_update_char_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = safe_aci_gatt_update_char_value &rArr; aci_gatt_update_char_value &rArr; hci_send_req &rArr; hci_send_cmd &rArr; hci_write &rArr; Hal_Write_Serial &rArr; BlueNRG_SPI_Write &rArr; set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gatt_update_char_value
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_Update
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Quat_Update
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pwr_Update
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Press_Update
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm2_Update
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm1_Update
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccGyroMag_Update
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Update
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Term_Update
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctrl1_Update
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stderr_Update
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Request_CB
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Term_Update_AfterRead
</UL>

<P><STRONG><a name="[3a0]"></a>setConnectable</STRONG> (Thumb, 204 bytes, Stack size 88 bytes, wesu_config.o(i.setConnectable))
<BR><BR>[Stack]<UL><LI>Max Depth = 920<LI>Call Chain = setConnectable &rArr; PRINTF_INFO &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_scan_resp_data
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF_INFO
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_update_adv_data
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_non_discoverable
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aci_gap_set_discoverable
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageBleConnection
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopBlePmMode
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGotoPermanentStopBleMode
</UL>

<P><STRONG><a name="[27b]"></a>set_irq_as_input</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, stm32_bluenrg_ble.o(i.set_irq_as_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = set_irq_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueNRG_SPI_Write
</UL>

<P><STRONG><a name="[13c]"></a>sqrt</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityRecognizerFunction
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_b_std
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_std
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroPropRedist
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointCorrection
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Propagate
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroProp
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointAlgorithm
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stDev
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_dcm2q_eml
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_norm_eml
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryPositionRecognizerFunction
</UL>

<P><STRONG><a name="[432]"></a>trunc</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, trunc.o(i.trunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = trunc &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floatToInt
</UL>

<P><STRONG><a name="[418]"></a>uartSendChar</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, console.o(i.uartSendChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = uartSendChar &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WESU_PRINTF_USART
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[438]"></a>move_list</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, hci.o(i.move_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = move_list &rArr; list_remove_head
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_remove_head
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_is_empty
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insert_tail
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_req
</UL>

<P><STRONG><a name="[39e]"></a>ManageBleConnection</STRONG> (Thumb, 984 bytes, Stack size 40 bytes, main.o(i.ManageBleConnection))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = ManageBleConnection &rArr; setConnectable &rArr; PRINTF_INFO &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setConnectable
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateConnectionParameters
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_Update
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Quat_Update
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pwr_Update
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Press_Update
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotionFX_manager_getDataOUT
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm2_Update
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithm1_Update
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvIntvChange
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccGyroMag_Update
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccEvent_Update
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
</UL>

<P><STRONG><a name="[f5]"></a>RTC_TimeStampConfigDefault</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, main.o(i.RTC_TimeStampConfigDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = RTC_TimeStampConfigDefault &rArr; WeSU_SetDateTime &rArr; HAL_RTC_SetTime &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeSU_SetDateTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.User_Init)
</UL>
<P><STRONG><a name="[2c1]"></a>Read_Sensors</STRONG> (Thumb, 488 bytes, Stack size 32 bytes, main.o(i.Read_Sensors))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = Read_Sensors &rArr; DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TEMPERATURE_Get_Temp
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_Get_Press
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Get_Axes
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_Task
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_GetVoltage
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_GetSOC
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_GetCurrent
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CHARGER_GetState
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_BatteryChargerTask
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_Axes
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floatToInt
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Get_Axes
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Process
</UL>

<P><STRONG><a name="[40d]"></a>User_Init</STRONG> (Thumb, 706 bytes, Stack size 40 bytes, main.o(i.User_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256<LI>Call Chain = User_Init &rArr; BluenrgInitialization &rArr; Init_BlueNRG_Hw &rArr; Check_BlueNRG_Versions &rArr; getBlueNRGVersion &rArr; HCI_Process &rArr; HCI_Event_CB &rArr; Attribute_Modified_CB &rArr; ctrl1_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuRtcConfig
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigInit
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsConfigFullRun
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RegistersInitialization
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PWR_MGMT
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluenrgInitialization
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_WD_Init
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TEMPERATURE_IsInitialized
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TEMPERATURE_Get_Temp
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PwrUsbMonitor_Init
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PwrUsbMonitor_GetState
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_IsInitialized
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_Get_Press
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_IsInitialized
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Get_Axes
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_InitGpio
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_IsInitialized
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_IsInitialized
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Get_Axes
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithms_Init
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floatToInt
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeSU_GetDateTime
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_ManageWAction
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_OnGpio
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Get_Axes
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgRebootPressTempHidden
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgRebootMagHidden
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgRebootAccGyroHidden
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[414]"></a>User_Process</STRONG> (Thumb, 982 bytes, Stack size 40 bytes, main.o(i.User_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 1288<LI>Call Chain = User_Process &rArr; WesuSysChangeRunMode &rArr; SystemGotoPermanentStopBlePmMode &rArr; BluenrgInitialization &rArr; Init_BlueNRG_Hw &rArr; Check_BlueNRG_Versions &rArr; getBlueNRGVersion &rArr; HCI_Process &rArr; HCI_Event_CB &rArr; Attribute_Modified_CB &rArr; ctrl1_Update &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Process
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_irq_as_input
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WesuSysChangeRunMode
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreRunMode
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrepareLowPowerMode
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedSmoothRampDownGpio
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedManageStart
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedManageEnd
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_EnterSTOPMode
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_EnterSLEEPMode
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PwrUsbMonitor_GetState
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_GetState
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithms_Process
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithms_Hw_Process_INT1
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Algorithms_Hw_Process
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Sensors
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageBleConnection
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WeSU_GetDateTime
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintSystemParameters
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SystemReset
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_OnGpio
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ManageTerminal
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[299]"></a>ReCallCalibrationFromMemory</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, algorithms.o(i.ReCallCalibrationFromMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = ReCallCalibrationFromMemory &rArr; DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_REGS_Manage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_setCalibrationData
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MotionFX_compass_isCalibrated
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FX_StartupConfig
</UL>

<P><STRONG><a name="[29a]"></a>GAP_ConnectionComplete_CB</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, bluest_protocol.o(i.GAP_ConnectionComplete_CB))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = GAP_ConnectionComplete_CB &rArr; DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Event_CB
</UL>

<P><STRONG><a name="[282]"></a>GAP_DisconnectionComplete_CB</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, bluest_protocol.o(i.GAP_DisconnectionComplete_CB))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = GAP_DisconnectionComplete_CB &rArr; DBG_PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_PRINTF
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCI_Event_CB
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluenrgResetParameters
</UL>

<P><STRONG><a name="[3c9]"></a>Term_Update_AfterRead</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, bluest_protocol.o(i.Term_Update_AfterRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = Term_Update_AfterRead &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRINTF
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;safe_aci_gatt_update_char_value
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stderr_Update
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Request_CB
</UL>

<P><STRONG><a name="[3b2]"></a>CheckRegVect</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, wesu_config.o(i.CheckRegVect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CheckRegVect
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SessionRegCheckCorrect
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PermRegCheckCorrect
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessRegCommand
</UL>

<P><STRONG><a name="[3b1]"></a>PermRegCheckCorrect</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, wesu_config.o(i.PermRegCheckCorrect))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PermRegCheckCorrect &rArr; CheckRegVect
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckRegVect
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessRegCommand
</UL>

<P><STRONG><a name="[3c7]"></a>SessionRegCheckCorrect</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, wesu_config.o(i.SessionRegCheckCorrect))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SessionRegCheckCorrect &rArr; CheckRegVect
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckRegVect
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessRegCommand
</UL>

<P><STRONG><a name="[2d8]"></a>RCC_SetFlashLatencyFromMSIRange</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, stm32l1xx_hal_rcc.o(i.RCC_SetFlashLatencyFromMSIRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_SetFlashLatencyFromMSIRange
</UL>
<BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_GetVoltageRange
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[296]"></a>FLASH_SetErrorCode</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, stm32l1xx_hal_flash.o(i.FLASH_SetErrorCode))
<BR><BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[2d4]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32l1xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[2e8]"></a>SPI_WaitOnFlagUntilTimeout</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, stm32l1xx_hal_spi.o(i.SPI_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
</UL>

<P><STRONG><a name="[2f0]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 100 bytes, Stack size 20 bytes, stm32l1xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Init
</UL>

<P><STRONG><a name="[2f1]"></a>TIM_CCxChannelCmd</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32l1xx_hal_tim.o(i.TIM_CCxChannelCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Stop_IT
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Start_IT
</UL>

<P><STRONG><a name="[2ec]"></a>TIM_TI1_SetConfig</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, stm32l1xx_hal_tim.o(i.TIM_TI1_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_TI1_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_ConfigChannel
</UL>

<P><STRONG><a name="[2ed]"></a>TIM_TI2_SetConfig</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, stm32l1xx_hal_tim.o(i.TIM_TI2_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_TI2_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_ConfigChannel
</UL>

<P><STRONG><a name="[313]"></a>I2C_IsAcknowledgeFailed</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32l1xx_hal_i2c.o(i.I2C_IsAcknowledgeFailed))
<BR><BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnBTFFlagUntilTimeout
</UL>

<P><STRONG><a name="[2ca]"></a>I2C_RequestMemoryRead</STRONG> (Thumb, 240 bytes, Stack size 40 bytes, stm32l1xx_hal_i2c.o(i.I2C_RequestMemoryRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnMasterAddressFlagUntilTimeout
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[2cc]"></a>I2C_RequestMemoryWrite</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, stm32l1xx_hal_i2c.o(i.I2C_RequestMemoryWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnMasterAddressFlagUntilTimeout
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[2ce]"></a>I2C_WaitOnBTFFlagUntilTimeout</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, stm32l1xx_hal_i2c.o(i.I2C_WaitOnBTFFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_WaitOnBTFFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[2c9]"></a>I2C_WaitOnFlagUntilTimeout</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, stm32l1xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[312]"></a>I2C_WaitOnMasterAddressFlagUntilTimeout</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, stm32l1xx_hal_i2c.o(i.I2C_WaitOnMasterAddressFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[2cb]"></a>I2C_WaitOnRXNEFlagUntilTimeout</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, stm32l1xx_hal_i2c.o(i.I2C_WaitOnRXNEFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_WaitOnRXNEFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[2cd]"></a>I2C_WaitOnTXEFlagUntilTimeout</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, stm32l1xx_hal_i2c.o(i.I2C_WaitOnTXEFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_WaitOnTXEFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[2fa]"></a>UART_Receive_IT</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, stm32l1xx_hal_uart.o(i.UART_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[300]"></a>UART_SetConfig</STRONG> (Thumb, 666 bytes, Stack size 24 bytes, stm32l1xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[2fb]"></a>UART_Transmit_IT</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, stm32l1xx_hal_uart.o(i.UART_Transmit_IT))
<BR><BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[301]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, stm32l1xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>

<P><STRONG><a name="[237]"></a>PWR_I2C_Error</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wesu_gg.o(i.PWR_I2C_Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcDbgResetStc3115I2C
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_I2C_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_Write
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_Read
</UL>

<P><STRONG><a name="[235]"></a>PWR_I2C_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, wesu_gg.o(i.PWR_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = PWR_I2C_Init &rArr; PWR_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_GetState
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_I2C_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_Init
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_I2C_Error
</UL>

<P><STRONG><a name="[3b0]"></a>PWR_I2C_MspInit</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, wesu_gg.o(i.PWR_I2C_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = PWR_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_I2C_Init
</UL>

<P><STRONG><a name="[215]"></a>BSP_LSM6DS3_ACCELERO_Init</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, wesu_accelero.o(i.BSP_LSM6DS3_ACCELERO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = BSP_LSM6DS3_ACCELERO_Init &rArr; Sensor_IO_Init &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Init
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Sensor_IO_ITConfig
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_ACCELERO_Init
</UL>

<P><STRONG><a name="[23c]"></a>BSP_LSM6DS3_GYRO_Init</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, wesu_gyro.o(i.BSP_LSM6DS3_GYRO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = BSP_LSM6DS3_GYRO_Init &rArr; Sensor_IO_Init &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Init
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GYRO_Init
</UL>

<P><STRONG><a name="[248]"></a>BSP_LIS3MDL_MAGNETO_Init</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, wesu_magneto.o(i.BSP_LIS3MDL_MAGNETO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = BSP_LIS3MDL_MAGNETO_Init &rArr; Sensor_IO_Init &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Init
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MAGNETO_Init
</UL>

<P><STRONG><a name="[24a]"></a>BSP_LPS25HB_PRESSURE_Init</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, wesu_pressure.o(i.BSP_LPS25HB_PRESSURE_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = BSP_LPS25HB_PRESSURE_Init &rArr; Sensor_IO_Init &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Init
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PRESSURE_Init
</UL>

<P><STRONG><a name="[3d8]"></a>SPIx_Error</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wesu_sensors.o(i.SPIx_Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DeInit
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsSpiInit
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensors_SPI_Write
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensors_SPI_Read
</UL>

<P><STRONG><a name="[3d9]"></a>SensorsSpiInit</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, wesu_sensors.o(i.SensorsSpiInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_GetState
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Init
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Error
</UL>

<P><STRONG><a name="[3e3]"></a>Sensors_SPI_Read</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, wesu_sensors.o(i.Sensors_SPI_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Error
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>

<P><STRONG><a name="[3e4]"></a>Sensors_SPI_Write</STRONG> (Thumb, 170 bytes, Stack size 48 bytes, wesu_sensors.o(i.Sensors_SPI_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Error
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
</UL>

<P><STRONG><a name="[24b]"></a>BSP_LPS25HB_TEMPERATURE_Init</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, wesu_temperature.o(i.BSP_LPS25HB_TEMPERATURE_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = BSP_LPS25HB_TEMPERATURE_Init &rArr; Sensor_IO_Init &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Init
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TEMPERATURE_Init
</UL>

<P><STRONG><a name="[29d]"></a>STC3115_CalcRamCRC8</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, stc3115_driver_00.o(i.STC3115_CalcRamCRC8))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = STC3115_CalcRamCRC8
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Task
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Initialization
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_UpdateRamCRC
</UL>

<P><STRONG><a name="[29e]"></a>STC3115_InitRamData</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stc3115_driver_00.o(i.STC3115_InitRamData))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = STC3115_InitRamData &rArr; STC3115_UpdateRamCRC &rArr; STC3115_CalcRamCRC8
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_UpdateRamCRC
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Task
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Initialization
</UL>

<P><STRONG><a name="[2ab]"></a>STC3115_ReadBatteryData</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, stc3115_driver_00.o(i.STC3115_ReadBatteryData))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = STC3115_ReadBatteryData &rArr; BSP_GG_IO_Read &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_Read
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_conv
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Task
</UL>

<P><STRONG><a name="[29f]"></a>STC3115_ReadByte</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, stc3115_driver_00.o(i.STC3115_ReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 920<LI>Call Chain = STC3115_ReadByte &rArr; BSP_GG_IO_Read &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_SetPowerSavingMode
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_AlarmStop
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_AlarmSet
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_AlarmGet
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Initialization
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Status
</UL>

<P><STRONG><a name="[29c]"></a>STC3115_ReadRamData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stc3115_driver_00.o(i.STC3115_ReadRamData))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = STC3115_ReadRamData &rArr; BSP_GG_IO_Read &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Task
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Stop
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Initialization
</UL>

<P><STRONG><a name="[3e1]"></a>STC3115_ReadWord</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, stc3115_driver_00.o(i.STC3115_ReadWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 920<LI>Call Chain = STC3115_ReadWord &rArr; BSP_GG_IO_Read &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Status
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Startup
</UL>

<P><STRONG><a name="[2a1]"></a>STC3115_Restore</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stc3115_driver_00.o(i.STC3115_Restore))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = STC3115_Restore &rArr; STC3115_Status &rArr; STC3115_ReadWord &rArr; BSP_GG_IO_Read &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_WriteWord
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Status
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_SetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Task
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Initialization
</UL>

<P><STRONG><a name="[3e2]"></a>STC3115_SetParam</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stc3115_driver_00.o(i.STC3115_SetParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = STC3115_SetParam &rArr; STC3115_WriteWord &rArr; BSP_GG_IO_Write &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_Write
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_WriteWord
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Startup
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Restore
</UL>

<P><STRONG><a name="[2a0]"></a>STC3115_Startup</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, stc3115_driver_00.o(i.STC3115_Startup))
<BR><BR>[Stack]<UL><LI>Max Depth = 944<LI>Call Chain = STC3115_Startup &rArr; STC3115_Status &rArr; STC3115_ReadWord &rArr; BSP_GG_IO_Read &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_WriteWord
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Status
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_SetParam
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_ReadWord
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Task
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Initialization
</UL>

<P><STRONG><a name="[2aa]"></a>STC3115_Status</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stc3115_driver_00.o(i.STC3115_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = STC3115_Status &rArr; STC3115_ReadWord &rArr; BSP_GG_IO_Read &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_ReadWord
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Task
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Startup
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Restore
</UL>

<P><STRONG><a name="[2a2]"></a>STC3115_UpdateRamCRC</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stc3115_driver_00.o(i.STC3115_UpdateRamCRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = STC3115_UpdateRamCRC &rArr; STC3115_CalcRamCRC8
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_CalcRamCRC8
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Task
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Stop
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Initialization
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_InitRamData
</UL>

<P><STRONG><a name="[2a7]"></a>STC3115_WriteByte</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stc3115_driver_00.o(i.STC3115_WriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = STC3115_WriteByte &rArr; BSP_GG_IO_Write &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_SetPowerSavingMode
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_AlarmStop
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_AlarmSetVoltageThreshold
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_AlarmSetSOCThreshold
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_AlarmSet
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_AlarmClear
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Stop
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Reset
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_SetParam
</UL>

<P><STRONG><a name="[2a3]"></a>STC3115_WriteRamData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stc3115_driver_00.o(i.STC3115_WriteRamData))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = STC3115_WriteRamData &rArr; BSP_GG_IO_Write &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Task
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Stop
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Reset
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Initialization
</UL>

<P><STRONG><a name="[2ac]"></a>STC3115_WriteWord</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stc3115_driver_00.o(i.STC3115_WriteWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = STC3115_WriteWord &rArr; BSP_GG_IO_Write &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Task
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Startup
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_SetParam
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_Restore
</UL>

<P><STRONG><a name="[3e0]"></a>STC3115_conv</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stc3115_driver_00.o(i.STC3115_conv))
<BR><BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_ReadBatteryData
</UL>

<P><STRONG><a name="[3c]"></a>STC3115_AlarmSetSOCTh</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stc3115.o(i.STC3115_AlarmSetSOCTh))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = STC3115_AlarmSetSOCTh &rArr; STC3115_AlarmSetSOCThreshold &rArr; STC3115_WriteByte &rArr; BSP_GG_IO_Write &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_AlarmSetSOCThreshold
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stc3115.o(.data)
</UL>
<P><STRONG><a name="[3b]"></a>STC3115_AlarmSetVoTh</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stc3115.o(i.STC3115_AlarmSetVoTh))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = STC3115_AlarmSetVoTh &rArr; STC3115_AlarmSetVoltageThreshold &rArr; STC3115_WriteByte &rArr; BSP_GG_IO_Write &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_AlarmSetVoltageThreshold
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stc3115.o(.data)
</UL>
<P><STRONG><a name="[40]"></a>STC3115_ClearIT</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stc3115.o(i.STC3115_ClearIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = STC3115_ClearIT &rArr; STC3115_AlarmClear &rArr; STC3115_WriteByte &rArr; BSP_GG_IO_Write &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_AlarmClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stc3115.o(.data)
</UL>
<P><STRONG><a name="[39]"></a>STC3115_GetAlarmStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stc3115.o(i.STC3115_GetAlarmStatus))
<BR>[Address Reference Count : 1]<UL><LI> stc3115.o(.data)
</UL>
<P><STRONG><a name="[37]"></a>STC3115_GetChargeValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stc3115.o(i.STC3115_GetChargeValue))
<BR>[Address Reference Count : 1]<UL><LI> stc3115.o(.data)
</UL>
<P><STRONG><a name="[34]"></a>STC3115_GetCurrent</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stc3115.o(i.STC3115_GetCurrent))
<BR>[Address Reference Count : 1]<UL><LI> stc3115.o(.data)
</UL>
<P><STRONG><a name="[3d]"></a>STC3115_GetIT</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stc3115.o(i.STC3115_GetIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = STC3115_GetIT &rArr; STC3115_AlarmGet &rArr; STC3115_ReadByte &rArr; BSP_GG_IO_Read &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_AlarmGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stc3115.o(.data)
</UL>
<P><STRONG><a name="[3a]"></a>STC3115_GetITState</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stc3115.o(i.STC3115_GetITState))
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_GG_IO_GetITState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stc3115.o(.data)
</UL>
<P><STRONG><a name="[33]"></a>STC3115_GetOCV</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stc3115.o(i.STC3115_GetOCV))
<BR>[Address Reference Count : 1]<UL><LI> stc3115.o(.data)
</UL>
<P><STRONG><a name="[38]"></a>STC3115_GetPresence</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stc3115.o(i.STC3115_GetPresence))
<BR>[Address Reference Count : 1]<UL><LI> stc3115.o(.data)
</UL>
<P><STRONG><a name="[32]"></a>STC3115_GetSOC</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stc3115.o(i.STC3115_GetSOC))
<BR>[Address Reference Count : 1]<UL><LI> stc3115.o(.data)
</UL>
<P><STRONG><a name="[35]"></a>STC3115_GetTemperature</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stc3115.o(i.STC3115_GetTemperature))
<BR>[Address Reference Count : 1]<UL><LI> stc3115.o(.data)
</UL>
<P><STRONG><a name="[36]"></a>STC3115_GetVoltage</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stc3115.o(i.STC3115_GetVoltage))
<BR>[Address Reference Count : 1]<UL><LI> stc3115.o(.data)
</UL>
<P><STRONG><a name="[2e]"></a>STC3115_Init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stc3115.o(i.STC3115_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1040<LI>Call Chain = STC3115_Init &rArr; GasGauge_Initialization &rArr; STC3115_Startup &rArr; STC3115_Status &rArr; STC3115_ReadWord &rArr; BSP_GG_IO_Read &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Initialization
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stc3115.o(.data)
</UL>
<P><STRONG><a name="[41]"></a>STC3115_PowerSavingMode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stc3115.o(i.STC3115_PowerSavingMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = STC3115_PowerSavingMode &rArr; GasGauge_PowerSavingMode &rArr; STC3115_SetPowerSavingMode &rArr; STC3115_ReadByte &rArr; BSP_GG_IO_Read &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_PowerSavingMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stc3115.o(.data)
</UL>
<P><STRONG><a name="[30]"></a>STC3115_Reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stc3115.o(i.STC3115_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 920<LI>Call Chain = STC3115_Reset &rArr; GasGauge_Reset &rArr; STC3115_WriteByte &rArr; BSP_GG_IO_Write &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stc3115.o(.data)
</UL>
<P><STRONG><a name="[3e]"></a>STC3115_SetIT</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stc3115.o(i.STC3115_SetIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = STC3115_SetIT &rArr; STC3115_AlarmSet &rArr; STC3115_ReadByte &rArr; BSP_GG_IO_Read &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_AlarmSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stc3115.o(.data)
</UL>
<P><STRONG><a name="[31]"></a>STC3115_Stop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stc3115.o(i.STC3115_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 920<LI>Call Chain = STC3115_Stop &rArr; GasGauge_Stop &rArr; STC3115_WriteByte &rArr; BSP_GG_IO_Write &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stc3115.o(.data)
</UL>
<P><STRONG><a name="[3f]"></a>STC3115_StopIT</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stc3115.o(i.STC3115_StopIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = STC3115_StopIT &rArr; STC3115_AlarmStop &rArr; STC3115_ReadByte &rArr; BSP_GG_IO_Read &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STC3115_AlarmStop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stc3115.o(.data)
</UL>
<P><STRONG><a name="[2f]"></a>STC3115_Task</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stc3115.o(i.STC3115_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = STC3115_Task &rArr; GasGauge_Task &rArr; STC3115_Startup &rArr; STC3115_Status &rArr; STC3115_ReadWord &rArr; BSP_GG_IO_Read &rArr; PWR_I2C_Error &rArr; ProcDbgResetStc3115I2C &rArr; PRINTF &rArr; WESU_PRINTF_BLE &rArr; Term_Update &rArr;  PRINTF (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GasGauge_Task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stc3115.o(.data)
</UL>
<P><STRONG><a name="[346]"></a>LSM6DS3_ACC_GYRO_ReadReg</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_ReadReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WUEvOnInt1
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TiltEvOnInt1
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TapEvOnInt1
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SingleTapOnInt1
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FFEvOnInt1
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_6DEvOnInt1
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SIGN_MOT_on_INT2
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PEDO_STEP_on_INT2
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_OVERRUN_on_INT2
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FSS5_on_INT2
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FIFO_TSHLD_on_INT2
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_DRDY_XL_on_INT2
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_DRDY_TEMP_on_INT2
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_DRDY_G_on_INT2
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SW_RESET
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_LowPower_XL
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_BOOT
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_LP_Mode
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_PEDO_EV_STATUS
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_ODR_XL
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_ODR_G
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_FS_XL
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_FS_G
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_FS_125
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_FF_EV_STATUS
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_ZL
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_ZH
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_YL
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_YH
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_XL
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_XH
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DOUBLE_TAP_EV_STATUS
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_D6D_EV_STATUS
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_Get_GetStepCounter
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_GetRawGyroData
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_GetRawAccData
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ZEN_XL
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ZEN_G
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_YEN_XL
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_YEN_G
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_XEN_XL
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_XEN_G
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WK_THS
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WAKE_DUR
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TIMER_HR
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TILT_EN
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Z_EN
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Y_EN
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_X_EN
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_THS
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SLEEP_DUR
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SIXD_THS
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SINGLE_DOUBLE_TAP_EV
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SHOCK_Duration
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_QUIET_Duration
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PedoThreshold
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PedoStepReset
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PEDO_STEP_on_INT1
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PEDO_EN
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_Open_RAM_Page
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_XL
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_G
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_IF_Addr_Incr
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FUNC_EN
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_XL
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_G
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_125
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FIFO_MODE
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FF_THS
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FF_Duration
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_DUR
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_BDU
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_ZEN_XL
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_ZEN_G
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_YEN_XL
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_YEN_G
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_XEN_XL
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_XEN_G
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_WU_EV_STATUS
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_WHO_AM_I
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_TILT_EV_STATUS
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_SINGLE_TAP_EV_STATUS
</UL>

<P><STRONG><a name="[362]"></a>LSM6DS3_ACC_GYRO_WriteReg</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver.o(i.LSM6DS3_ACC_GYRO_WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WUEvOnInt1
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TiltEvOnInt1
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TapEvOnInt1
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SingleTapOnInt1
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FFEvOnInt1
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_6DEvOnInt1
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SIGN_MOT_on_INT2
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PEDO_STEP_on_INT2
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_OVERRUN_on_INT2
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FSS5_on_INT2
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FIFO_TSHLD_on_INT2
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_DRDY_XL_on_INT2
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_DRDY_TEMP_on_INT2
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_DRDY_G_on_INT2
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SW_RESET
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_LowPower_XL
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_BOOT
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_LP_Mode
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ZEN_XL
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ZEN_G
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_YEN_XL
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_YEN_G
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_XEN_XL
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_XEN_G
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WK_THS
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WAKE_DUR
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TIMER_HR
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TILT_EN
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Z_EN
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Y_EN
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_X_EN
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_THS
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SLEEP_DUR
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SIXD_THS
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SINGLE_DOUBLE_TAP_EV
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SHOCK_Duration
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_QUIET_Duration
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PedoThreshold
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PedoStepReset
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PEDO_STEP_on_INT1
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PEDO_EN
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_Open_RAM_Page
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_XL
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_G
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_IF_Addr_Incr
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FUNC_EN
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_XL
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_G
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_125
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FIFO_MODE
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FF_THS
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FF_Duration
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_DUR
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_BDU
</UL>

<P><STRONG><a name="[38f]"></a>LSM6DS3_Check_WhoAmI</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_Check_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_Check_WhoAmI &rArr; LSM6DS3_Get_WhoAmI &rArr; LSM6DS3_ACC_GYRO_R_WHO_AM_I &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Get_WhoAmI
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_DeInit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Check_WhoAmI
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_DeInit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Check_WhoAmI
</UL>

<P><STRONG><a name="[7d]"></a>LSM6DS3_G_Check_WhoAmI</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Check_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_G_Check_WhoAmI &rArr; LSM6DS3_Check_WhoAmI &rArr; LSM6DS3_Get_WhoAmI &rArr; LSM6DS3_ACC_GYRO_R_WHO_AM_I &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[79]"></a>LSM6DS3_G_DeInit</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_G_DeInit &rArr; LSM6DS3_G_Sensor_Disable &rArr; LSM6DS3_G_Get_ODR &rArr; LSM6DS3_ACC_GYRO_R_ODR_G &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Sensor_Disable
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[7e]"></a>LSM6DS3_G_Get_Axes</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_Axes))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS3_G_Get_Axes &rArr; LSM6DS3_G_Get_Axes_Raw &rArr; LSM6DS3_ACC_GYRO_GetRawGyroData &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Sensitivity
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Axes_Raw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[7f]"></a>LSM6DS3_G_Get_AxesRaw</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_AxesRaw))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LSM6DS3_G_Get_AxesRaw &rArr; LSM6DS3_G_Get_Axes_Raw &rArr; LSM6DS3_ACC_GYRO_GetRawGyroData &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Axes_Raw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[391]"></a>LSM6DS3_G_Get_Axes_Raw</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_Axes_Raw))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_G_Get_Axes_Raw &rArr; LSM6DS3_ACC_GYRO_GetRawGyroData &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_GetRawGyroData
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_AxesRaw
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Axes
</UL>

<P><STRONG><a name="[87]"></a>LSM6DS3_G_Get_Axes_Status</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_Axes_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_G_Get_Axes_Status &rArr; LSM6DS3_ACC_GYRO_R_ZEN_G &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_ZEN_G
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_YEN_G
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_XEN_G
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[84]"></a>LSM6DS3_G_Get_FS</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_FS))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_G_Get_FS &rArr; LSM6DS3_ACC_GYRO_R_FS_G &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_FS_G
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_FS_125
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[81]"></a>LSM6DS3_G_Get_ODR</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_G_Get_ODR &rArr; LSM6DS3_ACC_GYRO_R_ODR_G &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_ODR_G
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Sensor_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[80]"></a>LSM6DS3_G_Get_Sensitivity</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_Sensitivity))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_G_Get_Sensitivity &rArr; LSM6DS3_ACC_GYRO_R_FS_G &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_FS_G
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_FS_125
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_Axes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[7c]"></a>LSM6DS3_G_Get_WhoAmI</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Get_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LSM6DS3_G_Get_WhoAmI &rArr; LSM6DS3_Get_WhoAmI &rArr; LSM6DS3_ACC_GYRO_R_WHO_AM_I &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Get_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[78]"></a>LSM6DS3_G_Init</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_G_Init &rArr; LSM6DS3_G_Set_Axes_Status &rArr; LSM6DS3_ACC_GYRO_W_ZEN_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_FS
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_Axes_Status
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Check_WhoAmI
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_G
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_IF_Addr_Incr
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FIFO_MODE
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_BDU
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[7b]"></a>LSM6DS3_G_Sensor_Disable</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Sensor_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_G_Sensor_Disable &rArr; LSM6DS3_G_Get_ODR &rArr; LSM6DS3_ACC_GYRO_R_ODR_G &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_ODR
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_G
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[7a]"></a>LSM6DS3_G_Sensor_Enable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_G_Sensor_Enable &rArr; LSM6DS3_G_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_ODR_Value_When_Enabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[88]"></a>LSM6DS3_G_Set_Axes_Status</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_Axes_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_G_Set_Axes_Status &rArr; LSM6DS3_ACC_GYRO_W_ZEN_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ZEN_G
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_YEN_G
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_XEN_G
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[85]"></a>LSM6DS3_G_Set_FS</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_FS))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_G_Set_FS &rArr; LSM6DS3_ACC_GYRO_W_FS_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_G
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[86]"></a>LSM6DS3_G_Set_FS_Value</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_FS_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_G_Set_FS_Value &rArr; LSM6DS3_ACC_GYRO_W_FS_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_G
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_125
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[82]"></a>LSM6DS3_G_Set_ODR</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_G_Set_ODR &rArr; LSM6DS3_ACC_GYRO_W_ODR_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_G
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[83]"></a>LSM6DS3_G_Set_ODR_Value</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_ODR_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_G_Set_ODR_Value &rArr; LSM6DS3_G_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_ODR_Value_When_Enabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[392]"></a>LSM6DS3_G_Set_ODR_Value_When_Enabled</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_G_Set_ODR_Value_When_Enabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_G_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_G &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_G
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Set_ODR_Value
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Sensor_Enable
</UL>

<P><STRONG><a name="[390]"></a>LSM6DS3_Get_WhoAmI</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_Get_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LSM6DS3_Get_WhoAmI &rArr; LSM6DS3_ACC_GYRO_R_WHO_AM_I &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_WHO_AM_I
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_WhoAmI
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_G_Get_WhoAmI
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Check_WhoAmI
</UL>

<P><STRONG><a name="[6c]"></a>LSM6DS3_X_Check_WhoAmI</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Check_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_X_Check_WhoAmI &rArr; LSM6DS3_Check_WhoAmI &rArr; LSM6DS3_Get_WhoAmI &rArr; LSM6DS3_ACC_GYRO_R_WHO_AM_I &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[68]"></a>LSM6DS3_X_DeInit</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS3_X_DeInit &rArr; LSM6DS3_X_Disable_Pedometer &rArr; LSM6DS3_X_Set_Pedometer_Threshold &rArr; LSM6DS3_ACC_GYRO_W_PedoThreshold &rArr; LSM6DS3_ACC_GYRO_W_Open_RAM_Page &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Sensor_Disable
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Wake_Up_Detection
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Tilt_Detection
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Single_Tap_Detection
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Pedometer
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Free_Fall_Detection
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Double_Tap_Detection
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_6D_Orientation
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[5f]"></a>LSM6DS3_X_Disable_6D_Orientation</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_6D_Orientation))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_X_Disable_6D_Orientation &rArr; LSM6DS3_ACC_GYRO_W_6DEvOnInt1 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_6DEvOnInt1
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SIXD_THS
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[58]"></a>LSM6DS3_X_Disable_Double_Tap_Detection</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Double_Tap_Detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_X_Disable_Double_Tap_Detection &rArr; LSM6DS3_X_Set_Tap_Threshold &rArr; LSM6DS3_ACC_GYRO_W_TAP_THS &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TapEvOnInt1
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Threshold
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Shock_Time
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Quiet_Time
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Duration_Time
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Z_EN
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Y_EN
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_X_EN
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SINGLE_DOUBLE_TAP_EV
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[43]"></a>LSM6DS3_X_Disable_Free_Fall_Detection</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Free_Fall_Detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_X_Disable_Free_Fall_Detection &rArr; LSM6DS3_ACC_GYRO_W_FF_Duration &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FFEvOnInt1
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FF_THS
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FF_Duration
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[47]"></a>LSM6DS3_X_Disable_Pedometer</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Pedometer))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_X_Disable_Pedometer &rArr; LSM6DS3_X_Set_Pedometer_Threshold &rArr; LSM6DS3_ACC_GYRO_W_PedoThreshold &rArr; LSM6DS3_ACC_GYRO_W_Open_RAM_Page &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Pedometer_Threshold
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PEDO_STEP_on_INT1
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PEDO_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[55]"></a>LSM6DS3_X_Disable_Single_Tap_Detection</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Single_Tap_Detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_X_Disable_Single_Tap_Detection &rArr; LSM6DS3_X_Set_Tap_Threshold &rArr; LSM6DS3_ACC_GYRO_W_TAP_THS &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SingleTapOnInt1
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Threshold
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Shock_Time
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Quiet_Time
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Z_EN
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Y_EN
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_X_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4b]"></a>LSM6DS3_X_Disable_Step_Counter_Reset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Step_Counter_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_X_Disable_Step_Counter_Reset &rArr; LSM6DS3_ACC_GYRO_W_PedoStepReset &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PedoStepReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4e]"></a>LSM6DS3_X_Disable_Tilt_Detection</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Tilt_Detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_X_Disable_Tilt_Detection &rArr; LSM6DS3_ACC_GYRO_W_TiltEvOnInt1 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TiltEvOnInt1
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TILT_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[51]"></a>LSM6DS3_X_Disable_Wake_Up_Detection</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Disable_Wake_Up_Detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_X_Disable_Wake_Up_Detection &rArr; LSM6DS3_ACC_GYRO_W_WUEvOnInt1 &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WUEvOnInt1
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WK_THS
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WAKE_DUR
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[5e]"></a>LSM6DS3_X_Enable_6D_Orientation</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_6D_Orientation))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Enable_6D_Orientation &rArr; LSM6DS3_X_Set_ODR_Value &rArr; LSM6DS3_X_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_6DEvOnInt1
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SIXD_THS
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[57]"></a>LSM6DS3_X_Enable_Double_Tap_Detection</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Double_Tap_Detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Enable_Double_Tap_Detection &rArr; LSM6DS3_X_Set_ODR_Value &rArr; LSM6DS3_X_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TapEvOnInt1
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Threshold
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Shock_Time
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Quiet_Time
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Duration_Time
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Z_EN
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Y_EN
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_X_EN
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SINGLE_DOUBLE_TAP_EV
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[42]"></a>LSM6DS3_X_Enable_Free_Fall_Detection</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Free_Fall_Detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Enable_Free_Fall_Detection &rArr; LSM6DS3_X_Set_ODR_Value &rArr; LSM6DS3_X_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FFEvOnInt1
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Free_Fall_Threshold
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WAKE_DUR
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TIMER_HR
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SLEEP_DUR
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_XL
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FF_Duration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[46]"></a>LSM6DS3_X_Enable_Pedometer</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Pedometer))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_X_Enable_Pedometer &rArr; LSM6DS3_X_Set_Pedometer_Threshold &rArr; LSM6DS3_ACC_GYRO_W_PedoThreshold &rArr; LSM6DS3_ACC_GYRO_W_Open_RAM_Page &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Pedometer_Threshold
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PEDO_STEP_on_INT1
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PEDO_EN
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FUNC_EN
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[54]"></a>LSM6DS3_X_Enable_Single_Tap_Detection</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Single_Tap_Detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Enable_Single_Tap_Detection &rArr; LSM6DS3_X_Set_ODR_Value &rArr; LSM6DS3_X_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SingleTapOnInt1
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Threshold
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Shock_Time
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Tap_Quiet_Time
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Z_EN
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_Y_EN
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_X_EN
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4a]"></a>LSM6DS3_X_Enable_Step_Counter_Reset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Step_Counter_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_X_Enable_Step_Counter_Reset &rArr; LSM6DS3_ACC_GYRO_W_PedoStepReset &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PedoStepReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4d]"></a>LSM6DS3_X_Enable_Tilt_Detection</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Tilt_Detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Enable_Tilt_Detection &rArr; LSM6DS3_X_Set_ODR_Value &rArr; LSM6DS3_X_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TiltEvOnInt1
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TILT_EN
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FUNC_EN
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[50]"></a>LSM6DS3_X_Enable_Wake_Up_Detection</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Enable_Wake_Up_Detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Enable_Wake_Up_Detection &rArr; LSM6DS3_X_Set_ODR_Value &rArr; LSM6DS3_X_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WUEvOnInt1
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WK_THS
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WAKE_DUR
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[60]"></a>LSM6DS3_X_Get_6D_Orientation_Status</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_X_Get_6D_Orientation_Status &rArr; LSM6DS3_ACC_GYRO_R_D6D_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_D6D_EV_STATUS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[62]"></a>LSM6DS3_X_Get_6D_Orientation_XH</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_XH))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_X_Get_6D_Orientation_XH &rArr; LSM6DS3_ACC_GYRO_R_DSD_XH &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_XH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[61]"></a>LSM6DS3_X_Get_6D_Orientation_XL</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_X_Get_6D_Orientation_XL &rArr; LSM6DS3_ACC_GYRO_R_DSD_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[64]"></a>LSM6DS3_X_Get_6D_Orientation_YH</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_YH))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_X_Get_6D_Orientation_YH &rArr; LSM6DS3_ACC_GYRO_R_DSD_YH &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_YH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[63]"></a>LSM6DS3_X_Get_6D_Orientation_YL</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_YL))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_X_Get_6D_Orientation_YL &rArr; LSM6DS3_ACC_GYRO_R_DSD_YL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_YL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[66]"></a>LSM6DS3_X_Get_6D_Orientation_ZH</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_ZH))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_X_Get_6D_Orientation_ZH &rArr; LSM6DS3_ACC_GYRO_R_DSD_ZH &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_ZH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[65]"></a>LSM6DS3_X_Get_6D_Orientation_ZL</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_6D_Orientation_ZL))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_X_Get_6D_Orientation_ZL &rArr; LSM6DS3_ACC_GYRO_R_DSD_ZL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DSD_ZL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[6d]"></a>LSM6DS3_X_Get_Axes</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Axes))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LSM6DS3_X_Get_Axes &rArr; LSM6DS3_X_Get_Axes_Raw &rArr; LSM6DS3_ACC_GYRO_GetRawAccData &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Sensitivity
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Axes_Raw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[6e]"></a>LSM6DS3_X_Get_AxesRaw</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_AxesRaw))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LSM6DS3_X_Get_AxesRaw &rArr; LSM6DS3_X_Get_Axes_Raw &rArr; LSM6DS3_ACC_GYRO_GetRawAccData &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Axes_Raw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[393]"></a>LSM6DS3_X_Get_Axes_Raw</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Axes_Raw))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Get_Axes_Raw &rArr; LSM6DS3_ACC_GYRO_GetRawAccData &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_GetRawAccData
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_AxesRaw
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Axes
</UL>

<P><STRONG><a name="[76]"></a>LSM6DS3_X_Get_Axes_Status</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Axes_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_X_Get_Axes_Status &rArr; LSM6DS3_ACC_GYRO_R_ZEN_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_ZEN_XL
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_YEN_XL
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_XEN_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[59]"></a>LSM6DS3_X_Get_Double_Tap_Detection_Status</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Double_Tap_Detection_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_X_Get_Double_Tap_Detection_Status &rArr; LSM6DS3_ACC_GYRO_R_DOUBLE_TAP_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_DOUBLE_TAP_EV_STATUS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[73]"></a>LSM6DS3_X_Get_FS</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_FS))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_X_Get_FS &rArr; LSM6DS3_ACC_GYRO_R_FS_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_FS_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[44]"></a>LSM6DS3_X_Get_Free_Fall_Detection_Status</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Free_Fall_Detection_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_X_Get_Free_Fall_Detection_Status &rArr; LSM6DS3_ACC_GYRO_R_FF_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_FF_EV_STATUS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[70]"></a>LSM6DS3_X_Get_ODR</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_X_Get_ODR &rArr; LSM6DS3_ACC_GYRO_R_ODR_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_ODR_XL
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Sensor_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[48]"></a>LSM6DS3_X_Get_Pedometer_Status</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Pedometer_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_X_Get_Pedometer_Status &rArr; LSM6DS3_ACC_GYRO_R_PEDO_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_PEDO_EV_STATUS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[6f]"></a>LSM6DS3_X_Get_Sensitivity</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Sensitivity))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_X_Get_Sensitivity &rArr; LSM6DS3_ACC_GYRO_R_FS_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_FS_XL
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_Axes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[56]"></a>LSM6DS3_X_Get_Single_Tap_Detection_Status</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Single_Tap_Detection_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_X_Get_Single_Tap_Detection_Status &rArr; LSM6DS3_ACC_GYRO_R_SINGLE_TAP_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_SINGLE_TAP_EV_STATUS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[49]"></a>LSM6DS3_X_Get_Step_Count</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Step_Count))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_X_Get_Step_Count &rArr; LSM6DS3_ACC_GYRO_Get_GetStepCounter &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_Get_GetStepCounter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[4f]"></a>LSM6DS3_X_Get_Tilt_Detection_Status</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Tilt_Detection_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_X_Get_Tilt_Detection_Status &rArr; LSM6DS3_ACC_GYRO_R_TILT_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_TILT_EV_STATUS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[52]"></a>LSM6DS3_X_Get_Wake_Up_Detection_Status</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_Wake_Up_Detection_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LSM6DS3_X_Get_Wake_Up_Detection_Status &rArr; LSM6DS3_ACC_GYRO_R_WU_EV_STATUS &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_R_WU_EV_STATUS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[6b]"></a>LSM6DS3_X_Get_WhoAmI</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Get_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LSM6DS3_X_Get_WhoAmI &rArr; LSM6DS3_Get_WhoAmI &rArr; LSM6DS3_ACC_GYRO_R_WHO_AM_I &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Get_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[67]"></a>LSM6DS3_X_Init</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LSM6DS3_X_Init &rArr; LSM6DS3_X_Set_Axes_Status &rArr; LSM6DS3_ACC_GYRO_W_ZEN_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_FS
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_Axes_Status
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_Check_WhoAmI
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_XL
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_IF_Addr_Incr
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FIFO_MODE
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_BDU
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[6a]"></a>LSM6DS3_X_Sensor_Disable</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Sensor_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_X_Sensor_Disable &rArr; LSM6DS3_X_Get_ODR &rArr; LSM6DS3_ACC_GYRO_R_ODR_XL &rArr; LSM6DS3_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Get_ODR
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_XL
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[69]"></a>LSM6DS3_X_Sensor_Enable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_X_Sensor_Enable &rArr; LSM6DS3_X_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value_When_Enabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[77]"></a>LSM6DS3_X_Set_Axes_Status</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Axes_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_X_Set_Axes_Status &rArr; LSM6DS3_ACC_GYRO_W_ZEN_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ZEN_XL
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_YEN_XL
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_XEN_XL
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[74]"></a>LSM6DS3_X_Set_FS</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_FS))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_X_Set_FS &rArr; LSM6DS3_ACC_GYRO_W_FS_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_XL
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[75]"></a>LSM6DS3_X_Set_FS_Value</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_FS_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_X_Set_FS_Value &rArr; LSM6DS3_ACC_GYRO_W_FS_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FS_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[45]"></a>LSM6DS3_X_Set_Free_Fall_Threshold</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Free_Fall_Threshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_X_Set_Free_Fall_Threshold &rArr; LSM6DS3_ACC_GYRO_W_FF_THS &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_FF_THS
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Free_Fall_Detection
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[71]"></a>LSM6DS3_X_Set_ODR</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_X_Set_ODR &rArr; LSM6DS3_ACC_GYRO_W_ODR_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_XL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[72]"></a>LSM6DS3_X_Set_ODR_Value</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_ODR_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LSM6DS3_X_Set_ODR_Value &rArr; LSM6DS3_X_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value_When_Enabled
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value_When_Disabled
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Wake_Up_Detection
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Tilt_Detection
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Single_Tap_Detection
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Pedometer
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Free_Fall_Detection
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Double_Tap_Detection
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_6D_Orientation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[395]"></a>LSM6DS3_X_Set_ODR_Value_When_Disabled</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_ODR_Value_When_Disabled))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value
</UL>

<P><STRONG><a name="[394]"></a>LSM6DS3_X_Set_ODR_Value_When_Enabled</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_ODR_Value_When_Enabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_X_Set_ODR_Value_When_Enabled &rArr; LSM6DS3_ACC_GYRO_W_ODR_XL &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_ODR_XL
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Set_ODR_Value
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Sensor_Enable
</UL>

<P><STRONG><a name="[4c]"></a>LSM6DS3_X_Set_Pedometer_Threshold</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Pedometer_Threshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LSM6DS3_X_Set_Pedometer_Threshold &rArr; LSM6DS3_ACC_GYRO_W_PedoThreshold &rArr; LSM6DS3_ACC_GYRO_W_Open_RAM_Page &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_PedoThreshold
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Pedometer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Pedometer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[5d]"></a>LSM6DS3_X_Set_Tap_Duration_Time</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Tap_Duration_Time))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_X_Set_Tap_Duration_Time &rArr; LSM6DS3_ACC_GYRO_W_DUR &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_DUR
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Double_Tap_Detection
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Double_Tap_Detection
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[5c]"></a>LSM6DS3_X_Set_Tap_Quiet_Time</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Tap_Quiet_Time))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_X_Set_Tap_Quiet_Time &rArr; LSM6DS3_ACC_GYRO_W_QUIET_Duration &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_QUIET_Duration
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Single_Tap_Detection
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Double_Tap_Detection
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Single_Tap_Detection
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Double_Tap_Detection
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[5b]"></a>LSM6DS3_X_Set_Tap_Shock_Time</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Tap_Shock_Time))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_X_Set_Tap_Shock_Time &rArr; LSM6DS3_ACC_GYRO_W_SHOCK_Duration &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_SHOCK_Duration
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Single_Tap_Detection
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Double_Tap_Detection
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Single_Tap_Detection
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Double_Tap_Detection
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[5a]"></a>LSM6DS3_X_Set_Tap_Threshold</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Tap_Threshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_X_Set_Tap_Threshold &rArr; LSM6DS3_ACC_GYRO_W_TAP_THS &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_TAP_THS
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Single_Tap_Detection
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Enable_Double_Tap_Detection
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Single_Tap_Detection
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_X_Disable_Double_Tap_Detection
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[53]"></a>LSM6DS3_X_Set_Wake_Up_Threshold</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lsm6ds3_acc_gyro_driver_hl.o(i.LSM6DS3_X_Set_Wake_Up_Threshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LSM6DS3_X_Set_Wake_Up_Threshold &rArr; LSM6DS3_ACC_GYRO_W_WK_THS &rArr; LSM6DS3_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DS3_ACC_GYRO_W_WK_THS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lsm6ds3_acc_gyro_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[325]"></a>LIS3MDL_MAG_ReadReg</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lis3mdl_mag_driver.o(i.LIS3MDL_MAG_ReadReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = LIS3MDL_MAG_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_SoftRST
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_Reboot
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_OperatingModeZ
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_OperatingModeXY
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_FastLowPowerXYZ
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_TemperatureSensor
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_SystemOperatingMode
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_OutputDataRate
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_FullScale
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_BlockDataUpdate
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_R_WHO_AM_I_
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_R_OutputDataRate
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_R_FullScale
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_Get_Magnatic
</UL>

<P><STRONG><a name="[327]"></a>LIS3MDL_MAG_WriteReg</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lis3mdl_mag_driver.o(i.LIS3MDL_MAG_WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = LIS3MDL_MAG_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_SoftRST
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_Reboot
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_OperatingModeZ
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_OperatingModeXY
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_FastLowPowerXYZ
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_TemperatureSensor
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_SystemOperatingMode
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_OutputDataRate
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_FullScale
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_BlockDataUpdate
</UL>

<P><STRONG><a name="[8e]"></a>LIS3MDL_Check_WhoAmI</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lis3mdl_mag_driver_hl.o(i.LIS3MDL_Check_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LIS3MDL_Check_WhoAmI &rArr; LIS3MDL_Get_WhoAmI &rArr; LIS3MDL_MAG_R_WHO_AM_I_ &rArr; LIS3MDL_MAG_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Get_WhoAmI
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lis3mdl_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[8a]"></a>LIS3MDL_DeInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lis3mdl_mag_driver_hl.o(i.LIS3MDL_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LIS3MDL_DeInit &rArr; LIS3MDL_Sensor_Disable &rArr; LIS3MDL_MAG_W_SystemOperatingMode &rArr; LIS3MDL_MAG_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Sensor_Disable
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lis3mdl_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[8f]"></a>LIS3MDL_Get_Axes</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, lis3mdl_mag_driver_hl.o(i.LIS3MDL_Get_Axes))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LIS3MDL_Get_Axes &rArr; LIS3MDL_Get_Axes_Raw &rArr; LIS3MDL_MAG_Get_Magnatic &rArr; LIS3MDL_MAG_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Get_Sensitivity
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Get_Axes_Raw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lis3mdl_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[90]"></a>LIS3MDL_Get_AxesRaw</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lis3mdl_mag_driver_hl.o(i.LIS3MDL_Get_AxesRaw))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LIS3MDL_Get_AxesRaw &rArr; LIS3MDL_Get_Axes_Raw &rArr; LIS3MDL_MAG_Get_Magnatic &rArr; LIS3MDL_MAG_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Get_Axes_Raw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lis3mdl_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[31d]"></a>LIS3MDL_Get_Axes_Raw</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lis3mdl_mag_driver_hl.o(i.LIS3MDL_Get_Axes_Raw))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LIS3MDL_Get_Axes_Raw &rArr; LIS3MDL_MAG_Get_Magnatic &rArr; LIS3MDL_MAG_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_Get_Magnatic
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Get_AxesRaw
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Get_Axes
</UL>

<P><STRONG><a name="[95]"></a>LIS3MDL_Get_FS</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lis3mdl_mag_driver_hl.o(i.LIS3MDL_Get_FS))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LIS3MDL_Get_FS &rArr; LIS3MDL_MAG_R_FullScale &rArr; LIS3MDL_MAG_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_R_FullScale
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lis3mdl_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[92]"></a>LIS3MDL_Get_ODR</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, lis3mdl_mag_driver_hl.o(i.LIS3MDL_Get_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LIS3MDL_Get_ODR &rArr; LIS3MDL_MAG_R_OutputDataRate &rArr; LIS3MDL_MAG_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_R_OutputDataRate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lis3mdl_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[91]"></a>LIS3MDL_Get_Sensitivity</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lis3mdl_mag_driver_hl.o(i.LIS3MDL_Get_Sensitivity))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LIS3MDL_Get_Sensitivity &rArr; LIS3MDL_MAG_R_FullScale &rArr; LIS3MDL_MAG_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_R_FullScale
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Get_Axes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lis3mdl_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[8d]"></a>LIS3MDL_Get_WhoAmI</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lis3mdl_mag_driver_hl.o(i.LIS3MDL_Get_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LIS3MDL_Get_WhoAmI &rArr; LIS3MDL_MAG_R_WHO_AM_I_ &rArr; LIS3MDL_MAG_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_R_WHO_AM_I_
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lis3mdl_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[89]"></a>LIS3MDL_Init</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, lis3mdl_mag_driver_hl.o(i.LIS3MDL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LIS3MDL_Init &rArr; LIS3MDL_Set_ODR &rArr; LIS3MDL_MAG_W_OutputDataRate &rArr; LIS3MDL_MAG_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_OperatingModeXY
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Set_ODR
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Set_FS
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Check_WhoAmI
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_TemperatureSensor
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_SystemOperatingMode
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_BlockDataUpdate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lis3mdl_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[8c]"></a>LIS3MDL_Sensor_Disable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lis3mdl_mag_driver_hl.o(i.LIS3MDL_Sensor_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LIS3MDL_Sensor_Disable &rArr; LIS3MDL_MAG_W_SystemOperatingMode &rArr; LIS3MDL_MAG_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_SystemOperatingMode
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lis3mdl_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[8b]"></a>LIS3MDL_Sensor_Enable</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lis3mdl_mag_driver_hl.o(i.LIS3MDL_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LIS3MDL_Sensor_Enable &rArr; LIS3MDL_MAG_W_SystemOperatingMode &rArr; LIS3MDL_MAG_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_SystemOperatingMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lis3mdl_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[96]"></a>LIS3MDL_Set_FS</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lis3mdl_mag_driver_hl.o(i.LIS3MDL_Set_FS))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LIS3MDL_Set_FS &rArr; LIS3MDL_MAG_W_FullScale &rArr; LIS3MDL_MAG_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_FullScale
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lis3mdl_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[97]"></a>LIS3MDL_Set_FS_Value</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lis3mdl_mag_driver_hl.o(i.LIS3MDL_Set_FS_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LIS3MDL_Set_FS_Value &rArr; LIS3MDL_MAG_W_FullScale &rArr; LIS3MDL_MAG_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_FullScale
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lis3mdl_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[93]"></a>LIS3MDL_Set_ODR</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lis3mdl_mag_driver_hl.o(i.LIS3MDL_Set_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LIS3MDL_Set_ODR &rArr; LIS3MDL_MAG_W_OutputDataRate &rArr; LIS3MDL_MAG_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_OutputDataRate
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lis3mdl_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[94]"></a>LIS3MDL_Set_ODR_Value</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, lis3mdl_mag_driver_hl.o(i.LIS3MDL_Set_ODR_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LIS3MDL_Set_ODR_Value &rArr; LIS3MDL_MAG_W_OutputDataRate &rArr; LIS3MDL_MAG_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3MDL_MAG_W_OutputDataRate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lis3mdl_mag_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[331]"></a>LPS25HB_ReadReg</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lps25hb_driver.o(i.LPS25HB_ReadReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_AvgT
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_AvgP
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_MemoryBoot
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_SpiInterface
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_PowerDownMode
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Odr
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_InterruptCircuitEnable
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Bdu
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Avg
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_RawTemperature
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_RawPressure
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_Odr
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_DeviceID
</UL>

<P><STRONG><a name="[33e]"></a>LPS25HB_WriteReg</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lps25hb_driver.o(i.LPS25HB_WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_AvgT
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_AvgP
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_MemoryBoot
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_SpiInterface
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_PowerDownMode
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Odr
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_InterruptCircuitEnable
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Bdu
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Avg
</UL>

<P><STRONG><a name="[32d]"></a>LPS25HB_Check_WhoAmI</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_Check_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LPS25HB_Check_WhoAmI &rArr; LPS25HB_Get_WhoAmI &rArr; LPS25HB_Get_DeviceID &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_WhoAmI
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Check_WhoAmI
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Check_WhoAmI
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Init
</UL>

<P><STRONG><a name="[332]"></a>LPS25HB_Get_ODR</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_Get_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LPS25HB_Get_ODR &rArr; LPS25HB_Get_Odr &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_Odr
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Get_ODR
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Get_ODR
</UL>

<P><STRONG><a name="[32e]"></a>LPS25HB_Get_WhoAmI</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_Get_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LPS25HB_Get_WhoAmI &rArr; LPS25HB_Get_DeviceID &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_DeviceID
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Get_WhoAmI
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Get_WhoAmI
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Check_WhoAmI
</UL>

<P><STRONG><a name="[338]"></a>LPS25HB_Init</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LPS25HB_Init &rArr; LPS25HB_Check_WhoAmI &rArr; LPS25HB_Get_WhoAmI &rArr; LPS25HB_Get_DeviceID &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_ODR
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Check_WhoAmI
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_SpiInterface
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_InterruptCircuitEnable
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Bdu
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Avg
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_DeActivate
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Init
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Init
</UL>

<P><STRONG><a name="[9d]"></a>LPS25HB_P_Check_WhoAmI</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lps25hb_driver_hl.o(i.LPS25HB_P_Check_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LPS25HB_P_Check_WhoAmI &rArr; LPS25HB_Check_WhoAmI &rArr; LPS25HB_Get_WhoAmI &rArr; LPS25HB_Get_DeviceID &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[99]"></a>LPS25HB_P_DeInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_P_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LPS25HB_P_DeInit &rArr; LPS25HB_P_Sensor_Disable &rArr; LPS25HB_Sensor_Disable &rArr; LPS25HB_DeActivate &rArr; LPS25HB_Set_PowerDownMode &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Sensor_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[9f]"></a>LPS25HB_P_Get_ODR</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lps25hb_driver_hl.o(i.LPS25HB_P_Get_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LPS25HB_P_Get_ODR &rArr; LPS25HB_Get_ODR &rArr; LPS25HB_Get_Odr &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_ODR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[9e]"></a>LPS25HB_P_Get_Press</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_P_Get_Press))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LPS25HB_P_Get_Press &rArr; LPS25HB_Get_Pressure &rArr; LPS25HB_Get_RawPressure &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_Pressure
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[9c]"></a>LPS25HB_P_Get_WhoAmI</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lps25hb_driver_hl.o(i.LPS25HB_P_Get_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LPS25HB_P_Get_WhoAmI &rArr; LPS25HB_Get_WhoAmI &rArr; LPS25HB_Get_DeviceID &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[98]"></a>LPS25HB_P_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_P_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LPS25HB_P_Init &rArr; LPS25HB_Init &rArr; LPS25HB_Check_WhoAmI &rArr; LPS25HB_Get_WhoAmI &rArr; LPS25HB_Get_DeviceID &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[9b]"></a>LPS25HB_P_Sensor_Disable</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_P_Sensor_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LPS25HB_P_Sensor_Disable &rArr; LPS25HB_Sensor_Disable &rArr; LPS25HB_DeActivate &rArr; LPS25HB_Set_PowerDownMode &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Sensor_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[9a]"></a>LPS25HB_P_Sensor_Enable</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_P_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LPS25HB_P_Sensor_Enable &rArr; LPS25HB_Sensor_Enable &rArr; LPS25HB_Activate &rArr; LPS25HB_Set_PowerDownMode &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Sensor_Enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[a0]"></a>LPS25HB_P_Set_ODR</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lps25hb_driver_hl.o(i.LPS25HB_P_Set_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LPS25HB_P_Set_ODR &rArr; LPS25HB_Set_ODR &rArr; LPS25HB_Set_Odr &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_ODR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[a1]"></a>LPS25HB_P_Set_ODR_Value</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lps25hb_driver_hl.o(i.LPS25HB_P_Set_ODR_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LPS25HB_P_Set_ODR_Value &rArr; LPS25HB_Set_ODR_Value &rArr; LPS25HB_Set_Odr &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_ODR_Value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[33f]"></a>LPS25HB_Sensor_Disable</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_Sensor_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LPS25HB_Sensor_Disable &rArr; LPS25HB_DeActivate &rArr; LPS25HB_Set_PowerDownMode &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_DeActivate
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Sensor_Disable
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Sensor_Disable
</UL>

<P><STRONG><a name="[340]"></a>LPS25HB_Sensor_Enable</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LPS25HB_Sensor_Enable &rArr; LPS25HB_Activate &rArr; LPS25HB_Set_PowerDownMode &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Activate
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Sensor_Enable
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Sensor_Enable
</UL>

<P><STRONG><a name="[339]"></a>LPS25HB_Set_ODR</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_Set_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LPS25HB_Set_ODR &rArr; LPS25HB_Set_Odr &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Odr
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Set_ODR
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Set_ODR
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Init
</UL>

<P><STRONG><a name="[341]"></a>LPS25HB_Set_ODR_Value</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_Set_ODR_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LPS25HB_Set_ODR_Value &rArr; LPS25HB_Set_Odr &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_Odr
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Set_ODR_Value
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_P_Set_ODR_Value
</UL>

<P><STRONG><a name="[a7]"></a>LPS25HB_T_Check_WhoAmI</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lps25hb_driver_hl.o(i.LPS25HB_T_Check_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LPS25HB_T_Check_WhoAmI &rArr; LPS25HB_Check_WhoAmI &rArr; LPS25HB_Get_WhoAmI &rArr; LPS25HB_Get_DeviceID &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Check_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[a3]"></a>LPS25HB_T_DeInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_T_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LPS25HB_T_DeInit &rArr; LPS25HB_T_Sensor_Disable &rArr; LPS25HB_Sensor_Disable &rArr; LPS25HB_DeActivate &rArr; LPS25HB_Set_PowerDownMode &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_Sensor_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[a9]"></a>LPS25HB_T_Get_ODR</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lps25hb_driver_hl.o(i.LPS25HB_T_Get_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LPS25HB_T_Get_ODR &rArr; LPS25HB_Get_ODR &rArr; LPS25HB_Get_Odr &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_ODR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[a8]"></a>LPS25HB_T_Get_Temp</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lps25hb_driver_hl.o(i.LPS25HB_T_Get_Temp))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LPS25HB_T_Get_Temp &rArr; LPS25HB_Get_Temperature &rArr; LPS25HB_Get_RawTemperature &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_Temperature
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[a6]"></a>LPS25HB_T_Get_WhoAmI</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lps25hb_driver_hl.o(i.LPS25HB_T_Get_WhoAmI))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LPS25HB_T_Get_WhoAmI &rArr; LPS25HB_Get_WhoAmI &rArr; LPS25HB_Get_DeviceID &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Get_WhoAmI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[a2]"></a>LPS25HB_T_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_T_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LPS25HB_T_Init &rArr; LPS25HB_Init &rArr; LPS25HB_Check_WhoAmI &rArr; LPS25HB_Get_WhoAmI &rArr; LPS25HB_Get_DeviceID &rArr; LPS25HB_ReadReg &rArr; Sensor_IO_Read &rArr; Sensors_SPI_Read &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[a5]"></a>LPS25HB_T_Sensor_Disable</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_T_Sensor_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LPS25HB_T_Sensor_Disable &rArr; LPS25HB_Sensor_Disable &rArr; LPS25HB_DeActivate &rArr; LPS25HB_Set_PowerDownMode &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Sensor_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_T_DeInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[a4]"></a>LPS25HB_T_Sensor_Enable</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lps25hb_driver_hl.o(i.LPS25HB_T_Sensor_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LPS25HB_T_Sensor_Enable &rArr; LPS25HB_Sensor_Enable &rArr; LPS25HB_Activate &rArr; LPS25HB_Set_PowerDownMode &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Sensor_Enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[aa]"></a>LPS25HB_T_Set_ODR</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lps25hb_driver_hl.o(i.LPS25HB_T_Set_ODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LPS25HB_T_Set_ODR &rArr; LPS25HB_Set_ODR &rArr; LPS25HB_Set_Odr &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_ODR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[ab]"></a>LPS25HB_T_Set_ODR_Value</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lps25hb_driver_hl.o(i.LPS25HB_T_Set_ODR_Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LPS25HB_T_Set_ODR_Value &rArr; LPS25HB_Set_ODR_Value &rArr; LPS25HB_Set_Odr &rArr; LPS25HB_WriteReg &rArr; Sensor_IO_Write &rArr; Sensors_SPI_Write &rArr; SPIx_Error &rArr; SensorsSpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPS25HB_Set_ODR_Value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lps25hb_driver_hl.o(.data)
</UL>
<P><STRONG><a name="[12f]"></a>TemporalMetaClassifier</STRONG> (Thumb, 408 bytes, Stack size 24 bytes, osx_motion_ar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TemporalMetaClassifier &rArr; GetSumOfBits
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSumOfBits
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityRecognizerFunction
</UL>

<P><STRONG><a name="[143]"></a>DecisionTreeActivity</STRONG> (Thumb, 1884 bytes, Stack size 36 bytes, osx_motion_ar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DecisionTreeActivity
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityRecognizerFunction
</UL>

<P><STRONG><a name="[131]"></a>ActivityRecognizerFunction</STRONG> (Thumb, 2872 bytes, Stack size 224 bytes, osx_motion_ar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = ActivityRecognizerFunction &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecisionTreeActivity
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TemporalMetaClassifier
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MAR_CoreAPI_Update
</UL>

<P><STRONG><a name="[144]"></a>rotVect</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, osx_motion_ar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = rotVect &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MAR_CoreAPI_Update
</UL>

<P><STRONG><a name="[146]"></a>iNemo_setOrientation_Acc</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, osx_motion_ar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = iNemo_setOrientation_Acc
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MAR_CoreAPI_SetOrientation_Acc
</UL>

<P><STRONG><a name="[111]"></a>osx_MAR_CoreAPI_Initialize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osx_motion_ar.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_ar.o(.constdata)
</UL>
<P><STRONG><a name="[113]"></a>osx_MAR_CoreAPI_Update</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, osx_motion_ar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = osx_MAR_CoreAPI_Update &rArr; ActivityRecognizerFunction &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotVect
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityRecognizerFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_ar.o(.constdata)
</UL>
<P><STRONG><a name="[112]"></a>osx_MAR_CoreAPI_SetOrientation_Acc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, osx_motion_ar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osx_MAR_CoreAPI_SetOrientation_Acc &rArr; iNemo_setOrientation_Acc
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_setOrientation_Acc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_ar.o(.constdata)
</UL>
<P><STRONG><a name="[114]"></a>osx_MAR_CoreAPI_GetLibVersion</STRONG> (Thumb, 36 bytes, Stack size 48 bytes, osx_motion_ar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = osx_MAR_CoreAPI_GetLibVersion &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_ar.o(.constdata)
</UL>
<P><STRONG><a name="[130]"></a>GetSumOfBits</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, osx_motion_ar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetSumOfBits
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TemporalMetaClassifier
</UL>

<P><STRONG><a name="[153]"></a>DecisionTree3</STRONG> (Thumb, 162 bytes, Stack size 20 bytes, osx_motion_cp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DecisionTree3
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryPositionDecisionTree
</UL>

<P><STRONG><a name="[152]"></a>CarryPositionDecisionTree</STRONG> (Thumb, 194 bytes, Stack size 56 bytes, osx_motion_cp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = CarryPositionDecisionTree &rArr; DecisionTree3
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecisionTree3
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryPositionRecognizerFunction
</UL>

<P><STRONG><a name="[154]"></a>TemporalMetaClassifier</STRONG> (Thumb, 226 bytes, Stack size 24 bytes, osx_motion_cp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TemporalMetaClassifier &rArr; GetSumOfBits
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSumOfBits
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryPositionRecognizerFunction
</UL>

<P><STRONG><a name="[156]"></a>CarryPositionRecognizerFunction</STRONG> (Thumb, 1994 bytes, Stack size 248 bytes, osx_motion_cp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = CarryPositionRecognizerFunction &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TemporalMetaClassifier
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryPositionDecisionTree
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MCP_CoreAPI_Update
</UL>

<P><STRONG><a name="[159]"></a>rotVect</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, osx_motion_cp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = rotVect &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MCP_CoreAPI_Update
</UL>

<P><STRONG><a name="[15a]"></a>iNemo_setOrientation_Acc</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, osx_motion_cp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = iNemo_setOrientation_Acc
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_MCP_CoreAPI_SetOrientation_Acc
</UL>

<P><STRONG><a name="[115]"></a>osx_MCP_CoreAPI_Initialize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osx_motion_cp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_cp.o(.constdata)
</UL>
<P><STRONG><a name="[117]"></a>osx_MCP_CoreAPI_Update</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, osx_motion_cp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = osx_MCP_CoreAPI_Update &rArr; CarryPositionRecognizerFunction &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotVect
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryPositionRecognizerFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_cp.o(.constdata)
</UL>
<P><STRONG><a name="[116]"></a>osx_MCP_CoreAPI_SetOrientation_Acc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, osx_motion_cp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osx_MCP_CoreAPI_SetOrientation_Acc &rArr; iNemo_setOrientation_Acc
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_setOrientation_Acc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_cp.o(.constdata)
</UL>
<P><STRONG><a name="[118]"></a>osx_MCP_CoreAPI_GetLibVersion</STRONG> (Thumb, 36 bytes, Stack size 48 bytes, osx_motion_cp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = osx_MCP_CoreAPI_GetLibVersion &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_cp.o(.constdata)
</UL>
<P><STRONG><a name="[155]"></a>GetSumOfBits</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, osx_motion_cp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetSumOfBits
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TemporalMetaClassifier
</UL>

<P><STRONG><a name="[15f]"></a>m_norm_eml</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = m_norm_eml &rArr; sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[160]"></a>m_q2dcm_eml</STRONG> (Thumb, 310 bytes, Stack size 48 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = m_q2dcm_eml &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_update
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointAlgorithm
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[171]"></a>AsyncHeadway_initialize</STRONG> (Thumb, 134 bytes, Stack size 12 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = AsyncHeadway_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_enable_9X
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_enable_6X
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_initialize
</UL>

<P><STRONG><a name="[162]"></a>m_dcm2q_eml</STRONG> (Thumb, 366 bytes, Stack size 32 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = m_dcm2q_eml &rArr; sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[164]"></a>IsNotFlat</STRONG> (Thumb, 792 bytes, Stack size 64 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = IsNotFlat &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eCompass_Offset
</UL>

<P><STRONG><a name="[166]"></a>eCompass_Offset</STRONG> (Thumb, 1554 bytes, Stack size 216 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = eCompass_Offset &rArr; IsNotFlat &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsNotFlat
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
</UL>

<P><STRONG><a name="[125]"></a>compass_API_Init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = compass_API_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[126]"></a>compass_API_SaveAcc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[127]"></a>compass_API_SaveMag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[168]"></a>stDev</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = stDev &rArr; pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compass_API_Run
</UL>

<P><STRONG><a name="[128]"></a>compass_API_Run</STRONG> (Thumb, 992 bytes, Stack size 88 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = compass_API_Run &rArr; eCompass_Offset &rArr; IsNotFlat &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stDev
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eCompass_Offset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[129]"></a>compass_API_IsCalibrated</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[12a]"></a>compass_API_ForceReCalibration</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[12b]"></a>getCalibrationData</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[12c]"></a>setCalibrationData</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[16b]"></a>findDirection</STRONG> (Thumb, 568 bytes, Stack size 40 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = findDirection &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_quat2heading
</UL>

<P><STRONG><a name="[16c]"></a>iNemo_quat2heading</STRONG> (Thumb, 432 bytes, Stack size 48 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = iNemo_quat2heading &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findDirection
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_Update
</UL>

<P><STRONG><a name="[16e]"></a>iNemoEngine_9p6_setOrientation</STRONG> (Thumb, 1454 bytes, Stack size 40 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = iNemoEngine_9p6_setOrientation
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memclr4_9
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_setKnobs
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_initialize
</UL>

<P><STRONG><a name="[119]"></a>iNemoEngine_API_initialize</STRONG> (Thumb, 814 bytes, Stack size 40 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = iNemoEngine_API_initialize &rArr; iNemoEngine_9p6_setOrientation
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memclr4_9
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_setOrientation
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsyncHeadway_initialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[11a]"></a>iNemoEngine_API_setKnobs</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = iNemoEngine_API_setKnobs &rArr; iNemoEngine_9p6_setOrientation
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_setOrientation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[11b]"></a>iNemoEngine_API_getKnobs</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = iNemoEngine_API_getKnobs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[11c]"></a>iNemoEngine_API_get_status_6X</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[11d]"></a>iNemoEngine_API_get_status_9X</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[11e]"></a>iNemoEngine_API_enable_6X</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = iNemoEngine_API_enable_6X &rArr; AsyncHeadway_initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsyncHeadway_initialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[11f]"></a>iNemoEngine_API_enable_9X</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = iNemoEngine_API_enable_9X &rArr; AsyncHeadway_initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsyncHeadway_initialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[120]"></a>iNemoEngine_API_setGbias</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = iNemoEngine_API_setGbias &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[121]"></a>iNemoEngine_API_getGbias</STRONG> (Thumb, 254 bytes, Stack size 24 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = iNemoEngine_API_getGbias &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[172]"></a>m_qmult_eml</STRONG> (Thumb, 322 bytes, Stack size 128 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = m_qmult_eml &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroPropRedist
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointCorrection
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Propagate
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroProp
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[174]"></a>m_mldivide</STRONG> (Thumb, 730 bytes, Stack size 144 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = m_mldivide &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[175]"></a>m_interp1q_constrain</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = m_interp1q_constrain &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[178]"></a>m_kalman_3gyro</STRONG> (Thumb, 15910 bytes, Stack size 1696 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1860<LI>Call Chain = m_kalman_3gyro &rArr; m_mldivide &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove4
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmax
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memset4_12
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_std
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_b_interp1q_constrain
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_interp1q_constrain
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_mldivide
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_qmult_eml
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_dcm2q_eml
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_q2dcm_eml
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_norm_eml
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointAlgorithm
</UL>

<P><STRONG><a name="[181]"></a>SpacePointAlgorithm</STRONG> (Thumb, 1152 bytes, Stack size 264 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2124<LI>Call Chain = SpacePointAlgorithm &rArr; m_kalman_3gyro &rArr; m_mldivide &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_q2dcm_eml
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
</UL>

<P><STRONG><a name="[182]"></a>rotVect</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = rotVect &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Propagate
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
</UL>

<P><STRONG><a name="[122]"></a>iNemoEngine_API_Update</STRONG> (Thumb, 738 bytes, Stack size 104 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2780<LI>Call Chain = iNemoEngine_API_Update &rArr; iNemoEngine_9p6_Update &rArr; SpacePointAlgorithm &rArr; m_kalman_3gyro &rArr; m_mldivide &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Update
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemo_quat2heading
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[188]"></a>output_update</STRONG> (Thumb, 522 bytes, Stack size 96 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = output_update &rArr; m_q2ypr2_eml &rArr; m_rt_atan2f_snf &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_q2ypr2_eml
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_q2dcm_eml
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Propagate
</UL>

<P><STRONG><a name="[189]"></a>SpacePointGyroProp</STRONG> (Thumb, 368 bytes, Stack size 56 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = SpacePointGyroProp &rArr; m_qmult_eml &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_qmult_eml
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Propagate
</UL>

<P><STRONG><a name="[123]"></a>iNemoEngine_API_Propagate</STRONG> (Thumb, 300 bytes, Stack size 24 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = iNemoEngine_API_Propagate &rArr; iNemoEngine_9p6_Propagate &rArr; output_update &rArr; m_q2ypr2_eml &rArr; m_rt_atan2f_snf &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Propagate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[124]"></a>iNemoEngine_API_Get_Lib_Version</STRONG> (Thumb, 46 bytes, Stack size 48 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = iNemoEngine_API_Get_Lib_Version
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osx_motion_fx.o(.constdata)
</UL>
<P><STRONG><a name="[17f]"></a>m_b_interp1q_constrain</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = m_b_interp1q_constrain &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_kalman_3gyro
</UL>

<P><STRONG><a name="[184]"></a>iNemoEngine_9p6_Update</STRONG> (Thumb, 1724 bytes, Stack size 552 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2676<LI>Call Chain = iNemoEngine_9p6_Update &rArr; SpacePointAlgorithm &rArr; m_kalman_3gyro &rArr; m_mldivide &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotVect_6X
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotVect
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointAlgorithm
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_Update
</UL>

<P><STRONG><a name="[186]"></a>m_rt_atan2f_snf</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = m_rt_atan2f_snf &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_q2ypr2_eml
</UL>

<P><STRONG><a name="[18a]"></a>iNemoEngine_9p6_Propagate</STRONG> (Thumb, 1962 bytes, Stack size 160 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = iNemoEngine_9p6_Propagate &rArr; output_update &rArr; m_q2ypr2_eml &rArr; m_rt_atan2f_snf &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotVect_6X
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroPropRedist
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointCorrection
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpacePointGyroProp
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_update
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rotVect
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_qmult_eml
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_API_Propagate
</UL>

<P><STRONG><a name="[1a8]"></a>SpacePointCorrection</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = SpacePointCorrection &rArr; m_qmult_eml &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_qmult_eml
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Propagate
</UL>

<P><STRONG><a name="[1a7]"></a>SpacePointGyroPropRedist</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, osx_motion_fx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = SpacePointGyroPropRedist &rArr; m_qmult_eml &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_qmult_eml
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iNemoEngine_9p6_Propagate
</UL>

<P><STRONG><a name="[1ab]"></a>osx_LibLocker_GetLibrary</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, osxLibraryLocker100_CM3_Keil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osx_LibLocker_GetLibrary
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_UnwrapAPIs
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_SetHandle
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_IsNodeFree
</UL>

<P><STRONG><a name="[1aa]"></a>osx_LibLocker_Decrypt16</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, osxLibraryLocker100_CM3_Keil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = osx_LibLocker_Decrypt16
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Decrypt32
</UL>

<P><STRONG><a name="[1a9]"></a>osx_LibLocker_Decrypt32</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, osxLibraryLocker100_CM3_Keil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osx_LibLocker_Decrypt32 &rArr; osx_LibLocker_Decrypt16
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Decrypt16
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_RegisterLicense
</UL>

<P><STRONG><a name="[1ac]"></a>osx_LibLocker_RetrieveUID</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, osxLibraryLocker100_CM3_Keil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osx_LibLocker_RetrieveUID
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_UnwrapAPIs
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osx_LibLocker_Authenticate
</UL>

<P><STRONG><a name="[427]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[41d]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsnprintf
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[429]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[428]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[f8]"></a>_snputc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, printfa.o(i._snputc))
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0vsnprintf)
</UL>
<P><STRONG><a name="[f7]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL>
<P><STRONG><a name="[f1]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
